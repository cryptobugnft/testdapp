{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["window","$","short_acct","CONFIG","ABI","account","nftcontract","defSymbol","totalGasLimit","walletBalanceAPI","scannerAPI","balanceAPI","resultAPICall","CONFIGWhitelist","stakingnftcontract","rewardcontract","nitrocontract","nftlevelcontract","stakingnft_address","nitroboost_address","web3","localStorage","getItem","rewardInDetail","vaultSelected","amtNitro","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleWindowSizeChange","setState","width","innerWidth","state","addEventListener","removeEventListener","isMobile","delay","Promise","resolve","setTimeout","connectwallet","_connectwallet","apply","arguments","asyncToGenerator","_regeneratorRuntime","mark","_callee","configResponse","accounts","networkId","abiResponse","abiWhitelist","sWallBal","wrap","_context","prev","next","ethereum","fetch","headers","Content-Type","Accept","sent","json","Web3","send","eth","getAccounts","request","method","MAINNET","ID","TESTNET","SYMBOL","GAS_LIMIT","API","BALANCE","WALLET","ABIFetch","TOKENREWARD","MAINDAPP","STAKING","NITROBOOST","RUSHLEVEL","LEVELING","toUpperCase","TESTDAPP","onGoingNotif","document","getElementById","style","WalletBalance","innerHTML","APICall","listNFTFilter","stakeVaults","setInterval","RewardInquiry","setItem","confirm","t0","console","log","stop","RefreshCollection","_RefreshCollection","_callee2","nftCol","_context2","abrupt","value","listNFT","_x","_x2","_APICall","_callee3","theURL","apiResponse","jsonParsedContents","_context3","APIBalanceCall","_x3","_x4","_x5","_APIBalanceCall","_callee4","_account","_CA","_context4","replace","_x6","_WalletBalance","_callee5","earnedrwd","rewards","_context5","utils","fromWei","result","Number","toFixed","claimVault","_x7","_claimVault","_callee6","_vaultId","_vault","_tkIDs","i","balanceOfOwner","j","_tkID","_context6","methods","Vault","nftAddress","balanceOf","tokenOfOwnerByIndex","nftStake","owner","push","claim","from","refreshDAppView","modifyVault","_x8","_x9","_modifyVault","_callee8","_vaultContract","tab_container","_contractAddress","_vId","_context8","UnstakeMenuControl","length","type","contractAddress","getVaultId","ERC721","renderNFT","_x10","_onGoingNotif","_callee9","msg","btnConnect","img","_context9","hideCover","ex","substring","createElement","className","setAttribute","appendChild","showCover","unstakeVault","_x11","_unstakeVault","_callee10","_context10","unstake","GetNFTLevel","_x12","_x13","_GetNFTLevel","_callee11","nftLevel","_context11","getNFTLevel","concat","_RewardInquiry","_callee12","_stakeCount","balanceOfVault","_symbol","contractAdress","divPend","_pendingRewards","_pend","earned","objNFTPend","objNFTLvl","_nitroStakeRemaining","nitroID","remain","_glowNum","sec_num","hours","minutes","seconds","_context12","includes","symbol","pendingRewardByAccount","String","split","pendingReward","getTokenPowerUp","getLevelBonus","nitroStakeRemaining","getRareType","parseInt","Math","floor","getElementsByTagName","t1","t2","_x14","_x15","_x16","_UnstakeMenuControl","_callee13","btnBack","btnClaim","btnUnstake","_btnBack","_btnClaim","_btnUnstake","_context13","display","classList","add","removeAttribute","remove","_x17","_stakeVaults","_callee15","DivContainer","usrVaultCount","usrCurrVault","_i","nftName","tokenMetadataURI","tokenMetadata","_context15","active","name","tokenURI","startsWith","then","response","_callee14","cardVault","cardVaultCard","cardVaultFront","imgNFT","vid_source","cardVaultDetails","cardH4","cardSpan","cardVaultBack","cardButtonClaim","cardButtonUnstake","cardButtonModify","_context14","id","color","onclick","_x18","_x19","_x20","_x21","_listNFT","_callee16","filterList","userNFTHold","btnStakeAll","btnStakeSelected","key","ctr","_i2","_context16","keys","NFT","done","ADDRESS","t3","t4","t5","t6","t7","ShowNFTError","t8","_x22","_x23","_x24","_ABIFetch","_callee17","_abi","_address","_contract","ABIResponse","ABIJSON","_context17","Contract","_x25","_listNFTFilter","_callee18","lstNFT","z_1","t_1","z","t","_context18","createTextNode","balance","fetchNFTImage","_x26","_x27","_x28","_x29","_fetchNFTImage","_callee19","tkID","_caller","_context19","_x30","_x31","_x32","_x33","_x34","_renderNFT","_callee21","isStaked","nftContainer","nftCard","nftTable","nftMedia","nftLvl","nftChk","nftLbl","nftImg","nftAtt","nftTxt1","nftTxt2","nftBtn","_loop","_context21","_callee20","_nftStakeInfo","_imgFix","_context20","htmlFor","showPrompt","showPromptTransfer","UnstakeSelected","_UnstakeSelected","_callee24","_context24","ClaimThem","ClaimSelected","_ClaimSelected","_callee25","_context25","BackToCollection","_BackToCollection","_callee26","_context26","_x40","_ClaimThem","_callee27","_DivContainer","children","elements","child","tkIDs","nft","_context27","checked","StakeAll","_StakeAll","_callee29","_isNFTAppr","address","_context29","nftApproveAll","isWhitelist","stake","stakeAny","StakeThem","_StakeThem","_callee30","_DivContainer2","_context30","_refreshDAppView","_callee31","_context31","_x45","_nftApproveAll","_callee32","_nftcontract","_context32","isApprovedForAll","setApprovalForAll","_x46","_isWhitelist","_callee33","_res","_context33","_x47","_ShowNFTError","_callee34","msgValue","curDiv","chk","lbl","objNFT","_context34","_showCover","_callee35","coverDiv","_context35","body","overflowY","append","SendNFT","_x48","_x49","_x50","_SendNFT","_callee36","nftAdd","destiAdd","_context36","safeTransferFrom","NitroAdd","_NitroAdd","_callee37","_DivContainer3","_nitroId","_context37","gasLimit","stakeNitro","_hideCover","_callee38","_context38","_x51","_x52","_showPromptTransfer","_callee39","text","callback","_nft","_nftName","form","container","h6NFTAddy","txAdd","h6Caption","x","complete","_context39","onkeydown","placeholder","onsubmit","cancel","e","_x53","_x54","_showPrompt","_callee42","lastClass","_loop3","_context42","_callee41","nitCard","nitTable","nitTR","nitTD1","nitchk","nitlbl","nitTD2","nitAtt1","nitAtt2","nitAtt3","_context41","NitroMint","_x55","_NitroMint","_callee43","pID","totalCostWei","totalCost","_allow","_maxSupp","_token","_tokencontract","_txRejected","_context43","getNitroPrice","allowance","totalSupply","toWei","getCryptotoken","approve","on","error","receipt","catch","mint","to","confirmationNumber","BtnSelected","_x56","_BtnSelected","_callee44","amt","_context44","react_default","a","class","fontFamily","fontWeight","fontSize","href","src","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","ButtonGroup","size","boxShadow","Button","onClick","role","alt","Tabs","defaultActiveKey","Tab","eventKey","title","onChange","selected","marginBottom","marginLeft","marginRight","clear","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.0caa3e9f.chunk.js","sourcesContent":["import './App.css';\nimport { Button, ButtonGroup, Modal } from 'react-bootstrap';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component, createElement } from 'react';\n\nimport 'sf-font';\n\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Web3 from 'web3';\n\nimport { useEffect } from \"react\"\nimport { accessListify } from 'ethers/lib/utils';\nimport { First } from 'react-bootstrap/esm/PageItem';\n\nimport NFTStakeABI from './RushNFTStaking.json';\nimport NitroBoostABI from './NitroBoost.json';\n\nimport { useWeb3React } from \"@web3-react/core\"  \n\nconst $ = window.$;\n\nvar CONFIG = null;\nvar ABI = null;\nvar account = null;\nvar nftcontract = null;\n\nvar defSymbol = null;\nvar totalGasLimit = null;\n\nvar walletBalanceAPI = null;\nvar scannerAPI = null;\nvar balanceAPI = null;\nvar resultAPICall = null;\nvar CONFIGWhitelist = null;\n\nvar nftName = null;\n\nvar stakingnftcontract = null;\nvar rewardcontract = null;\nvar nitrocontract = null;\nvar nftlevelcontract = null;\n\nvar stakingnft_address = null;\nvar nitroboost_address = null;\n\nvar acc = localStorage.getItem(\"account\");\nvar short_acct;\n\nvar web3 = null;\nvar contract = null;\n\nvar rewardInDetail = false;\nvar vaultSelected = null;\n\nvar amtNitro = 0;\n \n\n/* var refresh_screen;\n$(function () {\n  refresh_screen = function (_text) {\n    $(\".loader\").fadeOut(1000);\n    $(\".content\").fadeIn(1000);\n  }\n}); */\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      width: window.innerWidth,\n    };\n\n  }\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n  handleWindowSizeChange = () => {\n    this.setState({ width: window.innerWidth });\n  };\n\n  componentDidUpdate(){\n    /* const connectWalletOnPageLoad = async () => {\n      if (localStorage.getItem('isWalletConnected') === 'true') {\n        try {\n          await activate(injected)\n          localStorage.setItem('isWalletConnected', true)\n        } catch (ex) {\n          console.log(ex)\n        }\n      }\n    }\n    connectWalletOnPageLoad() */\n  }\n  \n \n  render() {\n    const { width } = this.state;\n    const isMobile = width <= 300;\n\n    let nftcost = '';\n  \n    const sleep = (milliseconds) => {\n      return new Promise(resolve => setTimeout(resolve, milliseconds))\n    }\n  \n    function delay() { \n      return new Promise(resolve => setTimeout(resolve, 300));\n    }\n\n    \n    async function connectwallet() {\n      try {\n        if (window.ethereum) {\n\n          const configResponse = await fetch(\"/config/config.json\", {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n          });\n          CONFIG = await configResponse.json();\n\n          web3 = new Web3(window.ethereum);\n\n\n          await window.ethereum.send('eth_requestAccounts');\n          var accounts = await web3.eth.getAccounts();\n          account = accounts[0];\n\n          const networkId = await window.ethereum.request({\n            method: \"net_version\",\n          });\n\n          if ((networkId == CONFIG.MAINNET.ID) || (networkId == CONFIG.TESTNET.ID)) {\n\n            const abiResponse = await fetch(\"/config/abi.json\", {\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\",\n              },\n            });\n            ABI = await abiResponse.json();\n\n            var abiWhitelist = null;\n\n            if (networkId == CONFIG.MAINNET.ID) {\n              defSymbol = CONFIG.MAINNET.SYMBOL;\n              totalGasLimit = CONFIG.MAINNET.GAS_LIMIT;\n              scannerAPI = CONFIG.MAINNET.API;\n              balanceAPI = CONFIG.MAINNET.BALANCE;\n              walletBalanceAPI = CONFIG.MAINNET.WALLET;\n              rewardcontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, CONFIG.MAINDAPP.TOKENREWARD);\n              stakingnftcontract = await ABIFetch(web3, ABI.STAKING.ABI, CONFIG.MAINDAPP.STAKING);\n              nitrocontract = await ABIFetch(web3, ABI.NITROBOOST.ABI, CONFIG.MAINDAPP.NITROBOOST);\n              nftlevelcontract = await ABIFetch(web3, ABI.RUSHLEVEL.ABI, CONFIG.MAINDAPP.LEVELING);\n\n              stakingnft_address = CONFIG.MAINDAPP.STAKING;\n              nitroboost_address = CONFIG.MAINDAPP.NITROBOOST.toUpperCase();\n\n              abiWhitelist = await fetch(\"/config/whitelisted.json\", {\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Accept: \"application/json\",\n                },\n              });\n              CONFIGWhitelist = await abiWhitelist.json();\n\n            }\n            else if (networkId == CONFIG.TESTNET.ID) {\n              //console.log(\"API CALL\");\n\n              defSymbol = CONFIG.TESTNET.SYMBOL;\n              totalGasLimit = CONFIG.TESTNET.GAS_LIMIT;\n              scannerAPI = CONFIG.TESTNET.API;\n              balanceAPI = CONFIG.TESTNET.BALANCE;\n              walletBalanceAPI = CONFIG.TESTNET.WALLET;\n              rewardcontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, CONFIG.TESTDAPP.TOKENREWARD);\n              stakingnftcontract = await ABIFetch(web3, ABI.STAKING.ABI, CONFIG.TESTDAPP.STAKING);\n              nitrocontract = await ABIFetch(web3, ABI.NITROBOOST.ABI, CONFIG.TESTDAPP.NITROBOOST);\n              nftlevelcontract = await ABIFetch(web3, ABI.RUSHLEVEL.ABI, CONFIG.TESTDAPP.LEVELING);\n\n\n              stakingnft_address = CONFIG.TESTDAPP.STAKING;\n              nitroboost_address = CONFIG.TESTDAPP.NITROBOOST;\n\n              abiWhitelist = await fetch(\"/config/testwhitelisted.json\", {\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Accept: \"application/json\",\n                },\n              });\n              CONFIGWhitelist = await abiWhitelist.json();\n\n            }\n\n            onGoingNotif(\"\");\n\n            var sWallBal = document.getElementById(\"wallBal\");\n            sWallBal.style.width = \"100px\";\n            sWallBal.innerHTML = await WalletBalance(account);\n\n            resultAPICall = await APICall(account, scannerAPI);\n            await listNFTFilter(resultAPICall);\n            //  await listNFT(account, 'unstaked-nft-container', resultAPICall, \"All\");\n            //document.getElementById(\"unstaked-nft-container\").innerHTML = \"\";\n\n            document.getElementById('unstaked-nft-container').innerHTML=\"\";\n            const DivContainer = document.getElementById('staked-nft-container');\n            DivContainer.innerHTML = \"\";\n            await stakeVaults('staked-nft-container');\n\n            var timer = setInterval(function () {\n              RewardInquiry();\n            }, 5000);\n\n            localStorage.setItem('isWalletConnected', true)\n\n          }\n\n          else {\n            var z = window.confirm(\"Wrong network!\");\n          }\n\n        }\n      }\n      catch (ex) {\n        console.log('connectwallet - SeeError - ' + ex);\n      }\n    }\n\n\n \n\n    async function RefreshCollection() {      \n      if (account==null){\n        return;\n      }\n      var nftCol = document.getElementById(\"nftFilter\").value;\n\n      //console.log(\"RefreshCollection >> nftCol: \", nftCol);\n\n      resultAPICall = await APICall(account, scannerAPI);\n      await listNFT(account, 'unstaked-nft-container', resultAPICall, nftCol);\n    }\n\n    async function APICall(account, API) {\n      var theURL = API + \"=\" + account;\n      var apiResponse = await fetch(theURL);\n      var jsonParsedContents = await apiResponse.json();\n\n      return jsonParsedContents;\n    }\n\n    async function APIBalanceCall(_account, _CA, API) {\n      var theURL = API.replace('@CONTRACTADDRESS', _CA).replace('@ACCOUNT', _account);\n      var apiResponse = await fetch(theURL);\n      var jsonParsedContents = await apiResponse.json();\n\n      return jsonParsedContents;\n    }\n\n    async function WalletBalance(_account) {\n      var theURL = walletBalanceAPI.replace('@ACCOUNT', _account);\n      var apiResponse = await fetch(theURL);\n      var jsonParsedContents = await apiResponse.json();\n\n      var earnedrwd = Web3.utils.fromWei(jsonParsedContents.result);\n      var rewards = Number(earnedrwd).toFixed(3);\n\n      return '  ' + rewards + ' ' + defSymbol;\n    }\n\n    async function claimVault(_vaultId) {\n      try {\n        await onGoingNotif(\"Pending...\");\n\n        var _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n\n        var _tkIDs = [];\n        resultAPICall = await APIBalanceCall(stakingnft_address, _vault.nftAddress, balanceAPI);\n        //console.log(resultAPICall);\n        for (let i = 0; i < resultAPICall.result; i++) {\n\n          var balanceOfOwner = await nftcontract.methods.balanceOf(stakingnft_address).call();\n          //console.log('balanceOfOwner: ' + balanceOfOwner);\n\n          for (let j = 0; j < balanceOfOwner; j++) {\n            var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(stakingnft_address, j).call();\n            var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n            if (_nftStakeInfo.owner == account) {\n              _tkIDs.push(_tkID);\n            }\n          }\n        }\n        //console.log(_tkIDs);\n\n        await stakingnftcontract.methods.claim(_vaultId, _tkIDs).send({ from: account });\n        await refreshDAppView();\n\n      }\n      catch (ex) {\n        console.log('claimVault');\n        console.log(ex);\n      }\n      await onGoingNotif(\"\");\n\n    }\n\n    async function backToStake() {\n      await stakeVaults('staked-nft-container');\n    }\n\n    async function modifyVault(_vaultId, _vaultContract) {\n      try {\n        await UnstakeMenuControl(true, true, true);\n\n        var tab_container = \"staked-nft-container\";\n        document.getElementById('staked-nft-container').innerHTML = \"\";\n\n        var _account = stakingnft_address;\n        resultAPICall = await APICall(_account, scannerAPI);\n\n        rewardInDetail = true;\n\n        for (let i = 0; i < resultAPICall.result.length; i++) {\n          if (resultAPICall.result[i].type == \"ERC-721\") {\n            var _contractAddress = resultAPICall.result[i].contractAddress;\n            vaultSelected = _contractAddress;\n            var _vId = await stakingnftcontract.methods.getVaultId(_contractAddress).call();\n            if ((_vaultId == _vId) && (_vaultContract == _contractAddress)) {\n              nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _contractAddress);\n              //await ShowNFTCard(tab_container, nftcontract, _contractAddress, _account, true);\n              await renderNFT(tab_container, nftcontract, _contractAddress, _account, true);\n              \n              break;\n            }\n          }\n        }\n      }\n      catch (ex) {\n        console.log(ex);\n      }\n    }\n\n\n    async function onGoingNotif(msg) {\n      var btnConnect = document.getElementById('btnConnect');\n      if (msg == \"\") {\n        try {\n          hideCover();\n        }\n        catch (ex) {\n        }\n\n        short_acct = account.substring(0, 6) + \"....\" + account.substring(account.length - 4, account.length);\n        var img = document.createElement('img');\n        img.className = \"ml-3\";\n        img.setAttribute(\"src\", 'chef.svg');\n        //btnConnect.className = \"ml-3\";\n        btnConnect.innerHTML = short_acct;\n        btnConnect.appendChild(img);\n      }\n      else {\n        showCover();\n        btnConnect.innerHTML = \"\";\n        btnConnect.innerHTML = msg;\n        /* showLoading(); */\n      }\n    }\n\n    async function unstakeVault(_vaultId) {\n      try {\n        await onGoingNotif(\"Pending...\");\n\n        var _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n\n        var _tkIDs = [];\n        resultAPICall = await APIBalanceCall(stakingnft_address, _vault.nftAddress, balanceAPI);\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _vault.nftAddress);\n\n        for (let i = 0; i < resultAPICall.result; i++) {\n          var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(stakingnft_address, i).call();\n          var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n          if (_nftStakeInfo.owner == account) {\n            _tkIDs.push(_tkID);\n          }\n        }\n        await stakingnftcontract.methods.unstake(_vaultId, _tkIDs).send({ from: account });\n        await refreshDAppView();\n      }\n      catch (ex) {\n        console.log('unstakeVault');\n        console.log(ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function GetNFTLevel(_vaultId, _tkID){   \n      try{\n        var nftLevel = await nftlevelcontract.methods.getNFTLevel(_vaultId, _tkID).call(); \n        if (nftLevel != \"undefined\") {\n          return `Lv ${nftLevel}`;\n        }         \n      } \n      catch(ex){\n        return \"\";\n      }     \n    }\n\n    async function RewardInquiry() {\n      try {\n        var btnConnect = document.getElementById('btnConnect');\n        if (!btnConnect.innerHTML.includes(short_acct)) {\n          return;\n        }\n\n        var sWallBal = document.getElementById(\"wallBal\");\n        sWallBal.innerHTML = await WalletBalance(account);\n\n        var _stakeCount = 0;\n        var _account = stakingnft_address;\n        resultAPICall = await APICall(_account, scannerAPI);\n\n        var balanceOfVault = 0;\n        var _symbol = await rewardcontract.methods.symbol().call();\n        if (rewardInDetail == false) {\n\n          for (let i = 0; i < resultAPICall.result.length; i++) {\n            if (resultAPICall.result[i].type == \"ERC-721\" && nitroboost_address.toUpperCase() != resultAPICall.result[i].contractAddress.toUpperCase()) {\n              var contractAdress = resultAPICall.result[i].contractAddress;\n              var _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n\n              var divPend = document.getElementById(\"Pending\" + resultAPICall.result[i].contractAddress);\n\n              var _pendingRewards = 0;\n\n              if (divPend != null) {\n                nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, resultAPICall.result[i].contractAddress);\n                balanceOfVault = await nftcontract.methods.balanceOf(_account).call();\n\n                var _pend = await stakingnftcontract.methods.pendingRewardByAccount(_vaultId, account).call();\n                var earned = String(_pend).split(\",\")[0];\n                var earnedrwd = Web3.utils.fromWei(earned);\n                _pendingRewards = Number(earnedrwd).toFixed(2);\n                _stakeCount = 0;\n\n                for (var j = 0; j < balanceOfVault; j++) {\n                  var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, j).call();\n                  var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n\n                  if (_nftStakeInfo.owner == account) {\n                    _stakeCount++;\n                  }\n                }\n\n                divPend.innerHTML = `Total: ${_stakeCount} | Earn: ${_pendingRewards} ${_symbol}`;\n              }\n            }\n          }\n        }\n        else if (rewardInDetail == true) {\n          try {\n            nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, vaultSelected);\n            var _vaultId = await stakingnftcontract.methods.getVaultId(vaultSelected).call();\n            balanceOfVault = await nftcontract.methods.balanceOf(_account).call();\n            _pendingRewards = 0;\n            _stakeCount = 0; \n\n            for (var j = 0; j < balanceOfVault; j++) {\n              var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, j).call();\n              var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n              \n              if (_nftStakeInfo.owner == account) {\n                _stakeCount++;\n\n                var _pend = await stakingnftcontract.methods.pendingReward(_vaultId, _tkID).call();\n                var earned = String(_pend).split(\",\")[0];\n                var earnedrwd = Web3.utils.fromWei(earned);\n                var rewards = Number(earnedrwd).toFixed(4);\n                _pendingRewards = Number(rewards).toFixed(4);\n \n                var _mult = await stakingnftcontract.methods.getTokenPowerUp(_vaultId, _tkID).call();\n                var _lvlBonus = await nftlevelcontract.methods.getLevelBonus(_vaultId, _tkID).call();\n                //console.log(_vaultId + _tkID, (_mult * _lvlBonus/100)/100);\n\n                const objNFTPend = document.getElementById(\"att\" + _vaultId + _tkID);\n                //objNFTPend.style.fontSize = \"small\";\n                objNFTPend.innerHTML = \"\";\n                objNFTPend.innerHTML = \"Earn: \" + _pendingRewards + \" \" + _symbol;\n\n\n                var nftLevel = await GetNFTLevel(_vaultId, _tkID); \n                const objNFTLvl = document.getElementById(\"lvl\" + _vaultId + _tkID);\n                objNFTLvl.innerHTML = \"\";\n                objNFTLvl.innerHTML = nftLevel;\n \n\n\n                var _nitroStakeRemaining;\n                try {\n                  const result = await stakingnftcontract.methods.nitroStakeRemaining(_vaultId, _tkID).call();\n                  console.log('Remaining', _tkID, result);\n\n                  const { 0: nitroID, 1: limit, 2: remain } = result;\n                  _nitroStakeRemaining = remain;\n                  if (_nitroStakeRemaining > 0) {\n                    console.log(_nitroStakeRemaining, _tkID);\n                    /* var eqNitro = await stakingnftcontract.methods.getEquippedNitro(_vaultId, _tkID).call(); */\n                    var _glowNum = await nitrocontract.methods.getRareType(nitroID).call();\n\n                    var inSec = (_nitroStakeRemaining / 86400) * 24 * 60 * 60;\n\n                    var sec_num = parseInt(inSec, 10); // don't forget the second param\n                    var hours = Math.floor(sec_num / 3600);\n                    var minutes = Math.floor((sec_num - (hours * 3600)) / 60);\n                    var seconds = sec_num - (hours * 3600) - (minutes * 60);\n\n                    if (hours < 10) { hours = \"0\" + hours; }\n                    if (minutes < 10) { minutes = \"0\" + minutes; }\n                    if (seconds < 10) { seconds = \"0\" + seconds; }\n                    var remainingBurn = hours + ':' + minutes + ':' + seconds;\n\n                    //document.getElementsByTagName(\"att\" + _vaultId + _tkID).innerHTML =document.getElementsByTagName(\"att\" + _vaultId + _tkID).innerHTML + \" | \" + remainingBurn + ' left';\n                    document.getElementsByTagName(\"nft\" + _vaultId + \"|\" + _tkID).className = \"nftCard Equipped\" + _glowNum; \n\n                    /* const DivContainer = document.getElementById('staked-nft-container');\n                    var children = DivContainer.getElementsByTagName('*');\n                    var child, child2;\n                    for (var i = 0; i < children.length; i++) {\n                      child = children[i];\n                      if (child.id == \"att\" + _vaultId + _tkID) {\n                        child.innerHTML = child.innerHTML + \" | \" + remainingBurn + ' left';\n\n                        for (var j = 0; j < children.length; j++) {\n                          child2 = children[j];\n                          if (child2.id == \"nft\" + _vaultId + \"|\" + _tkID) {\n\n                            child2.className = \"nftCard Equipped\" + _glowNum; \n\n                            break;\n                          }\n                        }\n                        break;\n                      }\n                    } */\n                  }\n                }\n                catch (nitro_ex) {\n                  console.log(\"no nitro equip\", _vaultId, _tkID, _nitroStakeRemaining, nitro_ex);\n                }\n\n              }\n\n\n            }\n          }\n          catch (ex1) {\n            console.log(\"Error in RewardInquiry - Detailed: \", ex1);\n          }\n        }\n      }\n      catch (ex) {\n        /* console.log(\"Error on RewardInquiry\");\n        console.log(ex); */\n      }\n      return _stakeCount;\n    }\n\n    async function UnstakeMenuControl(btnBack, btnClaim, btnUnstake) {\n      var _btnBack = document.getElementById(\"btnBack\");\n      var _btnClaim = document.getElementById(\"btnClaimSelected\");\n      var _btnUnstake = document.getElementById(\"btnUnstakeSelected\");\n\n      if ((btnBack == false) && (btnClaim == false) && (btnUnstake == false)) {\n        document.getElementById(\"btnUnstakeMenu\").style.display = \"none\";\n      }\n      else {\n        document.getElementById(\"btnUnstakeMenu\").style.display = \"\";\n      }\n\n      if (btnBack == false) {\n        _btnBack.setAttribute(\"disabled\", \"disabled\");\n        _btnBack.classList.add(\"disabled\");\n      }\n      else {\n        _btnBack.removeAttribute('disabled');\n        _btnBack.classList.remove(\"disabled\");\n      }\n\n      if (btnClaim == false) {\n        _btnClaim.setAttribute(\"disabled\", \"disabled\");\n        _btnClaim.classList.add(\"disabled\");\n      }\n      else {\n        _btnClaim.removeAttribute('disabled');\n        _btnClaim.classList.remove(\"disabled\");\n      }\n\n      if (btnUnstake == false) {\n        _btnUnstake.setAttribute(\"disabled\", \"disabled\");\n        _btnUnstake.classList.add(\"disabled\");\n      }\n      else {\n        _btnUnstake.removeAttribute('disabled');\n        _btnUnstake.classList.remove(\"disabled\");\n      }\n    }\n\n    async function stakeVaults(tab_container) {      \n      if (account==null){\n        return;\n      }\n      await delay();\n\n      var _account = stakingnft_address;\n      resultAPICall = await APICall(_account, scannerAPI);\n\n      await UnstakeMenuControl(false, false, false);\n\n      const DivContainer = document.getElementById(tab_container);\n      DivContainer.innerHTML = \"\";\n\n      console.log(width);\n      if (width<830){\n        DivContainer.className = \"nft_card_view1\";\n      }\n      else if (width>=830 && width<1000){\n        DivContainer.className = \"nft_card_view2\";\n      }\n      else if (width>=1000 && width<1300){\n        DivContainer.className = \"nft_card_view3\";\n      }\n      else if(width>=1300){\n        DivContainer.className = \"nft_card_view4\";\n      }\n\n      rewardInDetail = false;\n      var usrVaultCount = 0;\n      var usrCurrVault = null;\n      var _vaultContract = null;\n\n      //Check Number of Vault Stake of user\n      for (let i = 0; i < resultAPICall.result.length; i++) {\n        if (resultAPICall.result[i].type == \"ERC-721\" && nitroboost_address.toUpperCase() != resultAPICall.result[i].contractAddress.toUpperCase()) {\n          var contractAdress = resultAPICall.result[i].contractAddress;\n          var _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n\n          nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, contractAdress);\n          var balanceOfVault = await nftcontract.methods.balanceOf(_account).call();\n\n          for (var j = 0; j < balanceOfVault; j++) {\n            var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, j).call();\n            var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n            if (_nftStakeInfo.owner == account) {\n              usrVaultCount++;\n              usrCurrVault = _vaultId;\n              _vaultContract = contractAdress;\n              break;\n            }\n          }\n        }\n      }\n\n      if (usrVaultCount == 1) {\n        rewardInDetail = true;\n        await modifyVault(usrCurrVault, _vaultContract);\n      }\n      else {\n\n        for (let i = 0; i < resultAPICall.result.length; i++) {\n          if (resultAPICall.result[i].type == \"ERC-721\" && nitroboost_address.toUpperCase() != resultAPICall.result[i].contractAddress.toUpperCase()) {\n\n            var contractAdress = resultAPICall.result[i].contractAddress;\n            var _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n            var _vaultInfo = await stakingnftcontract.methods.Vault(_vaultId).call();\n\n            if (_vaultInfo.active) {\n              nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, contractAdress);\n              var nftName = await nftcontract.methods.name().call();\n              var balanceOfVault = await nftcontract.methods.balanceOf(_account).call();\n              var symbol = await rewardcontract.methods.symbol().call();\n\n              var _tkID = 0;\n              var _stakeCount = 0;\n              for (var j = 0; j < balanceOfVault; j++) {\n                _tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, j).call();\n\n                var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n\n                if (_nftStakeInfo.owner == account) {\n                  _stakeCount++;\n\n                  if (_stakeCount > 0) {\n                    let tokenMetadataURI = await nftcontract.methods.tokenURI(_tkID).call();\n                    if (tokenMetadataURI.startsWith(\"ipfs://\")) {\n                      tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI.split(\"ipfs://\")[1]}`;\n                    }\n                    else if (tokenMetadataURI.startsWith(\"https://gateway.pinata.cloud/ipfs/\")) {\n                      tokenMetadataURI = tokenMetadataURI.replace(`https://gateway.pinata.cloud/ipfs/`, ``);\n                      tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI}${1}`;\n                    }\n                    var tokenMetadata = await fetch(tokenMetadataURI).then((response) => response.json());\n\n                    (async function () {\n                      const cardVault = document.createElement('div');\n                      cardVault.className = \"vault_container\";\n                      cardVault.id = contractAdress;\n                      cardVault.value = _vaultId;\n\n                      const cardVaultCard = document.createElement('div');\n                      if (isMobile) {\n                        cardVaultCard.className = \"vault_card-mobile\";\n                      }\n                      else {\n                        cardVaultCard.className = \"vault_card\";\n                      }\n\n                      const cardVaultFront = document.createElement('div');\n                      cardVaultFront.className = \"vault_front parent\";\n\n                      var imgNFT\n                      if (tokenMetadata[\"image\"].includes(\"mp4\")) {\n                        imgNFT = document.createElement('video');\n\n                        const vid_source = document.createElement(\"source\");\n\n                        if (tokenMetadata[\"image\"].startsWith(\"ipfs://\")) {\n                          vid_source.setAttribute(\"src\", `https://ipfs.io/ipfs/${tokenMetadata[\"image\"].split(\"ipfs://\")[1]}`);\n                        }\n                        else {\n                          vid_source.setAttribute(\"src\", tokenMetadata[\"image\"]);\n                        }\n                        vid_source.setAttribute(\"type\", \"video/mp4\");\n                        imgNFT.appendChild(vid_source);\n                      }\n                      else {\n                        imgNFT = document.createElement('img');\n                        imgNFT.setAttribute(\"src\", tokenMetadata[\"image\"]);\n                      }\n                      imgNFT.setAttribute(\"alt\", contractAdress);\n\n                      const cardVaultDetails = document.createElement('div');\n                      cardVaultDetails.className = \"vault_details\";\n\n                      const cardH4 = document.createElement('h5');\n                      cardH4.style.color = \"white\";\n                      cardH4.className = \"VaultName\";\n                      cardH4.innerHTML = (nftName.length > 15 ? nftName.substring(0, 10) + \"...\" : nftName) + \" Vault\";\n\n                      const cardSpan = document.createElement('span');\n                      cardSpan.className = \"spanX\"\n                      cardSpan.id = \"Pending\" + contractAdress;\n                      cardSpan.style.color = \"white\";\n                      cardSpan.innerHTML = \"\";\n\n                      cardVaultDetails.appendChild(cardH4);\n                      cardVaultDetails.appendChild(cardSpan);\n\n                      cardVaultFront.appendChild(imgNFT);\n                      cardVaultFront.appendChild(cardVaultDetails);\n\n                      const cardVaultBack = document.createElement('div');\n                      cardVaultBack.className = \"vault_back\";\n\n                      const cardButtonClaim = document.createElement('a');\n                      cardButtonClaim.style.color = \"white\";\n                      cardButtonClaim.innerHTML = \"Claim All\";\n                      cardButtonClaim.onclick = function () { claimVault(cardVault.value); }\n\n                      const cardButtonUnstake = document.createElement('a');\n                      cardButtonUnstake.style.color = \"white\";\n                      cardButtonUnstake.innerHTML = \"Unstake All\";\n                      cardButtonUnstake.onclick = function () { unstakeVault(cardVault.value); }\n\n                      const cardButtonModify = document.createElement('a');\n                      cardButtonModify.style.color = \"white\";\n                      cardButtonModify.innerHTML = \"Modify\";\n                      cardButtonModify.onclick = function () { modifyVault(cardVault.value, cardVault.id); }\n\n                      cardVaultBack.appendChild(cardButtonClaim);\n                      cardVaultBack.appendChild(cardButtonUnstake);\n                      cardVaultBack.appendChild(cardButtonModify);\n\n                      cardVaultCard.appendChild(cardVaultFront);\n                      cardVaultCard.appendChild(cardVaultBack);\n\n                      cardVault.appendChild(cardVaultCard);\n\n                      DivContainer.appendChild(cardVault);\n                    })();\n                  }\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n\n    }\n\n    async function listNFT(_account, tab_container, jsonParsedContents, filterList) {\n      try {\n        var userNFTHold = 0;\n        var btnStakeAll = document.getElementById(\"btnStakeAll\");\n        var btnStakeSelected = document.getElementById(\"btnStakeSelected\");\n\n        document.getElementById(tab_container).innerHTML = \"\";\n\n        //console.log(\"filterList: \", filterList);\n\n        if (filterList == \"All\" || filterList == \"All Owned NFT\") {\n          btnStakeAll.setAttribute('disabled', 'disabled');\n          btnStakeSelected.setAttribute('disabled', 'disabled');\n\n          //Populate List NFT \n          if (jsonParsedContents != null) {\n            for (var key in CONFIGWhitelist.NFT) {\n              for (let i = 0; i < jsonParsedContents.result.length; i++) {\n                if (jsonParsedContents.result[i].type == \"ERC-721\") {\n                  if (CONFIGWhitelist.NFT[key].ADDRESS == jsonParsedContents.result[i].contractAddress) {\n                    nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, jsonParsedContents.result[i].contractAddress);\n                    //serNFTHold = userNFTHold + (await ShowNFTCard(tab_container, nftcontract, jsonParsedContents.result[i].contractAddress, _account));  //myHoldNFT\n                    userNFTHold = userNFTHold + (await renderNFT(tab_container, nftcontract, jsonParsedContents.result[i].contractAddress, _account));  //myHoldNFT\n                    break;\n                  }\n                }\n              }\n            }\n\n            //All other ERC-721\n            var ctr;\n            for (let i = 0; i < jsonParsedContents.result.length; i++) {\n              if (jsonParsedContents.result[i].type == \"ERC-721\" && nitroboost_address.toUpperCase() != jsonParsedContents.result[i].contractAddress.toUpperCase()) {\n                ctr = 0;\n                for (var key in CONFIGWhitelist.NFT) {\n                  if (CONFIGWhitelist.NFT[key].ADDRESS != jsonParsedContents.result[i].contractAddress) {\n                    ctr++;\n                  }\n                }\n                if (ctr >= CONFIGWhitelist.NFT.length) {\n                  nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, jsonParsedContents.result[i].contractAddress);\n                  //userNFTHold = userNFTHold + (await ShowNFTCard(tab_container, nftcontract, jsonParsedContents.result[i].contractAddress, _account));  //myHoldNFT\n                  userNFTHold = userNFTHold + (await renderNFT(tab_container, nftcontract, jsonParsedContents.result[i].contractAddress, _account));  //myHoldNFT\n                  \n                }\n              }\n            }\n          }\n        }\n        else {\n          nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, filterList);\n\n          //console.log(await nftcontract.methods.name().call());\n\n          //userNFTHold = userNFTHold + (await ShowNFTCard(tab_container, nftcontract, filterList, _account));  //myHoldNFT\n          userNFTHold = userNFTHold + (await renderNFT(tab_container, nftcontract, filterList, _account));  //myHoldNFT\n          btnStakeAll.removeAttribute('disabled');\n          btnStakeSelected.removeAttribute('disabled');\n        }\n\n        if (userNFTHold == 0) {\n          ShowNFTError(\"NO NFT SCANNED.\");\n        }\n      }\n\n      catch (ex) {\n        console.log('listNFT - SeeError - ' + ex);\n        ShowNFTError(ex);\n      }\n    }\n\n    async function ABIFetch(web3, _abi, _address) {\n      var _contract;\n      var ABIResponse;\n\n      ABIResponse = await fetch(_abi, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      });\n      const ABIJSON = await ABIResponse.json();\n      _contract = new web3.eth.Contract(ABIJSON, _address);\n      return _contract;\n    }\n\n    async function listNFTFilter(jsonParsedContents) {\n      var lstNFT = document.getElementById(\"nftFilter\");\n      lstNFT.innerHTML = \"\";\n\n      for (let i = 0; i < jsonParsedContents.result.length; i++) {\n        if (i == 0) {\n          var z_1 = document.createElement(\"option\");\n          z_1.setAttribute(\"value\", \"All\");\n          var t_1 = document.createTextNode(\"All Owned NFT\");\n\n          z_1.appendChild(t_1);\n          lstNFT.appendChild(z_1);\n        }\n\n        if (jsonParsedContents.result[i].type == \"ERC-721\" && jsonParsedContents.result[i].balance > 0 && nitroboost_address.toUpperCase() != jsonParsedContents.result[i].contractAddress.toUpperCase()) {\n          var z = document.createElement(\"option\");\n          z.setAttribute(\"value\", jsonParsedContents.result[i].contractAddress);\n\n          var t = document.createTextNode(jsonParsedContents.result[i].name + \": \" + jsonParsedContents.result[i].balance);\n          z.appendChild(t);\n\n          lstNFT.appendChild(z);\n        }\n\n      }\n    }\n\n    async function fetchNFTImage(nftcontract, _account, tkID, _caller) {\n      var tokenMetadata = null;\n      try {\n        let tokenMetadataURI = await nftcontract.methods.tokenURI(tkID).call();\n        if (tokenMetadataURI.startsWith(\"ipfs://\")) {\n          tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI.split(\"ipfs://\")[1]}`;\n        }\n        else if (tokenMetadataURI.startsWith(\"https://gateway.pinata.cloud/ipfs/\")) {\n          tokenMetadataURI = tokenMetadataURI.replace(`https://gateway.pinata.cloud/ipfs/`, ``);\n          tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI}${tkID}`;\n        }\n        tokenMetadata = await fetch(tokenMetadataURI).then((response) => response.json());\n      }\n      catch (ex) {\n        console.log('Caller - ' + _caller);\n        console.log(ex);\n      }\n\n      return tokenMetadata;\n\n    }\n\n    async function renderNFT(tab_container, nftcontract, contractAdress, _account, isStaked){\n      var nftName = await nftcontract.methods.name().call();\n      var balanceOfOwner = await nftcontract.methods.balanceOf(_account).call();  \n\n      var nftContainer = document.getElementById(tab_container); \n      var nftCard;\n        var nftTable;\n      var nftMedia;\n        var nftLvl;\n        var nftChk;\n        var nftLbl;\n        var nftImg;\n      var nftAtt;\n        var nftTxt1;\n        var nftTxt2;\n        var nftBtn;\n      try{\n        console.log(width);\n\n        if (width>=850 && width<1000){\n          nftContainer.className = \"nft_card_view3\";\n        }\n        else if (width>=1000 && width<1300){\n          nftContainer.className = \"nft_card_view4\";\n        }\n        else if(width>=1300){\n          nftContainer.className = \"nft_card_view5\";\n        }\n\n        for (let i = 0; i < balanceOfOwner; i++){\n          (async function (){\n            const tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, i).call();\n            const tokenMetadata = await fetchNFTImage(nftcontract, _account, tkID, 'renderNFT');\n            const _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n            \n            var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, tkID).call();\n            if (isStaked) {\n              if (_nftStakeInfo.owner != account) {\n                return;\n              }\n            }\n\n            nftCard = document.createElement(\"div\");\n            nftCard.id = \"nft\" + _vaultId + \"|\" + tkID;\n            nftCard.className = \"nftCard\";\n\n            nftTable = document.createElement(\"TABLE\");\n            nftTable.setAttribute(\"id\", \"tbl\" + _vaultId + tkID);\n            nftCard.appendChild(nftTable);\n\n            nftMedia = document.createElement(\"TR\");\n            nftMedia.className = \"nftMedia\";\n            nftTable.appendChild(nftMedia);\n\n            nftLvl = document.createElement('h6');\n            nftLvl.id = \"lvl\" + _vaultId + tkID;\n            nftLvl.className = \"nftLvl\";\n            nftLvl.innerHTML = \"\"\n            nftMedia.appendChild(nftLvl);\n\n            nftChk = document.createElement(\"INPUT\");\n            nftChk.setAttribute(\"type\", \"checkbox\");\n            nftChk.id = contractAdress + \"_\" + tkID;\n            nftChk.className = \"nftChk\";\n            nftMedia.appendChild(nftChk);\n \n            nftLbl = document.createElement(\"LABEL\");\n            nftLbl.className = \"parent\";\n            nftLbl.htmlFor = nftChk.id;\n            nftMedia.appendChild(nftLbl);\n\n            if (tokenMetadata[\"image\"].includes(\"mp4\")) {\n              nftImg = document.createElement('video');\n              const vid_source = document.createElement(\"source\");\n              if (tokenMetadata[\"image\"].startsWith(\"ipfs://\")) {\n                vid_source.setAttribute(\"src\", `https://ipfs.io/ipfs/${tokenMetadata[\"image\"].split(\"ipfs://\")[1]}`);\n              }\n              else {\n                vid_source.setAttribute(\"src\", tokenMetadata[\"image\"]);\n              }\n              vid_source.setAttribute(\"type\", \"video/mp4\");\n              nftImg.appendChild(vid_source);\n            }\n            else {\n              nftImg = document.createElement('img');\n              var _imgFix = tokenMetadata[\"image\"];\n              if (_imgFix.startsWith(\"ipfs://\")) {\n                _imgFix = `https://ipfs.io/ipfs/${_imgFix.replace(\"ipfs://\", '')}`\n              }\n              nftImg.setAttribute(\"src\", _imgFix);\n            }\n            nftImg.setAttribute(\"alt\", \"Error loading image\");\n            nftImg.className=\"nftImg\";\n            nftLbl.appendChild(nftImg);\n            \n\n\n\n            nftAtt = document.createElement(\"TR\");\n            nftAtt.className = \"nftAtt\";\n            nftTable.appendChild(nftAtt);\n \n            nftTxt1 = document.createElement('h6');\n            nftTxt1.id = \"stk\" + _vaultId + tkID;\n            nftTxt1.className = \"nftTxt1\";\n            nftTxt1.innerHTML = (nftName.length > 20 ? nftName.substring(0, 20) : nftName) + ` #` + (tkID.length > 5 ? tkID.substring(1, 5) : tkID);\n            nftAtt.appendChild(nftTxt1);\n\n            nftTxt2 = document.createElement('h6');\n            nftTxt2.id = \"att\" + _vaultId + tkID;\n            nftTxt2.className = \"nftTxt2\";\n            nftTxt2.innerHTML = \"\";\n            nftAtt.appendChild(nftTxt2);\n\n            nftBtn = document.createElement('button');\n            nftBtn.type = \"button\";\n            nftBtn.className = \"nftBtn\";\n            nftBtn.style = \"{{ fontFamily: 'SF Pro Display' }}\";\n            nftBtn.innerHTML = \"+\";\n\n            if (isStaked){              \n              nftBtn.onclick = function () {\n                showPrompt(_vaultId + \"|\" + tkID, function (value) {\n                });\n              };\n            }\n            else{              \n              nftBtn.onclick = function () {\n                showPromptTransfer(_vaultId + \"|\" + tkID + \"|\" + contractAdress, function (value) {\n                });\n              };\n            }\n\n            nftAtt.appendChild(nftBtn);\n\n            nftContainer.appendChild(nftCard);\n\n          })();\n        }\n\n\n      }\n      catch(ex){\n\n      }\n    }\n\n    async function ShowNFTCard(tab_container, nftcontract, contractAdress, _account, isStaked) {\n      var nftName = await nftcontract.methods.name().call();\n      var balanceOfOwner = await nftcontract.methods.balanceOf(_account).call();\n      var DivContainer = document.getElementById(tab_container);\n      var nftcontainer;\n      var objNFTPend;\n      var objNFTNitroEquip;\n      var btnPowerUp;\n      var imgNFT;\n\n      var mismatchNFT;\n      //console.log(\"ShowNFTCard>>\", nftName);\n\n      try {\n        for (let i = 0; i < balanceOfOwner; i++) {\n          (async function () {\n            try {\n              var tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, i).call();\n              const tokenMetadata = await fetchNFTImage(nftcontract, _account, tkID, 'ShowNFTCard');\n              var _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n              var _checkAdd = stakingnftcontract.methods.Vault(_vaultId).call();\n              \n              mismatchNFT = false;\n              if (_checkAdd.nftAddress != contractAdress) {\n                mismatchNFT = true;\n              }\n\n              var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, tkID).call();\n              if (isStaked) {\n                if (_nftStakeInfo.owner != account) {\n                  return;\n                }\n              }\n\n              nftcontainer = document.createElement(\"div\");\n              nftcontainer.id = \"nftcontainer_\" + _vaultId + \"_\" + tkID;\n              //nftcontainer.className = \"parent nftcontainer\";\n              if (isMobile) {\n                nftcontainer.className = \"nftcontainer-mobile\";\n              }\n              else {\n                nftcontainer.className = \"nftcontainer\";\n              }\n\n              const nftdetail = document.createElement('div');\n              nftdetail.id = \"nftdetail_\" + _vaultId + \"_\" + tkID;\n              nftdetail.className = \"nftdetail\";\n\n              const chk = document.createElement(\"INPUT\");\n              chk.setAttribute(\"type\", \"checkbox\");\n              chk.id = contractAdress + \"_\" + tkID;\n              chk.className = \"unlisted\";\n\n              const lbl = document.createElement(\"LABEL\");\n              lbl.className = \"parent\";\n              lbl.htmlFor = chk.id;\n\n              if (tokenMetadata[\"image\"].includes(\"mp4\")) {\n                imgNFT = document.createElement('video');\n              }\n              else {\n                imgNFT = document.createElement('img');\n              }\n              if (isMobile) {\n                imgNFT.className = \"image-mobile\";\n              }\n              else {\n                imgNFT.className = \"image\";\n              }\n\n              if (tokenMetadata[\"image\"].includes(\"mp4\")) {\n\n                const vid_source = document.createElement(\"source\");\n                if (tokenMetadata[\"image\"].startsWith(\"ipfs://\")) {\n                  vid_source.setAttribute(\"src\", `https://ipfs.io/ipfs/${tokenMetadata[\"image\"].split(\"ipfs://\")[1]}`);\n                }\n                else {\n                  vid_source.setAttribute(\"src\", tokenMetadata[\"image\"]);\n                }\n\n                vid_source.setAttribute(\"type\", \"video/mp4\");\n                imgNFT.appendChild(vid_source);\n              }\n              else {\n                var _imgFix = tokenMetadata[\"image\"];\n                if (_imgFix.startsWith(\"ipfs://\")) {\n                  _imgFix = `https://ipfs.io/ipfs/${_imgFix.replace(\"ipfs://\", '')}`\n                }\n                imgNFT.setAttribute(\"src\", _imgFix);\n              }\n\n\n              imgNFT.setAttribute(\"alt\", \"Error loading image\");  //contractAdress);\n\n              \n              var _level = await nftlevelcontract.methods.getNFTLevel(_vaultId, tkID).call();\n              if(_level>0){\n                _level = \"(Lv\" + _level + \")\"; \n              }\n              else{\n                _level=\"\";\n              }\n\n              const objNFT = document.createElement('h6');\n              objNFT.id = \"stk\" + _vaultId + tkID;\n              objNFT.className = \"h6nftName\";\n              objNFT.innerHTML = (nftName.length > 20 ? nftName.substring(1, 20) : nftName) + ` #` + (tkID.length > 5 ? tkID.substring(1, 5) : tkID) + _level;\n\n              lbl.appendChild(imgNFT);\n              nftcontainer.appendChild(chk);\n              nftcontainer.appendChild(lbl);\n\n              nftdetail.appendChild(objNFT);\n              nftcontainer.appendChild(nftdetail);\n\n              /* Begin - For Staked NFT Only */\n              if (isStaked) {\n\n\n                objNFTPend = document.createElement('h6');\n                objNFTPend.className = \"h6pendingEarn\";\n                objNFTPend.id = \"pend\" + _vaultId + tkID;\n                objNFTPend.innerHTML = \"\";\n\n                objNFTNitroEquip = document.createElement('h6');\n                objNFTNitroEquip.className = \"h6nitroEquip\";\n                objNFTNitroEquip.id = \"nitro\" + _vaultId + tkID;\n                objNFTNitroEquip.innerHTML = \"\";\n\n                btnPowerUp = document.createElement('button');\n                btnPowerUp.type = \"button\";\n                btnPowerUp.className = \"powerUpButton\";\n                btnPowerUp.style = \"{{ fontFamily: 'SF Pro Display' }}\";\n                btnPowerUp.innerHTML = \"+\";\n\n                btnPowerUp.onclick = function () {\n                  showPrompt(_vaultId + \"|\" + tkID, function (value) {\n                  });\n                };\n                nftdetail.appendChild(objNFTNitroEquip);\n                nftcontainer.appendChild(objNFTPend);\n                nftcontainer.appendChild(btnPowerUp);\n              }\n              /* End - For Staked NFT Only */\n\n              /*Put Transfer NFT if Not Staked*/\n              else {\n\n                btnPowerUp = document.createElement('button');\n                btnPowerUp.type = \"button\";\n                btnPowerUp.className = \"transferButton\";\n                btnPowerUp.style = \"{{ fontFamily: 'SF Pro Display' }}\";\n                btnPowerUp.innerHTML = \"+\";\n\n                if (mismatchNFT) {\n                  btnPowerUp.onclick = function () {\n                    showPromptTransfer(\"-1|\" + tkID + \"|\" + contractAdress, function (value) {\n                    });\n                  };\n                }\n                else {\n                  btnPowerUp.onclick = function () {\n                    showPromptTransfer(_vaultId + \"|\" + tkID + \"|\" + contractAdress, function (value) {\n                    });\n                  };\n                }\n\n                nftcontainer.appendChild(btnPowerUp)\n              }\n\n\n              DivContainer.appendChild(nftcontainer);\n\n\n            }\n            catch (ex2) {\n              ShowNFTError(nftName + \" - Error on reading token URI\");\n              console.log('ShowNFTErrorCard', ex2);\n            }\n\n          })();\n        }\n\n        return balanceOfOwner;\n      }\n      catch (ex) {\n        console.log('Error on ShowNFTCard', ex);\n      }\n    }\n\n    async function UnstakeSelected() {\n      ClaimThem(true);\n    }\n\n    async function ClaimSelected() {\n      ClaimThem(false);\n    }\n\n    async function BackToCollection() {\n      stakeVaults('staked-nft-container');\n    }\n\n    async function ClaimThem(unstake) {\n      try {        \n        if (account==null){\n          return;\n        }\n        await delay();\n        await onGoingNotif(\"Pending...\");\n\n        const DivContainer = document.getElementById('staked-nft-container');\n        var children = DivContainer.getElementsByTagName('*');\n        var elements = [], child;\n        for (var i = 0; i < children.length; i++) {\n          child = children[i];\n          if (child.type == \"checkbox\" && child.checked == true) {\n            elements.push(child);\n          }\n        }\n\n        var tkIDs = [];\n        var _vaultId;\n\n        //loop for getting staked vault\n        for (var j = 0; j < elements.length; j++) {\n          var nft = [];\n          nft = elements[j].id.split(\"_\");\n          _vaultId = await stakingnftcontract.methods.getVaultId(nft[0]).call();\n\n          tkIDs.push(nft[1]);\n        }\n\n        if (unstake) {\n          await stakingnftcontract.methods.unstake(_vaultId, tkIDs).send({ from: account });\n        }\n        else {\n          await stakingnftcontract.methods.claim(_vaultId, tkIDs).send({ from: account });\n        }\n        BackToCollection();\n\n      }\n      catch (ex) {\n        console.log(\"ClaimThem - \" + ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function addToken(tokenAddress, tokenSymbol, tokenDecimals, tokenImage){\n      const wasAdded = await window.ethereum.request({\n        method: 'wallet_watchAsset',\n        params: {\n          type: 'ERC20', // Initially only supports ERC20, but eventually more!\n          options: {\n            address: tokenAddress, // The address that the token is at.\n            symbol: tokenSymbol, // A ticker symbol or shorthand, up to 5 chars.\n            decimals: tokenDecimals, // The number of decimals in the token\n            image: tokenImage, // A string url of the token logo\n          },\n        },\n      });\n      //console.log(wasAdded);  \n    }\n\n    async function StakeAll() {      \n      if (account==null){\n        return;\n      }\n      const DivContainer = document.getElementById('unstaked-nft-container');\n      var children = DivContainer.getElementsByTagName('*');\n      var elements = [], child;\n      for (var i = 0; i < children.length; i++) {\n        child = children[i];\n        if (child.type == \"checkbox\") {\n          elements.push(child);\n        }\n      }\n\n      if (elements.length == 0) {\n        return;\n      }\n\n      var _isNFTAppr = false;\n      var address;\n      var tkIDs = [];\n\n      var _reject = false;\n\n      for (var i = 0; i < elements.length; i++) {\n        var nft = [];\n        nft = elements[i].id.replace(\"chk\", \"\").split(\"_\");\n\n        if (_isNFTAppr == false) {\n          address = nft[0];\n          await onGoingNotif(\"Approve All\");\n          _isNFTAppr = await nftApproveAll(address);\n\n          if (_isNFTAppr == false) {\n            _reject = true;\n            await onGoingNotif(\"\");\n            return;\n          }\n          await onGoingNotif(\"Pending...\");\n        }\n\n        tkIDs.push(nft[1]);\n      }\n\n      if (await isWhitelist(address)) {\n        var _vaultId = await stakingnftcontract.methods.getVaultId(address).call();\n        await stakingnftcontract.methods.stake(_vaultId, tkIDs).send({ from: account });\n      }\n      else {\n        await stakingnftcontract.methods.stakeAny(address, tkIDs).send({ from: account });\n      }\n      await refreshDAppView();\n      await onGoingNotif(\"\");\n\n\n    }\n\n    async function StakeThem() {\n      try {        \n        if (account==null){\n          return;\n        }\n        await onGoingNotif(\"Pending...\");\n\n        const DivContainer = document.getElementById('unstaked-nft-container');\n        var children = DivContainer.getElementsByTagName('*');\n        var elements = [], child;\n        for (var i = 0; i < children.length; i++) {\n          child = children[i];\n          if (child.type == \"checkbox\" && child.checked == true) {\n            elements.push(child);\n          }\n        }\n\n        var _isNFTAppr = false;\n        var address;\n        var tkIDs = [];\n\n        var _reject = false;\n\n        for (var i = 0; i < elements.length; i++) {\n          var nft = [];\n          nft = elements[i].id.replace(\"chk\", \"\").split(\"_\");\n\n          if (_isNFTAppr == false) {\n            address = nft[0];\n              await onGoingNotif(\"\");\n              await onGoingNotif(\"Approve All\");\n            _isNFTAppr = await nftApproveAll(address);\n\n            if (_isNFTAppr == false) {\n              _reject = true;\n              await onGoingNotif(\"\");\n              return;\n            }\n            await onGoingNotif(\"Pending...\");\n          }\n          tkIDs.push(nft[1]);\n        }\n\n        if (await isWhitelist(address)) {\n          var _vaultId = await stakingnftcontract.methods.getVaultId(address).call();\n          await stakingnftcontract.methods.stake(_vaultId, tkIDs).send({ from: account });\n        }\n        else {\n          await stakingnftcontract.methods.stakeAny(address, tkIDs, true).send({ from: account });\n        }\n        await refreshDAppView();\n        await onGoingNotif(\"\");\n      }\n      catch (ex) {\n        console.log(\"StakeThem - \" + ex);\n      }\n      await onGoingNotif(\"\");\n\n    }\n\n    async function refreshDAppView() {\n      await RefreshCollection();\n      await listNFTFilter(resultAPICall);\n      await stakeVaults('staked-nft-container');\n    }\n\n    async function nftApproveAll(address) {\n      try {\n        var _nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, address);\n        var _isAppr = await _nftcontract.methods.isApprovedForAll(account, stakingnft_address).call();\n        if (_isAppr == false) {\n          await _nftcontract.methods.setApprovalForAll(stakingnft_address, true).send({ from: account })\n        }\n        return true;\n      }\n      catch (ex) {\n        console.log(address);\n        console.log(\"nftApproveAll - \" + ex);\n        return false;\n      }\n\n    }\n\n    async function isWhitelist(address) {\n      var _res = false;\n      try {\n        for (var key in CONFIGWhitelist.NFT) {\n          if (CONFIGWhitelist.NFT[key].ADDRESS == address) {\n            _res = true;\n            break;\n          }\n        }\n      }\n      catch (ex) {\n        console.log(\"isWhitelist - \" + ex);\n      }\n      return _res;\n    }\n\n    async function ShowNFTError(msgValue) {\n      const DivContainer = document.getElementById('unstaked-nft-container');\n\n      const curDiv = document.createElement('div');\n      curDiv.className = \"nftcontainer\";  // mt-3 ml-3\";\n\n      const chk = document.createElement(\"INPUT\");\n      chk.setAttribute(\"type\", \"checkbox\");\n      chk.id = \"chk\";\n      chk.className = \"unlisted\";\n\n      const lbl = document.createElement(\"LABEL\");\n      lbl.htmlFor = chk.id;\n\n      const objNFT = document.createElement('h6');\n      objNFT.innerHTML = msgValue;\n      objNFT.className = \"errorMessage\";\n\n      curDiv.appendChild(chk);\n      curDiv.appendChild(lbl);\n\n      curDiv.appendChild(objNFT);\n      DivContainer.appendChild(curDiv);\n    }\n\n    async function showCover() {\n      let coverDiv = document.createElement('div');\n      coverDiv.id = 'cover-div';\n\n      // make the page unscrollable while the modal form is open\n      document.body.style.overflowY = 'hidden';\n      document.body.append(coverDiv);\n    }\n\n    async function SendNFT(nftAdd, destiAdd, tkID) {\n      try {\n        await onGoingNotif(\"Sending NFT...\");\n\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, nftAdd);\n        //console.log(\"NFT: \", await nftcontract.methods.name().call());\n\n        if (await nftcontract.methods.isApprovedForAll(account, stakingnft_address).call()==false){\n          await nftcontract.methods.setApprovalForAll(stakingnft_address, true).send({ from: account});\n        }\n\n        await nftcontract.methods.safeTransferFrom(account, destiAdd, tkID).send({ from: account });\n        await refreshDAppView();\n\n        await onGoingNotif(\"\");\n      }\n      catch (ex) {\n        console.log(ex);\n        await onGoingNotif(\"\");\n      }\n    }\n\n    async function NitroAdd() {\n      await onGoingNotif(\"Pending...\");\n      try {\n        let DivContainer = document.getElementById('prompt-message');\n        var children = DivContainer.getElementsByTagName('*');\n        var child;\n\n        if (children.length > 0) {\n\n          var _isAppr = await nitrocontract.methods.isApprovedForAll(account, stakingnft_address).call();\n          if (_isAppr == false) {\n            await nitrocontract.methods.setApprovalForAll(stakingnft_address, true)\n              .send({\n                from: account,\n                gasLimit: String(totalGasLimit)\n              })\n          }\n\n          for (var i = 0; i < children.length; i++) {\n            child = children[i];\n            if (child.type == \"radio\" && child.checked == true) {\n              var nft = [];\n              nft = child.id.split(\"|\");\n\n              var _vaultId = nft[0];\n              var _tkID = nft[1];\n              var _nitroId = nft[2];\n\n              await stakingnftcontract.methods.stakeNitro(_vaultId, _tkID, _nitroId)\n                .send({\n                  from: account,\n                  gasLimit: String(totalGasLimit)\n                });\n              break;\n            }\n          }\n        }\n      }\n      catch (ex) {\n        console.log(ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function hideCover() {\n      try {\n        document.getElementById('cover-div').remove();\n        document.body.style.overflowY = '';\n      }\n      catch (ex) {\n      }\n    }\n\n    async function showPromptTransfer(text, callback) {\n      showCover();\n \n      var _nft = [];\n      _nft = text.split(\"|\");\n      var _vaultId = _nft[0];\n \n      document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard SelectedNFT\";\n\n      var _vault;\n      if (_vaultId == -1) {\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _nft[2]);\n      }\n      else {\n        _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _vault.nftAddress);\n      }\n\n      var _nftName = await nftcontract.methods.name().call();\n\n\n      let form = document.getElementById('prompt-form');\n\n      let container = document.getElementById('prompt-form-container');\n      let msg = document.getElementById('prompt-message');\n\n      var h6NFTAddy = document.createElement('h5');\n      h6NFTAddy.className = \"h6Nitro\";\n      form.className = \"transfer-width\";\n\n      var txAdd;\n      if (_vaultId == -1) {\n        h6NFTAddy.innerHTML = _nftName + \" #\" + _nft[1] + \"<br>\" + _nft[2] + \"<br>\";\n        txAdd = _nft[2];\n      }\n      else {\n        h6NFTAddy.innerHTML = _nftName + \" #\" + _nft[1] + \"<br>\" + _vault.nftAddress + \"<br>\";\n        txAdd = _vault.nftAddress;\n      }\n\n      var h6Caption = document.createElement('h6');\n      h6Caption.className = \"h6Nitro\";\n      h6Caption.innerHTML = \"Transfer NFT to (Input Wallet Address)\";\n\n      var x = document.createElement(\"INPUT\");\n      x.id = text;\n      x.placeholder = \"0x0000000000000000000000000000000000000000\";\n      x.setAttribute(\"type\", \"text\");\n\n      var curDiv = document.createElement('div');\n      curDiv.className = \"transfer-nft\";\n      msg.className = \"\";\n      msg.innerHTML = \"\";\n\n      var btnSubmit = document.getElementById('btnSubmit');\n      btnSubmit.value = \"Send\";\n\n      curDiv.appendChild(h6NFTAddy);\n      curDiv.appendChild(h6Caption);\n      curDiv.appendChild(x);\n\n      msg.appendChild(curDiv);\n\n\n      function complete(value) {\n        if (value == \"submit\") {\n          SendNFT(txAdd, x.value, _nft[1]);\n        }\n        hideCover();\n        container.style.display = 'none';\n        document.onkeydown = null;\n        callback(value);\n      }\n\n      form.onsubmit = function () {\n        let value = \"submit\";\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard\";\n        complete(value);\n        return false;\n      };\n\n      form.cancel.onclick = function () {\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard\";\n        complete(null);\n      };\n\n      document.onkeydown = function (e) {\n        if (e.key == 'Escape') {\n          document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard\";\n          complete(null);\n        }\n      };\n      container.style.display = 'block';\n    }\n\n    async function showLoading() {\n      let form = document.getElementById('prompt-form');\n      let container = document.getElementById('prompt-form-container');\n\n      let DivContainer = document.getElementById('prompt-message');\n\n      showCover();\n      //DivContainer.className = \"scroll\";\n      DivContainer.innerHTML = \"\";\n\n      const lbl = document.createElement(\"LABEL\");\n      lbl.className = \"parent\";\n\n      let img = document.createElement('img');\n      img.setAttribute(\"src\", 'loading.gif');\n\n      let curDiv = document.createElement('div');\n      curDiv.className = \"nitrocontainer\";\n\n      lbl.appendChild(img);\n      curDiv.appendChild(lbl);\n      DivContainer.appendChild(curDiv);\n\n      container.style.display = 'block';\n\n      //console.log(DivContainer);\n    }\n\n    async function showPrompt(text, callback) {\n      let form = document.getElementById('prompt-form');\n      form.className=\"nitro-equip-width\";\n      let container = document.getElementById('prompt-form-container');\n      let DivContainer = document.getElementById('prompt-message');\n      var curDiv;\n      var contractAdress;\n      var balanceOfOwner = await nitrocontract.methods.balanceOf(account).call();\n\n      showCover();\n\n      var _nft = [];\n      _nft = text.split(\"|\");\n\n      var lastClass = document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className;\n      document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard SelectedNFT\";\n\n      curDiv = document.createElement('div');\n      contractAdress = await nitrocontract.methods.symbol().call();\n      DivContainer.className = \"nitro-scroll\";\n      DivContainer.innerHTML = \"\";\n\n      for (let i = 0; i < balanceOfOwner; i++) {\n        (async function () {\n          try {\n            var tkID = await nitrocontract.methods.tokenOfOwnerByIndex(account, i).call();\n\n            var nitCard = document.createElement('div');            \n            nitCard.id = \"nit\" + tkID;\n            nitCard.className = \"nitCard\";\n\n            var nitTable = document.createElement('TABLE');\n            nitTable = document.createElement(\"TABLE\");\n            nitTable.setAttribute(\"id\", \"tbl\" + tkID);\n            nitCard.appendChild(nitTable);\n\n            var nitTR = document.createElement('TR');\n            nitTR.className = \"nitTR\";\n            nitTable.appendChild(nitTR);\n\n            var nitTD1 = document.createElement('TD');\n            nitTD1.className = \"nitTD1\";\n            nitTR.appendChild(nitTD1);\n             \n            var nitchk = document.createElement(\"INPUT\");\n            nitchk.setAttribute(\"type\", \"radio\"); \n            nitchk.id = text + '|' + tkID;\n            nitchk.className = \"nitchk\";\n            nitchk.name = \"nitro\";\n            nitTD1.appendChild(nitchk);\n\n            var nitlbl = document.createElement(\"LABEL\");\n            nitlbl.htmlFor = nitchk.id;\n            nitTD1.appendChild(nitlbl);\n\n\n            let tokenMetadataURI = await nitrocontract.methods.tokenURI(tkID).call();\n            if (tokenMetadataURI.startsWith(\"ipfs://\")) {\n              tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI.split(\"ipfs://\")[1]}`;\n            }\n            else if (tokenMetadataURI.startsWith(\"https://gateway.pinata.cloud/ipfs/\")) {\n              tokenMetadataURI = tokenMetadataURI.replace(`https://gateway.pinata.cloud/ipfs/`, ``);\n              tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI}${1}`;\n            }\n            var tokenMetadata = await fetch(tokenMetadataURI).then((response) => response.json()); \n\n            var imgNFT = document.createElement('img');\n            imgNFT.setAttribute(\"src\", tokenMetadata[\"image\"]);  \n            imgNFT.setAttribute(\"alt\", contractAdress);\n            imgNFT.setAttribute(\"title\", \"Nitro #\" + tkID);\n            imgNFT.style.width = \"100px\";\n            nitlbl.appendChild(imgNFT);\n\n            \n\n            var nitTD2 = document.createElement('TD');\n            nitTD2.className = \"nitTD2\";\n            nitTR.appendChild(nitTD2);\n            \n            var nitAtt1 = document.createElement('h6');\n            nitAtt1.className = \"nitAtt\";\n            nitAtt1.innerHTML = tokenMetadata[\"attributes\"][0][\"trait_type\"] + ': <b> x' + tokenMetadata[\"attributes\"][0][\"value\"] + '</b>'; \n            nitTD2.appendChild(nitAtt1);\n\n            var nitAtt2 = document.createElement('h6');\n            nitAtt2.className = \"nitAtt\";\n            nitAtt2.innerHTML = tokenMetadata[\"attributes\"][1][\"trait_type\"] + ': ' + tokenMetadata[\"attributes\"][1][\"value\"]; \n            nitTD2.appendChild(nitAtt2);\n\n            var nitAtt3 = document.createElement('h6');\n            nitAtt3.className = \"nitAtt\";\n            nitAtt3.innerHTML = tokenMetadata[\"attributes\"][2][\"trait_type\"] + ': ' + tokenMetadata[\"attributes\"][2][\"value\"]; \n            nitTD2.appendChild(nitAtt3);\n \n            DivContainer.appendChild(nitCard);\n\n          }\n          catch (ex2) {\n            console.log(ex2);\n          }\n\n        })();\n      }\n\n      function complete(value) {\n        if (value == \"submit\") {\n          NitroAdd();\n        }\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=lastClass;\n        hideCover();\n        container.style.display = 'none';\n        document.onkeydown = null;\n        callback(value);\n      }\n\n      form.onsubmit = function () {\n        let value = \"submit\";\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=lastClass;\n        complete(value);\n        return false;\n      };\n\n      form.cancel.onclick = function () {\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=lastClass;\n        complete(null);\n      };\n\n      document.onkeydown = function (e) {\n        if (e.key == 'Escape') {\n          document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=lastClass;\n          complete(null);\n        }\n      };\n      container.style.display = 'block';\n    }\n\n    async function NitroMint(pID) {\n      try { \n        if (account==null){\n          return;\n        }\n        await onGoingNotif(\"Pending...\");\n\n        if (amtNitro > 0) {\n\n          var totalCostWei = 0;\n          var totalCost = await nitrocontract.methods.getNitroPrice(pID).call();\n          var _allow = await rewardcontract.methods.allowance(account, nitroboost_address).call();\n          var _maxSupp = await rewardcontract.methods.totalSupply().call();\n          totalCost = Web3.utils.fromWei(totalCost) * amtNitro;\n          totalCostWei = Web3.utils.toWei(String(totalCost));\n\n          var _token = await nitrocontract.methods.getCryptotoken(pID).call();\n          var _tokencontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, _token);\n\n          var _txRejected = false;\n          console.log(\"allowable:\" , _allow, \"totalCostWei:\", Web3.utils.fromWei(totalCostWei));\n\n          if (_allow >= _maxSupp) {\n            await onGoingNotif(\"Approval...\");\n            await _tokencontract.methods.approve(nitroboost_address, _maxSupp)\n              .send({ from: account })\n              .on('error', function(error, receipt){\n                _txRejected=true;\n              })\n              .catch(()=>{\n                onGoingNotif(\"\");\n              });\n             \n            /* await rewardcontract.methods.approve(nitroboost_address, _maxSupp)\n              .send({ from: account }); */\n            await onGoingNotif(\"Pending...\");\n          }\n          console.log(_txRejected);\n          if (_txRejected==false){\n\n            await nitrocontract.methods\n              .mint(amtNitro, pID)\n              .send({\n                gasLimit: String(totalGasLimit * amtNitro),\n                to: nitroboost_address,\n                from: account\n              })\n              .on('confirmation', (confirmationNumber, receipt) => {\n                onGoingNotif(\"\");\n                //console.log(confirmationNumber, receipt);\n              });\n          }\n\n        }\n      }\n      catch (ex) {\n        console.log(ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function BtnSelected(amt) {\n      amtNitro = amt;\n    }\n \n    if (isMobile) { \n      return (\n        <div className=\"App nftapp\">\n          <nav class=\"navbar navbarfont navbar-expand-md navbar-dark bg-dark mb-1\" >\n            <div class=\"container-fluid\" style={{ fontFamily: \"SF Pro Display\" }}>\n              <a class=\"navbar-brand\" style={{ fontWeight: \"800\", fontSize: '15px' }} href=\"#\">\n                <img src=\"logo.png\" width=\"50\" />\n              </a>\n              <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n              </button>\n              <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n                <ul class=\"navbar-nav me-auto mb-2 px-3 mb-md-0\" style={{ fontSize: \"15px\" }}>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Dashboard</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Market Place</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\">Bridge NFTs</a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </nav>\n\n          <div className='container container-style-mobile mb-5'>\n            <div className='row'>\n              <body className='nftminter-mobile'>\n                <form>\n                  <div className='row p-2'>\n                    <h5 className='h5Nitro'>Mint Nitro NFT Here</h5>\n                  </div>\n                  <img src=\"./nitrocommon.gif\" width=\"100px\" />\n                  <h6 className='h6Nitro'>Select Nitro Quantity</h6>\n\n                  <ButtonGroup size=\"lg\"\n                    aria-label=\"First group\"\n                    name=\"amount\"\n                    style={{ boxShadow: \"1px 1px 5px #000000\" }}\n                    class=\"btn-group\"\n                  >\n                    <Button value=\"1\" onClick={function () { BtnSelected(1) }}>1</Button>\n                    <Button value=\"2\" onClick={function () { BtnSelected(2) }}>2</Button>\n                    <Button value=\"3\" onClick={function () { BtnSelected(3) }}>3</Button>\n                    <Button value=\"4\" onClick={function () { BtnSelected(4) }}>4</Button>\n                    <Button value=\"5\" onClick={function () { BtnSelected(5) }}>5</Button>\n                  </ButtonGroup>\n\n                  <h6 className='h6Nitro mt-3'>Pay with your preferred Crypto</h6>\n                  <div className=\"nitro-qty\" role=\"group\" id=\"btnNitroQty\" aria-label=\"Token Payment\" >\n                    {/* <button type=\"button\" class=\"btn btn-primary\" id=\"btnCrudeOil\" onClick={function () { NitroMint(0) }}></button> */}\n                    <img src=\"crudeoil_token.png\" width=\"50\" alt=\"CrudeOil\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnCrudeOil\" onClick={function () { NitroMint(0) }}/>\n                    <img src=\"martinb_token.png\" width=\"50\" alt=\"MartinB\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnMartinB\" onClick={function () { NitroMint(1) }}/>\n\n                    <img src=\"kth_token.png\" width=\"50\" alt=\"KTH\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnKTH\" onClick={function () { NitroMint(2) }}/>\n                    <img src=\"arg_token.png\" width=\"50\" alt=\"ARG\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnARG\" onClick={function () { NitroMint(3) }}/>\n                    <img src=\"tango_token.png\" width=\"50\" alt=\"Tango\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnTango\" onClick={function () { NitroMint(4) }}/>\n\n                  </div>\n                </form>\n              </body>\n            </div>\n            <div className='row'>\n              <body className='nftstaker'>\n                <form style={{ fontFamily: \"SF Pro Display\" }} >\n                  <Tabs defaultActiveKey=\"second\" className=\"nav-pills nav-fill\">\n                    <Tab eventKey=\"first\" title=\"Unstaked NFT\">\n                      <div className='row items' >\n                        <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                          <div class=\"hold-nft-menu buttonmenu\" role=\"group\" aria-label=\"Hold NFT Menu\">\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnStakeSelected\" onClick={StakeThem}>Stake Selected</button>\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnStakeAll\" onClick={StakeAll}>Stake All</button>\n                            <select id=\"nftFilter\" style={{ fontSize: \"9px\" }} className='drpFilter btn-secondary' onChange={RefreshCollection}>\n                              <option selected class=\"selected\">JeepneyRushNFT</option>\n                              <option>All Owned NFT</option>\n                            </select>\n                          </div>\n                        </div>\n                      </div>\n                      <div className='col'>\n                        <div className='row items'>\n                          <div id='unstaked-nft-container' className='nft_card_view-mobile' />\n                        </div>\n                      </div>\n                    </Tab>\n                    <Tab eventKey=\"second\" title=\"Staked NFT\">\n                      <div className='row items' >\n                        <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                          <div class=\"hold-nft-menu buttonmenu\" id=\"btnUnstakeMenu\" role=\"group\" aria-label=\"Stake NFT Menu\">\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnBack\" onClick={BackToCollection}>Back</button>\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnClaimSelected\" onClick={ClaimSelected}>Claim Selected</button>\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnUnstakeSelected\" onClick={UnstakeSelected}>Unstake Selected</button>\n                          </div>\n                        </div>\n                      </div>\n                      <div className='row items'>\n                        <div id='staked-nft-container' className='ml-3 mr-3 nft_card_view-mobile' />\n                      </div>\n                    </Tab>\n                  </Tabs>\n                </form>\n              </body>\n            </div>\n          </div>\n\n          <nav class=\"navbar navbarfont navbar-expand-md navbar-dark bg-dark fixed-float\" style={{ marginBottom: \"0px\", marginLeft: \"0px\", marginRight: \"0px\", clear: \"both\" }}>\n            <div class=\"navbar-inner\">\n              <div class=\"d-flex flex-row accountInfo\" style={{marginLeft: \"10px\"}}>\n                <div id=\"wallBal\" className=\"walletBalance\" />\n                <div id=\"btnConnect\" onClick={connectwallet} className=\"connectbutton ml-2\" type=\"button\" style={{ fontFamily: \"SF Pro Display\" }}>\n                  Connect Your Wallet\n                </div>\n              </div>\n\n            </div>\n          </nav>\n\n          <div id=\"prompt-form-container\">\n            <form id=\"prompt-form-mobile\">\n              <div className='add-booster'>\n                <div id=\"prompt-message\" className='scroll'></div>\n                <input name=\"btnSubmit\" id=\"btnSubmit\" type=\"submit\" value=\"Equip\"></input>\n                <input name=\"cancel\" id=\"cancel\" type=\"button\" value=\"Cancel\" />\n              </div>\n            </form>\n          </div>\n\n        </div>\n      );\n    }\n    else { \n      return (\n        <div className=\"App nftapp\">\n          <nav class=\"navbar navbarfont navbar-expand-md navbar-dark bg-dark mb-4\">\n            <div class=\"container-fluid\" style={{ fontFamily: \"SF Pro Display\" }}>\n              <a class=\"navbar-brand px-5\" style={{ fontWeight: \"800\", fontSize: '15px' }} href=\"#\"></a><img src=\"logo.png\" width=\"7%\" />\n              <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n              </button>\n              <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n                <ul class=\"navbar-nav me-auto mb-2 px-3 mb-md-0\" style={{ fontSize: \"15px\" }}>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Dashboard</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Market Place</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\">Bridge NFTs</a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div className='px-5'>\n              <div class=\"d-flex flex-row accountInfo\">\n                <div id=\"wallBal\" className=\"walletBalance\" />\n                <div id=\"btnConnect\" onClick={connectwallet} className=\"connectbutton ml-2\" type=\"button\" style={{ fontFamily: \"SF Pro Display\" }}>\n                  Connect Your Wallet\n                </div>\n              </div>\n            </div>\n          </nav>\n\n          <div className='container container-style'>\n            <div className='col'>\n              <body className='nftminter'>\n                <form>\n                  <div className='row p-2'>\n                    <h5 className='h5Nitro'>Mint Nitro NFT Here</h5>\n                  </div>\n                  <img src=\"./nitrocommon.gif\" width=\"100px\" />\n                  <h6 className='h6Nitro'>Select Nitro Quantity</h6>\n\n                  <ButtonGroup size=\"lg\"\n                    aria-label=\"First group\"\n                    name=\"amount\"\n                    style={{ boxShadow: \"1px 1px 5px #000000\" }}\n                    class=\"btn-group\"\n                  >\n                    <Button value=\"1\" onClick={function () { BtnSelected(1) }}>1</Button>\n                    <Button value=\"2\" onClick={function () { BtnSelected(2) }}>2</Button>\n                    <Button value=\"3\" onClick={function () { BtnSelected(3) }}>3</Button>\n                    <Button value=\"4\" onClick={function () { BtnSelected(4) }}>4</Button>\n                    <Button value=\"5\" onClick={function () { BtnSelected(5) }}>5</Button>\n                  </ButtonGroup>\n\n                  <h6 className='h6Nitro mt-3'>Pay with your preferred Crypto</h6>\n                  <div class=\"nitro-qty\" role=\"group\" id=\"btnNitroQty\" aria-label=\"Token Payment\">\n                    {/* <button type=\"button\" class=\"btn btn-primary\" id=\"btnCrudeOil\" onClick={function () { NitroMint(0) }}></button>\n                    <button type=\"button\" class=\"btn btn-primary\" id=\"btnMartinB\" onClick={function () { NitroMint(1) }}>MartinB</button> */}\n                    <img src=\"crudeoil_token.png\" width=\"50\" alt=\"CrudeOil\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnCrudeOil\" onClick={function () { NitroMint(0) }}/>\n                    <img src=\"martinb_token.png\" width=\"50\" alt=\"MartinB\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnMartinB\" onClick={function () { NitroMint(1) }}/>\n\n                    <img src=\"kth_token.png\" width=\"50\" alt=\"KTH\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnKTH\" onClick={function () { NitroMint(2) }}/>\n                    <img src=\"arg_token.png\" width=\"50\" alt=\"ARG\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnARG\" onClick={function () { NitroMint(3) }}/>\n                    <img src=\"tango_token.png\" width=\"50\" alt=\"Tango\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnTango\" onClick={function () { NitroMint(4) }}/>\n\n                  </div>\n                </form>\n              </body>\n\n            </div>\n            <div className='col'>\n              <table className='nftstaker'>\n                <tr>\n                  <body className='nftstaker'>\n                    <form style={{ fontFamily: \"SF Pro Display\" }} >\n                      <Tabs defaultActiveKey=\"second\" className=\"nav-pills nav-fill\">\n                        <Tab eventKey=\"first\" title=\"Unstaked NFT\">\n                          <div className='row items' >\n                            <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                              <div class=\"hold-nft-menu buttonmenu\" role=\"group\" aria-label=\"Hold NFT Menu\">\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnStakeSelected\" onClick={StakeThem}>Stake Selected</button>\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnStakeAll\" onClick={StakeAll}>Stake All</button>\n                                <select id=\"nftFilter\" className='drpFilter btn-secondary' onChange={RefreshCollection}>\n                                  <option selected class=\"selected\">JeepneyRushNFT</option>\n                                  <option>All Owned NFT</option>\n                                </select>\n                              </div>\n                            </div>\n                          </div>\n                          <div className='col'>\n                            <div className='row items'>\n                              <div id='unstaked-nft-container' className='nft_card_view' />\n                            </div>\n                          </div>\n                        </Tab>\n                        <Tab eventKey=\"second\" title=\"Staked NFT\">\n                          <div className='row items' >\n                            <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                              <div class=\"hold-nft-menu buttonmenu\" id=\"btnUnstakeMenu\" role=\"group\" aria-label=\"Stake NFT Menu\">\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnBack\" onClick={BackToCollection}>Back</button>\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnClaimSelected\" onClick={ClaimSelected}>Claim Selected</button>\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnUnstakeSelected\" onClick={UnstakeSelected}>Unstake Selected</button>\n                              </div>\n                            </div>\n                          </div>\n                          <div className='row items'>\n                            <div id='staked-nft-container' className='ml-3 mr-3 nft_card_view' />\n                          </div>\n                        </Tab>\n                      </Tabs>\n                    </form>\n                  </body>\n                </tr>\n              </table>\n\n            </div>\n          </div>\n\n          <div id=\"prompt-form-container\"> \n            <form id=\"prompt-form\">\n              <div className='add-booster'>\n                <div id=\"prompt-message\" className='scroll'></div>\n                <input name=\"btnSubmit\" id=\"btnSubmit\" type=\"submit\" value=\"Equip\"></input>\n                <input name=\"cancel\" id=\"cancel\" type=\"button\" value=\"Cancel\" />\n              </div>\n            </form>\n          </div>\n\n          <footer>\n            {/* <div class=\"container\">\n              <div class=\"row secondary\"></div>\n            </div> */}\n            <div class=\"row copyright\">\n              <p>Copyright &copy; 2022 RushDapp SmartBCH | All Rights Reserved</p>\n            </div>\n\n          </footer>\n        </div>\n      );\n    }\n\n  };\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
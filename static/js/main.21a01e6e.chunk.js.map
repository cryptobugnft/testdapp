{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["window","$","short_acct","tx_pending","CONFIG","ABI","account","nftcontract","defSymbol","totalGasLimit","walletBalanceAPI","scannerAPI","balanceAPI","resultAPICall","CONFIGWhitelist","stakingnftcontract","rewardcontract","nitrocontract","nftlevelcontract","stakingnft_address","nitroboost_address","web3","localStorage","getItem","rewardInDetail","vaultSelected","amtNitro","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleWindowSizeChange","setState","width","innerWidth","state","addEventListener","removeEventListener","isMobile","delay","Promise","resolve","setTimeout","connectwallet","_connectwallet","apply","arguments","asyncToGenerator","_regeneratorRuntime","mark","_callee","configResponse","accounts","networkId","abiResponse","abiWhitelist","sWallBal","wrap","_context","prev","next","ethereum","fetch","headers","Content-Type","Accept","sent","json","Web3","send","eth","getAccounts","request","method","MAINNET","ID","TESTNET","SYMBOL","GAS_LIMIT","API","BALANCE","WALLET","ABIFetch","TOKENREWARD","MAINDAPP","STAKING","NITROBOOST","RUSHLEVEL","LEVELING","toUpperCase","TESTDAPP","onGoingNotif","document","getElementById","style","WalletBalance","innerHTML","APICall","listNFTFilter","stakeVaults","LoadVaultInfo","setInterval","RewardInquiry","setItem","confirm","t0","console","log","stop","_LoadVaultInfo","_callee2","tbl","thd","_tr","_th1","_th2","counter_vault","_tbody","_vault","_rewardcontract","_rewardSymbol","_tbody_tr","_tbody_td1","_tbody_td2","_span1","_span2","_context2","createElement","className","appendChild","scope","methods","Vault","active","tokenReward","symbol","vaultName","class","reqBooster","utils","fromWei","rewardRate","RefreshCollection","_RefreshCollection","_callee3","nftCol","_context3","abrupt","value","listNFT","_x","_x2","_APICall","_callee4","theURL","apiResponse","jsonParsedContents","_context4","APIBalanceCall","_x3","_x4","_x5","_APIBalanceCall","_callee5","_account","_CA","_context5","replace","_x6","_WalletBalance","_callee6","earnedrwd","rewards","_context6","result","Number","toFixed","claimVault","_x7","_claimVault","_callee7","_vaultId","_tkIDs","balanceOfOwner","j","_tkID","_context7","ERC721","nftAddress","balanceOf","tokenOfOwnerByIndex","nftStake","owner","push","claim","from","refreshDAppView","modifyVault","_x8","_x9","_modifyVault","_callee9","_vaultContract","tab_container","i","_contractAddress","_vId","_context9","UnstakeMenuControl","length","type","contractAddress","getVaultId","renderNFT","_x10","_onGoingNotif","_callee10","msg","btnConnect","img","_context10","hideCover","ex","substring","setAttribute","showCover","unstakeVault","_x11","_unstakeVault","_callee11","_context11","unstake","GetNFTLevel","_x12","_x13","_GetNFTLevel","_callee12","nftLevel","_context12","getNFTLevel","concat","_RewardInquiry","_callee13","balanceOfVault","_symbol","contractAdress","divPend","_pendingRewards","_pend2","_stakeCount2","earned","_stakeCount","_pend","objNFTPend","objNFTLvl","_nitroStakeRemaining","_result","nitroID","remain","_glowNum","seconds","d","h","m","s","remainingBurn","_nitroEquipped","_multipower","_powerFloat","nftLvlBonus","_context13","includes","pendingRewardByAccount","String","split","pendingReward","nitroStakeRemaining","getRareType","Math","floor","getEquippedNitro","getNitroPower","parseFloat","getLevelBonus","t1","t2","_x14","_x15","_x16","_UnstakeMenuControl","_callee14","btnBack","btnClaim","btnUnstake","_btnBack","_btnClaim","_btnUnstake","_context14","display","classList","add","removeAttribute","remove","_x17","_stakeVaults","_callee16","DivContainer","usrVaultCount","usrCurrVault","_i","nftName","tokenMetadataURI","tokenMetadata","_context16","name","tokenURI","startsWith","then","response","_callee15","cardVault","cardVaultCard","cardVaultFront","imgNFT","vid_source","img_src","cardVaultDetails","cardH4","cardSpan","cardVaultBack","_tbl","_attrdiv","nft_dtl","_nftName","_symbl","_supply","_tr2","cardButtonClaim","cardButtonUnstake","cardButtonModify","_context15","id","color","totalSupply","onclick","_x18","_x19","_x20","_x21","_listNFT","_callee17","filterList","userNFTHold","btnStakeAll","btnStakeSelected","key","ctr","_i2","_context17","keys","NFT","done","ADDRESS","t3","t4","t5","t6","t7","ShowNFTError","t8","_x22","_x23","_x24","_ABIFetch","_callee18","_abi","_address","_contract","ABIResponse","ABIJSON","_context18","Contract","_x25","_listNFTFilter","_callee19","lstNFT","z_1","t_1","z","t","_context19","createTextNode","balance","fetchNFTImage","_x26","_x27","_x28","_x29","_fetchNFTImage","_callee20","tkID","_caller","_context20","_x30","_x31","_x32","_x33","_x34","_renderNFT","_callee22","isStaked","nftContainer","nftCard","nftTable","nftMedia","nftTD","nftLvl","nftChk","nftLbl","nftImg","nftAtt","nftAttTD","nftTxt1","nftTxt2","nftBtn","nftTxt3","_loop","_context22","_callee21","_nftStakeInfo","_imgFix","_context21","htmlFor","showPrompt","showPromptTransfer","UnstakeSelected","_UnstakeSelected","_callee25","_context25","ClaimThem","ClaimSelected","_ClaimSelected","_callee26","_context26","BackToCollection","_BackToCollection","_callee27","_context27","_x40","_ClaimThem","_callee28","_DivContainer","children","elements","child","tkIDs","nft","_context28","getElementsByTagName","checked","StakeAll","_StakeAll","_callee30","_isNFTAppr","address","_context30","nftApproveAll","isWhitelist","stake","stakeAny","StakeThem","_StakeThem","_callee31","_DivContainer2","_context31","_refreshDAppView","_callee32","_context32","_x45","_nftApproveAll","_callee33","_nftcontract","_context33","isApprovedForAll","setApprovalForAll","_x46","_isWhitelist","_callee34","_res","_context34","_x47","_ShowNFTError","_callee35","msgValue","curDiv","chk","lbl","objNFT","_context35","_showCover","_callee36","coverDiv","_context36","body","overflowY","append","SendNFT","_x48","_x49","_x50","_SendNFT","_callee37","nftAdd","destiAdd","_context37","safeTransferFrom","NitroAdd","_NitroAdd","_callee38","_DivContainer3","_nitroId","_context38","gasLimit","stakeNitro","_hideCover","_callee39","_context39","_x51","_x52","_showPromptTransfer","_callee40","text","callback","_nft","form","container","h6NFTAddy","txAdd","h6Caption","x","complete","_context40","onkeydown","placeholder","onsubmit","cancel","e","_x53","_x54","_showPrompt","_callee43","lastClass","_loop3","_context43","_callee42","nitCard","nitTable","nitTR","nitTD1","nitchk","nitlbl","nitTD2","nitAtt1","nitAtt2","nitAtt3","_context42","NitroMint","_x55","_NitroMint","_callee44","pID","totalCost","totalCostWei","_token","_tokencontract","_allow","_txRejected","apprAmt","_context44","getNitroPrice","toWei","getCryptotoken","parseInt","allowance","MAX_SAFE_INTEGER","approve","on","error","receipt","catch","mint","to","confirmationNumber","BtnSelected","_x56","_BtnSelected","_callee45","amt","_context45","react_default","a","fontFamily","fontWeight","fontSize","href","src","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","ButtonGroup","size","boxShadow","Button","onClick","role","alt","Tabs","defaultActiveKey","Tab","eventKey","title","onChange","selected","borderRadius","marginLeft","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App_0"],"mappings":"y/NAsBUA,OAAOC,EAAjB,IA6BIC,EA3BAC,GAAa,EAEbC,EAAS,KACTC,EAAM,KACNC,EAAU,KACVC,EAAc,KAEdC,EAAY,KACZC,EAAgB,KAEhBC,EAAmB,KACnBC,EAAa,KACbC,EAAa,KACbC,EAAgB,KAChBC,EAAkB,KAIlBC,EAAqB,KACrBC,EAAiB,KACjBC,EAAgB,KAChBC,EAAmB,KAEnBC,EAAqB,KACrBC,EAAqB,KAKrBC,GAHMC,aAAaC,QAAQ,WAGpB,MAGPC,GAAiB,EACjBC,EAAgB,KAEhBC,EAAW,EAk0EAC,cAtzEb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAaFI,uBAAyB,WACvBP,EAAKQ,SAAS,CAAEC,MAAOrC,OAAOsC,cAb9BV,EAAKW,MAAQ,CACXF,MAAOrC,OAAOsC,YAHJV,oFASZ5B,OAAOwC,iBAAiB,SAAUT,KAAKI,uEAGvCnC,OAAOyC,oBAAoB,SAAUV,KAAKI,uGAqBnC,IACCE,EAAUN,KAAKQ,MAAfF,MACFK,EAAWL,GAAS,IAQ1B,SAASM,IACP,OAAO,IAAIC,QAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAAS,OAX7C,SAeQE,IAfR,OAAAC,EAAAC,MAAAlB,KAAAmB,WAAA,SAAAF,IAAA,OAAAA,EAAAnB,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAeP,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAR,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAF,EAAAC,KAAA,GAEQ/D,OAAOiE,SAFf,CAAAH,EAAAE,KAAA,iBAAAF,EAAAE,KAAA,EAImCE,MAAM,sBAAuB,CACxDC,QAAS,CACPC,eAAgB,mBAChBC,OAAQ,sBAPlB,cAIYd,EAJZO,EAAAQ,KAAAR,EAAAE,KAAA,EAUqBT,EAAegB,OAVpC,cAUMnE,EAVN0D,EAAAQ,KAYMjD,EAAO,IAAImD,IAAKxE,OAAOiE,UAZ7BH,EAAAE,KAAA,GAeYhE,OAAOiE,SAASQ,KAAK,uBAfjC,eAAAX,EAAAE,KAAA,GAgB2B3C,EAAKqD,IAAIC,cAhBpC,eAgBUnB,EAhBVM,EAAAQ,KAiBMhE,EAAUkD,EAAS,GAjBzBM,EAAAE,KAAA,GAmB8BhE,OAAOiE,SAASW,QAAQ,CAC9CC,OAAQ,gBApBhB,YAmBYpB,EAnBZK,EAAAQ,OAuBwBlE,EAAO0E,QAAQC,IAAQtB,GAAarD,EAAO4E,QAAQD,GAvB3E,CAAAjB,EAAAE,KAAA,iBAAAF,EAAAE,KAAA,GAyBkCE,MAAM,mBAAoB,CAClDC,QAAS,CACPC,eAAgB,mBAChBC,OAAQ,sBA5BpB,eAyBcX,EAzBdI,EAAAQ,KAAAR,EAAAE,KAAA,GA+BoBN,EAAYa,OA/BhC,WA+BQlE,EA/BRyD,EAAAQ,KAiCYX,EAAe,KAEfF,GAAarD,EAAO0E,QAAQC,GAnCxC,CAAAjB,EAAAE,KAAA,gBAoCUxD,EAAYJ,EAAO0E,QAAQG,OAC3BxE,EAAgBL,EAAO0E,QAAQI,UAC/BvE,EAAaP,EAAO0E,QAAQK,IAC5BvE,EAAaR,EAAO0E,QAAQM,QAC5B1E,EAAmBN,EAAO0E,QAAQO,OAxC5CvB,EAAAE,KAAA,GAyCiCsB,GAASjE,EAAMhB,EAAIkF,YAAYlF,IAAKD,EAAOoF,SAASD,aAzCrF,eAyCUvE,EAzCV8C,EAAAQ,KAAAR,EAAAE,KAAA,GA0CqCsB,GAASjE,EAAMhB,EAAIoF,QAAQpF,IAAKD,EAAOoF,SAASC,SA1CrF,eA0CU1E,EA1CV+C,EAAAQ,KAAAR,EAAAE,KAAA,GA2CgCsB,GAASjE,EAAMhB,EAAIqF,WAAWrF,IAAKD,EAAOoF,SAASE,YA3CnF,eA2CUzE,EA3CV6C,EAAAQ,KAAAR,EAAAE,KAAA,GA4CmCsB,GAASjE,EAAMhB,EAAIsF,UAAUtF,IAAKD,EAAOoF,SAASI,UA5CrF,eA4CU1E,EA5CV4C,EAAAQ,KA8CUnD,EAAqBf,EAAOoF,SAASC,QACrCrE,EAAqBhB,EAAOoF,SAASE,WAAWG,cA/C1D/B,EAAAE,KAAA,GAiD+BE,MAAM,2BAA4B,CACrDC,QAAS,CACPC,eAAgB,mBAChBC,OAAQ,sBApDtB,eAiDUV,EAjDVG,EAAAQ,KAAAR,EAAAE,KAAA,GAuDkCL,EAAaY,OAvD/C,QAuDUzD,EAvDVgD,EAAAQ,KAAAR,EAAAE,KAAA,oBA0DiBP,GAAarD,EAAO4E,QAAQD,GA1D7C,CAAAjB,EAAAE,KAAA,gBA6DUxD,EAAYJ,EAAO4E,QAAQC,OAC3BxE,EAAgBL,EAAO4E,QAAQE,UAC/BvE,EAAaP,EAAO4E,QAAQG,IAC5BvE,EAAaR,EAAO4E,QAAQI,QAC5B1E,EAAmBN,EAAO4E,QAAQK,OAjE5CvB,EAAAE,KAAA,GAkEiCsB,GAASjE,EAAMhB,EAAIkF,YAAYlF,IAAKD,EAAO0F,SAASP,aAlErF,eAkEUvE,EAlEV8C,EAAAQ,KAAAR,EAAAE,KAAA,GAmEqCsB,GAASjE,EAAMhB,EAAIoF,QAAQpF,IAAKD,EAAO0F,SAASL,SAnErF,eAmEU1E,EAnEV+C,EAAAQ,KAAAR,EAAAE,KAAA,GAoEgCsB,GAASjE,EAAMhB,EAAIqF,WAAWrF,IAAKD,EAAO0F,SAASJ,YApEnF,eAoEUzE,EApEV6C,EAAAQ,KAAAR,EAAAE,KAAA,GAqEmCsB,GAASjE,EAAMhB,EAAIsF,UAAUtF,IAAKD,EAAO0F,SAASF,UArErF,eAqEU1E,EArEV4C,EAAAQ,KAwEUnD,EAAqBf,EAAO0F,SAASL,QACrCrE,EAAqBhB,EAAO0F,SAASJ,WAzE/C5B,EAAAE,KAAA,GA2E+BE,MAAM,+BAAgC,CACzDC,QAAS,CACPC,eAAgB,mBAChBC,OAAQ,sBA9EtB,eA2EUV,EA3EVG,EAAAQ,KAAAR,EAAAE,KAAA,GAiFkCL,EAAaY,OAjF/C,QAiFUzD,EAjFVgD,EAAAQ,KAAA,eAqFQyB,EAAa,KAETnC,EAAWoC,SAASC,eAAe,YAC9BC,MAAM7D,MAAQ,QAxF/ByB,EAAAE,KAAA,GAyFmCmC,EAAc7F,GAzFjD,eAyFQsD,EAASwC,UAzFjBtC,EAAAQ,KAAAR,EAAAE,KAAA,GA2F8BqC,EAAQ/F,EAASK,GA3F/C,eA2FQE,EA3FRiD,EAAAQ,KAAAR,EAAAE,KAAA,GA4FcsC,GAAczF,GA5F5B,eAgGQmF,SAASC,eAAe,0BAA0BG,UAAU,GACvCJ,SAASC,eAAe,wBAChCG,UAAY,GAlGjCtC,EAAAE,KAAA,GAmGcuC,GAAY,wBAnG1B,eAAAzC,EAAAE,KAAA,GAqGcwC,IArGd,QAuGoBC,YAAY,WACN,GAAZtG,GACFuG,MAED,KAEHpF,aAAaqF,QAAQ,qBAAqB,GA7GlD7C,EAAAE,KAAA,mBAkHgBhE,OAAO4G,QAAQ,kBAlH/B,SAAA9C,EAAAE,KAAA,mBAAAF,EAAAC,KAAA,IAAAD,EAAA+C,GAAA/C,EAAA,SAwHIgD,QAAQC,IAAI,8BAAAjD,EAAA+C,IAxHhB,0BAAA/C,EAAAkD,SAAA1D,EAAA,oBAfOL,MAAAlB,KAAAmB,WAAA,SA2IQsD,IA3IR,OAAAS,EAAAhE,MAAAlB,KAAAmB,WAAA,SAAA+D,IAAA,OAAAA,EAAApF,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA2IP,SAAA6D,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA7E,IAAAS,KAAA,SAAAqE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAAlE,MAAA,cAAAkE,EAAAnE,KAAA,GAEQoD,EAAMnB,SAASC,eAAe,iBAC9BG,UAAU,IAEVgB,EAAMpB,SAASmC,cAAc,UAC7BC,UAAY,cAChBjB,EAAIkB,YAAYjB,GAEZC,EAAMrB,SAASmC,cAAc,OAC7Bb,EAAOtB,SAASmC,cAAc,OAC7BG,MAAQ,MACbhB,EAAKlB,UAAY,aACjBiB,EAAIgB,YAAYf,IAEZC,EAAOvB,SAASmC,cAAc,OAC7BG,MAAQ,MACbf,EAAKnB,UAAY,kBACjBiB,EAAIgB,YAAYd,GAEhBH,EAAIiB,YAAYhB,GAEZG,EAAgB,EAEhBC,EAASzB,SAASmC,cAAc,SAxBxCD,EAAAlE,KAAA,GAyBuBjD,EAAmBwH,QAAQC,MAAMhB,GAAetF,OAzBvE,QAyBQwF,EAzBRQ,EAAA5D,KAAA,YA0BWoD,EAAOe,OA1BlB,CAAAP,EAAAlE,KAAA,gBAAAkE,EAAAlE,KAAA,GA2BkCsB,GAASjE,EAAMhB,EAAIkF,YAAYlF,IAAKqH,EAAOgB,aA3B7E,eA2BUf,EA3BVO,EAAA5D,KAAA4D,EAAAlE,KAAA,GA4BgC2D,EAAgBY,QAAQI,SAASzG,OA5BjE,eA4BU0F,EA5BVM,EAAA5D,KA8BUuD,EAAY7B,SAASmC,cAAc,OAEnCL,EAAa9B,SAASmC,cAAc,OAC7B/B,UAAYsB,EAAOkB,UAC9Bf,EAAUQ,YAAYP,IAElBC,EAAa/B,SAASmC,cAAc,OAC7BU,MAAM,SAGQ,GAArBnB,EAAOoB,aAEThB,EAAWM,UAAU,WACrBL,EAAWK,UAAU,aAGnBJ,EAAShC,SAASmC,cAAc,SAC7BU,MAAQ,SACfb,EAAO5B,UAAU5B,IAAKuE,MAAMC,QAAQtB,EAAOuB,aAEvChB,EAASjC,SAASmC,cAAc,SAC7BU,MAAQ,WACfZ,EAAO7B,UAAYwB,EAEnBG,EAAWM,YAAYL,GACvBD,EAAWM,YAAYJ,GAEvBJ,EAAUQ,YAAYN,GAEtBN,EAAOY,YAAYR,GAEnBL,GAAiB,EA7DvBU,EAAAlE,KAAA,GA8DyBjD,EAAmBwH,QAAQC,MAAMhB,GAAetF,OA9DzE,QA8DUwF,EA9DVQ,EAAA5D,KAAA4D,EAAAlE,KAAA,iBAiEImD,EAAIkB,YAAYZ,GAjEpBS,EAAAlE,KAAA,iBAAAkE,EAAAnE,KAAA,GAAAmE,EAAArB,GAAAqB,EAAA,SAoEIpB,QAAQC,IAARmB,EAAArB,IApEJ,yBAAAqB,EAAAlB,SAAAE,EAAA,mBA3IOjE,MAAAlB,KAAAmB,WAAA,SAsNQgG,IAtNR,OAAAC,EAAAlG,MAAAlB,KAAAmB,WAAA,SAAAiG,IAAA,OAAAA,EAAAtH,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAsNP,SAAA+F,IAAA,IAAAC,EAAA,OAAAjG,IAAAS,KAAA,SAAAyF,GAAA,cAAAA,EAAAvF,KAAAuF,EAAAtF,MAAA,UACe,MAAT1D,EADN,CAAAgJ,EAAAtF,KAAA,eAAAsF,EAAAC,OAAA,wBAIMF,EAASrD,SAASC,eAAe,aAAauD,MAJpDF,EAAAtF,KAAA,EAQwBqC,EAAQ/F,EAASK,GARzC,cAQEE,EARFyI,EAAAhF,KAAAgF,EAAAtF,KAAA,EASQyF,GAAQnJ,EAAS,yBAA0BO,EAAewI,GATlE,wBAAAC,EAAAtC,SAAAoC,OAtNOnG,MAAAlB,KAAAmB,WAAA,SAkOQmD,EAlORqD,EAAAC,GAAA,OAAAC,EAAA3G,MAAAlB,KAAAmB,WAAA,SAAA0G,IAAA,OAAAA,EAAA/H,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAkOP,SAAAwG,EAAuBvJ,EAAS6E,GAAhC,IAAA2E,EAAAC,EAAAC,EAAA,OAAA5G,IAAAS,KAAA,SAAAoG,GAAA,cAAAA,EAAAlG,KAAAkG,EAAAjG,MAAA,cACM8F,EAAS3E,EAAM,IAAM7E,EAD3B2J,EAAAjG,KAAA,EAE0BE,MAAM4F,GAFhC,cAEMC,EAFNE,EAAA3F,KAAA2F,EAAAjG,KAAA,EAGiC+F,EAAYxF,OAH7C,cAGMyF,EAHNC,EAAA3F,KAAA2F,EAAAV,OAAA,SAKSS,GALT,wBAAAC,EAAAjD,SAAA6C,OAlOO5G,MAAAlB,KAAAmB,WAAA,SA0OQgH,EA1ORC,EAAAC,EAAAC,GAAA,OAAAC,EAAArH,MAAAlB,KAAAmB,WAAA,SAAAoH,IAAA,OAAAA,EAAAzI,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA0OP,SAAAkH,EAA8BC,EAAUC,EAAKtF,GAA7C,IAAA2E,EAAAC,EAAAC,EAAA,OAAA5G,IAAAS,KAAA,SAAA6G,GAAA,cAAAA,EAAA3G,KAAA2G,EAAA1G,MAAA,cACM8F,EAAS3E,EAAIwF,QAAQ,mBAAoBF,GAAKE,QAAQ,WAAYH,GADxEE,EAAA1G,KAAA,EAE0BE,MAAM4F,GAFhC,cAEMC,EAFNW,EAAApG,KAAAoG,EAAA1G,KAAA,EAGiC+F,EAAYxF,OAH7C,cAGMyF,EAHNU,EAAApG,KAAAoG,EAAAnB,OAAA,SAKSS,GALT,wBAAAU,EAAA1D,SAAAuD,OA1OOtH,MAAAlB,KAAAmB,WAAA,SAkPQiD,EAlPRyE,GAAA,OAAAC,EAAA5H,MAAAlB,KAAAmB,WAAA,SAAA2H,IAAA,OAAAA,EAAAhJ,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAkPP,SAAAyH,EAA6BN,GAA7B,IAAAV,EAAAC,EAAAC,EAAAe,EAAAC,EAAA,OAAA5H,IAAAS,KAAA,SAAAoH,GAAA,cAAAA,EAAAlH,KAAAkH,EAAAjH,MAAA,cACM8F,EAASpJ,EAAiBiK,QAAQ,WAAYH,GADpDS,EAAAjH,KAAA,EAE0BE,MAAM4F,GAFhC,cAEMC,EAFNkB,EAAA3G,KAAA2G,EAAAjH,KAAA,EAGiC+F,EAAYxF,OAH7C,cAGMyF,EAHNiB,EAAA3G,KAKMyG,EAAYvG,IAAKuE,MAAMC,QAAQgB,EAAmBkB,QAClDF,EAAUG,OAAOJ,GAAWK,QAAQ,GAN1CH,EAAA1B,OAAA,SAQS,KAAOyB,EAAU,IAAMxK,GARhC,yBAAAyK,EAAAjE,SAAA8D,OAlPO7H,MAAAlB,KAAAmB,WAAA,SA6PQmI,EA7PRC,GAAA,OAAAC,EAAAtI,MAAAlB,KAAAmB,WAAA,SAAAqI,IAAA,OAAAA,EAAA1J,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA6PP,SAAAmI,EAA0BC,GAA1B,IAAA/D,EAAAgE,EAAAnL,EAAAoL,EAAAC,EAAAC,EAAA,OAAAzI,IAAAS,KAAA,SAAAiI,GAAA,cAAAA,EAAA/H,KAAA+H,EAAA9H,MAAA,cAAA8H,EAAA/H,KAAA,EAAA+H,EAAA9H,KAAA,EAEU+B,EAAa,cAFvB,cAIIe,QAAQC,IAAI,aAAc0E,GAJ9BK,EAAA9H,KAAA,EAKuBjD,EAAmBwH,QAAQC,MAAMiD,GAAUvJ,OALlE,cAKQwF,EALRoE,EAAAxH,KAOQoH,EAAS,GAPjBI,EAAA9H,KAAA,GAS4BsB,GAASjE,EAAMhB,EAAI0L,OAAO1L,IAAKqH,EAAOsE,YATlE,eASQzL,EATRuL,EAAAxH,KAAAwH,EAAA9H,KAAA,GAU+BzD,EAAYgI,QAAQ0D,UAAU9K,GAAoBe,OAVjF,QAUQyJ,EAVRG,EAAAxH,KAWIwC,QAAQC,IAAI,mBAAqB4E,GAExBC,EAAI,EAbjB,aAaoBA,EAAID,GAbxB,CAAAG,EAAA9H,KAAA,gBAAA8H,EAAA9H,KAAA,GAcwBzD,EAAYgI,QAAQ2D,oBAAoB/K,EAAoByK,GAAG1J,OAdvF,eAcU2J,EAdVC,EAAAxH,KAAAwH,EAAA9H,KAAA,GAegCjD,EAAmBwH,QAAQ4D,SAASV,EAAUI,GAAO3J,OAfrF,QAAA4J,EAAAxH,KAgBwB8H,OAAS9L,IACzBwG,QAAQC,IAAI8E,GACZH,EAAOW,KAAKR,IAlBpB,QAawCD,IAbxCE,EAAA9H,KAAA,wBAuCI8C,QAAQC,IAAI2E,GAvChBI,EAAA9H,KAAA,GAyCUjD,EAAmBwH,QAAQ+D,MAAMb,EAAUC,GAAQjH,KAAK,CAAE8H,KAAMjM,IAzC1E,eAAAwL,EAAA9H,KAAA,GA0CUwI,KA1CV,QAAAV,EAAA9H,KAAA,iBAAA8H,EAAA/H,KAAA,GAAA+H,EAAAjF,GAAAiF,EAAA,SA8CIhF,QAAQC,IAAI,cACZD,QAAQC,IAAR+E,EAAAjF,IA/CJ,eAAAiF,EAAA9H,KAAA,GAiDQ+B,EAAa,IAjDrB,yBAAA+F,EAAA9E,SAAAwE,EAAA,mBA7POvI,MAAAlB,KAAAmB,WAAA,SAsTQuJ,EAtTRC,EAAAC,GAAA,OAAAC,EAAA3J,MAAAlB,KAAAmB,WAAA,SAAA0J,IAAA,OAAAA,EAAA/K,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAsTP,SAAAwJ,EAA2BpB,EAAUqB,GAArC,IAAAC,EAAAvC,EAAAwC,EAAAC,EAAAC,EAAA,OAAA9J,IAAAS,KAAA,SAAAsJ,GAAA,cAAAA,EAAApJ,KAAAoJ,EAAAnJ,MAAA,cAAAmJ,EAAApJ,KAAA,EAAAoJ,EAAAnJ,KAAA,EAEUoJ,IAAmB,GAAM,GAAM,GAFzC,cAIQL,EAAgB,uBACpB/G,SAASC,eAAe,wBAAwBG,UAAY,GAExDoE,EAAWrJ,EAPnBgM,EAAAnJ,KAAA,EAQ0BqC,EAAQmE,EAAU7J,GAR5C,OAQIE,EARJsM,EAAA7I,KAUI9C,GAAiB,EAERwL,EAAI,EAZjB,aAYoBA,EAAInM,EAAcqK,OAAOmC,QAZ7C,CAAAF,EAAAnJ,KAAA,YAa0C,WAAhCnD,EAAcqK,OAAO8B,GAAGM,KAblC,CAAAH,EAAAnJ,KAAA,gBAcYiJ,EAAmBpM,EAAcqK,OAAO8B,GAAGO,gBAC/C9L,EAAgBwL,EAfxBE,EAAAnJ,KAAA,GAgByBjD,EAAmBwH,QAAQiF,WAAWP,GAAkB/K,OAhBjF,WAgBYgL,EAhBZC,EAAA7I,KAiBamH,GAAYyB,GAAUJ,GAAkBG,EAjBrD,CAAAE,EAAAnJ,KAAA,gBAAAmJ,EAAAnJ,KAAA,GAkB8BsB,GAASjE,EAAMhB,EAAI0L,OAAO1L,IAAK4M,GAlB7D,eAkBU1M,EAlBV4M,EAAA7I,KAAA6I,EAAAnJ,KAAA,GAoBgByJ,GAAUV,EAAexM,EAAa0M,EAAkBzC,GAAU,GApBlF,eAAA2C,EAAA5D,OAAA,oBAYqDyD,IAZrDG,EAAAnJ,KAAA,iBAAAmJ,EAAAnJ,KAAA,iBAAAmJ,EAAApJ,KAAA,GAAAoJ,EAAAtG,GAAAsG,EAAA,SA4BIrG,QAAQC,IAARoG,EAAAtG,IA5BJ,yBAAAsG,EAAAnG,SAAA6F,EAAA,mBAtTO5J,MAAAlB,KAAAmB,WAAA,SAuVQ6C,EAvVR2H,GAAA,OAAAC,EAAA1K,MAAAlB,KAAAmB,WAAA,SAAAyK,IAAA,OAAAA,EAAA9L,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAuVP,SAAAuK,EAA4BC,GAA5B,IAAAC,EAAAC,EAAA,OAAA3K,IAAAS,KAAA,SAAAmK,GAAA,cAAAA,EAAAjK,KAAAiK,EAAAhK,MAAA,OAEE,GADI8J,EAAa9H,SAASC,eAAe,cAC9B,IAAP4H,EAAW,CACb,IACEI,KACA9N,GAAW,EAEb,MAAO+N,IAGPhO,EAAaI,EAAQ6N,UAAU,EAAG,GAAK,OAAS7N,EAAQ6N,UAAU7N,EAAQ+M,OAAS,EAAG/M,EAAQ+M,SAC1FU,EAAM/H,SAASmC,cAAc,QAC7BC,UAAY,OAChB2F,EAAIK,aAAa,MAAO,YAExBN,EAAW1H,UAAYlG,EACvB4N,EAAWzF,YAAY0F,QAGvBM,KACAP,EAAW1H,UAAY,GACvB0H,EAAW1H,UAAYyH,EArB3B,wBAAAG,EAAAhH,SAAA4G,OAvVO3K,MAAAlB,KAAAmB,WAAA,SAiXQoL,EAjXRC,GAAA,OAAAC,EAAAvL,MAAAlB,KAAAmB,WAAA,SAAAsL,IAAA,OAAAA,EAAA3M,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAiXP,SAAAoL,EAA4BhD,GAA5B,IAAA/D,EAAAgE,EAAAsB,EAAAnB,EAAA,OAAAzI,IAAAS,KAAA,SAAA6K,GAAA,cAAAA,EAAA3K,KAAA2K,EAAA1K,MAAA,cAAA0K,EAAA3K,KAAA,EAAA2K,EAAA1K,KAAA,EAEU+B,EAAa,cAFvB,cAAA2I,EAAA1K,KAAA,EAIuBjD,EAAmBwH,QAAQC,MAAMiD,GAAUvJ,OAJlE,cAIQwF,EAJRgH,EAAApK,KAMQoH,EAAS,GANjBgD,EAAA1K,KAAA,EAO0BkG,EAAe/I,EAAoBuG,EAAOsE,WAAYpL,GAPhF,cAOIC,EAPJ6N,EAAApK,KAAAoK,EAAA1K,KAAA,GAQwBsB,GAASjE,EAAMhB,EAAI0L,OAAO1L,IAAKqH,EAAOsE,YAR9D,QAQIzL,EARJmO,EAAApK,KAUa0I,EAAI,EAVjB,aAUoBA,EAAInM,EAAcqK,QAVtC,CAAAwD,EAAA1K,KAAA,gBAAA0K,EAAA1K,KAAA,GAWwBzD,EAAYgI,QAAQ2D,oBAAoB/K,EAAoB6L,GAAG9K,OAXvF,eAWU2J,EAXV6C,EAAApK,KAAAoK,EAAA1K,KAAA,GAYgCjD,EAAmBwH,QAAQ4D,SAASV,EAAUI,GAAO3J,OAZrF,QAAAwM,EAAApK,KAawB8H,OAAS9L,GACzBoL,EAAOW,KAAKR,GAdpB,QAU8CmB,IAV9C0B,EAAA1K,KAAA,wBAAA0K,EAAA1K,KAAA,GAiBUjD,EAAmBwH,QAAQoG,QAAQlD,EAAUC,GAAQjH,KAAK,CAAE8H,KAAMjM,IAjB5E,eAAAoO,EAAA1K,KAAA,GAkBUwI,KAlBV,QAAAkC,EAAA1K,KAAA,iBAAA0K,EAAA3K,KAAA,GAAA2K,EAAA7H,GAAA6H,EAAA,SAqBI5H,QAAQC,IAAI,gBACZD,QAAQC,IAAR2H,EAAA7H,IAtBJ,eAAA6H,EAAA1K,KAAA,GAwBQ+B,EAAa,IAxBrB,yBAAA2I,EAAA1H,SAAAyH,EAAA,mBAjXOxL,MAAAlB,KAAAmB,WAAA,SA4YQ0L,GA5YRC,EAAAC,GAAA,OAAAC,GAAA9L,MAAAlB,KAAAmB,WAAA,SAAA6L,KAAA,OAAAA,GAAAlN,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA4YP,SAAA2L,EAA2BvD,EAAUI,GAArC,IAAAoD,EAAA,OAAA7L,IAAAS,KAAA,SAAAqL,GAAA,cAAAA,EAAAnL,KAAAmL,EAAAlL,MAAA,cAAAkL,EAAAnL,KAAA,EAAAmL,EAAAlL,KAAA,EAEyB9C,EAAiBqH,QAAQ4G,YAAY1D,EAAUI,GAAO3J,OAF/E,UAGoB,cADZ+M,EAFRC,EAAA5K,MAAA,CAAA4K,EAAAlL,KAAA,eAAAkL,EAAA3F,OAAA,eAAA6F,OAImBH,IAJnB,OAAAC,EAAAlL,KAAA,uBAAAkL,EAAAnL,KAAA,EAAAmL,EAAArI,GAAAqI,EAAA,SAAAA,EAAA3F,OAAA,SAQW,IARX,yBAAA2F,EAAAlI,SAAAgI,EAAA,kBA5YO/L,MAAAlB,KAAAmB,WAAA,SAwZQwD,KAxZR,OAAA2I,GAAApM,MAAAlB,KAAAmB,WAAA,SAAAmM,KAAA,OAAAA,GAAAxN,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAwZP,SAAAiM,IAAA,IAAA7D,EAAA7H,EAAA4G,EAAA+E,EAAAC,EAAAxC,EAAAyC,EAAAC,EAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAA/E,EAAAgF,EAAAnE,EAAAC,EAAAmE,EAAAhF,EAAAiF,EAAAhB,EAAAiB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAAC,GAAAC,GAAA,OAAA7N,IAAAS,KAAA,SAAAqN,GAAA,cAAAA,EAAAnN,KAAAmN,EAAAlN,MAAA,UAAAkN,EAAAnN,KAAA,EAGqBiC,SAASC,eAAe,cACzBG,UAAU+K,SAASjR,GAJvC,CAAAgR,EAAAlN,KAAA,eAAAkN,EAAA3H,OAAA,wBAQQ3F,EAAWoC,SAASC,eAAe,WAR3CiL,EAAAlN,KAAA,EAS+BmC,EAAc7F,GAT7C,cASIsD,EAASwC,UATb8K,EAAA5M,KAYQkG,EAAWrJ,EAZnB+P,EAAAlN,KAAA,GAa0BqC,EAAQmE,EAAU7J,GAb5C,eAaIE,EAbJqQ,EAAA5M,KAeQiL,EAAiB,EAfzB2B,EAAAlN,KAAA,GAgBwBhD,EAAeuH,QAAQI,SAASzG,OAhBxD,WAgBQsN,EAhBR0B,EAAA5M,KAiB0B,GAAlB9C,EAjBR,CAAA0P,EAAAlN,KAAA,SAmBegJ,EAAI,EAnBnB,aAmBsBA,EAAInM,EAAcqK,OAAOmC,QAnB/C,CAAA6D,EAAAlN,KAAA,YAoB4C,WAAhCnD,EAAcqK,OAAO8B,GAAGM,MAAqBlM,EAAmByE,eAAiBhF,EAAcqK,OAAO8B,GAAGO,gBAAgB1H,cApBrI,CAAAqL,EAAAlN,KAAA,gBAqBcyL,EAAiB5O,EAAcqK,OAAO8B,GAAGO,gBArBvD2D,EAAAlN,KAAA,GAsB2BjD,EAAmBwH,QAAQiF,WAAWiC,GAAgBvN,OAtBjF,WAsBUuJ,EAtBVyF,EAAA5M,KAwBcoL,EAAU1J,SAASC,eAAe,UAAYpF,EAAcqK,OAAO8B,GAAGO,iBAEtEoC,EAAkB,EAEP,MAAXD,EA5Bd,CAAAwB,EAAAlN,KAAA,gBAAAkN,EAAAlN,KAAA,GA6BgCsB,GAASjE,EAAMhB,EAAI0L,OAAO1L,IAAKQ,EAAcqK,OAAO8B,GAAGO,iBA7BvF,eA6BYhN,EA7BZ2Q,EAAA5M,KAAA4M,EAAAlN,KAAA,GA8BmCzD,EAAYgI,QAAQ0D,UAAUzB,GAAUtI,OA9B3E,eA8BYqN,EA9BZ2B,EAAA5M,KAAA4M,EAAAlN,KAAA,GAgC+BjD,EAAmBwH,QAAQ6I,uBAAuB3F,EAAUnL,GAAS4B,OAhCpG,QAgCgBgJ,EAhChBgG,EAAA5M,KAiCuB0L,EAAyB9E,EAA5B,GAAa6E,EAAe7E,EAAlB,GAEd4E,EAASuB,OAAOrB,GAAOsB,MAAM,KAAK,GAClCvG,EAAYvG,IAAKuE,MAAMC,QAAQ8G,GACnCH,EAAkBxE,OAAOJ,GAAWK,QAAQ,GAY5CsE,EAAQtJ,UAAR,UAAAgJ,OAA8BW,EAA9B,yCAAAX,OAAiFO,EAAjF,KAAAP,OAAoGI,EAApG,UAjDZ,QAmBuDxC,IAnBvDkE,EAAAlN,KAAA,iBAAAkN,EAAAlN,KAAA,qBAsD+B,GAAlBxC,EAtDb,CAAA0P,EAAAlN,KAAA,iBAAAkN,EAAAnN,KAAA,GAAAmN,EAAAlN,KAAA,GAwD4BsB,GAASjE,EAAMhB,EAAI0L,OAAO1L,IAAKoB,GAxD3D,eAwDQlB,EAxDR2Q,EAAA5M,KAAA4M,EAAAlN,KAAA,GAyDyBjD,EAAmBwH,QAAQiF,WAAW/L,GAAeS,OAzD9E,eAyDQuJ,EAzDRyF,EAAA5M,KAAA4M,EAAAlN,KAAA,GA0D+BzD,EAAYgI,QAAQ0D,UAAUzB,GAAUtI,OA1DvE,QA0DQqN,EA1DR2B,EAAA5M,KA2DQqL,EAAkB,EACdI,EAAc,EAETnE,EAAI,EA9DrB,aA8DwBA,EAAI2D,GA9D5B,CAAA2B,EAAAlN,KAAA,iBAAAkN,EAAAlN,KAAA,GA+D4BzD,EAAYgI,QAAQ2D,oBAAoB1B,EAAUoB,GAAG1J,OA/DjF,eA+Dc2J,EA/DdqF,EAAA5M,KAAA4M,EAAAlN,KAAA,GAgEoCjD,EAAmBwH,QAAQ4D,SAASV,EAAUI,GAAO3J,OAhEzF,WAAAgP,EAAA5M,KAkE4B8H,OAAS9L,EAlErC,CAAA4Q,EAAAlN,KAAA,iBAmEY+L,IAnEZmB,EAAAlN,KAAA,GAqE8BjD,EAAmBwH,QAAQgJ,cAAc9F,EAAUI,GAAO3J,OArExF,eAqEgB8N,EArEhBkB,EAAA5M,KAsEgBwL,EAASuB,OAAOrB,GAAOsB,MAAM,KAAK,GAClCvG,EAAYvG,IAAKuE,MAAMC,QAAQ8G,GAC/B9E,EAAUG,OAAOJ,GAAWK,QAAQ,GACxCuE,EAAkBxE,OAAOH,GAASI,QAAQ,IAEpC6E,EAAajK,SAASC,eAAe,MAAQwF,EAAWI,IACnDzF,UAAY,GACvB6J,EAAW7J,UAAY,SAAWuJ,EAAkB,IAAMH,EA7EtE0B,EAAAlN,KAAA,GAgFiC4K,GAAYnD,EAAUI,GAhFvD,eAgFgBoD,EAhFhBiC,EAAA5M,MAiFkB4L,EAAYlK,SAASC,eAAe,MAAQwF,EAAWI,IACnDzF,UAAY,GACtB8J,EAAU9J,UAAY6I,EAnFlCiC,EAAAnN,KAAA,GAAAmN,EAAAlN,KAAA,GAuFmCjD,EAAmBwH,QAAQiJ,oBAAoB/F,EAAUI,GAAO3J,OAvFnG,WAuFoBgJ,EAvFpBgG,EAAA5M,KAyFyB+L,EAAiCnF,EAApC,GAAoCA,EAAxB,GAAaoF,EAAWpF,EAAd,MAC9BiF,EAAuBG,GACI,GA3FzC,CAAAY,EAAAlN,KAAA,iBAAAkN,EAAAlN,KAAA,GA4FqC/C,EAAcsH,QAAQkJ,YAAYpB,GAASnO,OA5FhF,eA4FoBqO,EA5FpBW,EAAA5M,KAgGoBkM,EAAUrF,OAFDgF,EAAuB,MAAS,GAAK,GAAK,IAGnDM,EAAIiB,KAAKC,MAAMnB,EAAO,OACtBE,EAAIgB,KAAKC,MAAMnB,EAAO,MAAiB,MACvCG,EAAIe,KAAKC,MAAMnB,EAAU,KAAO,IAChCI,EAAIc,KAAKC,MAAMnB,EAAU,IAMzBK,GAJWJ,EAAI,EAAIA,GAAU,GAALA,EAAS,SAAW,WAAa,KAC9CC,EAAI,EAAIA,EAAc,IAAc,KACpCC,EAAI,EAAIA,EAAc,IAAa,KACnCC,EAAI,EAAIA,EAAc,GAAW,IAzGhEM,EAAAlN,KAAA,IA4G6CjD,EAAmBwH,QAAQqJ,iBAAiBnG,EAAUI,GAAO3J,OA5G1G,gBA4GsB4O,EA5GtBI,EAAA5M,KAAA4M,EAAAlN,KAAA,IA6G0CjD,EAAmBwH,QAAQsJ,cAAcpG,EAAUqF,GAAgB5O,OA7G7G,gBA6GsB6O,GA7GtBG,EAAA5M,KA8GoB0M,GAAcc,WAAWf,GAAc,OAAS,IA9GpEG,EAAAlN,KAAA,IAgHwC9C,EAAiBqH,QAAQwJ,cAActG,EAAUI,GAAO3J,OAhHhG,SAgHoB+O,GAhHpBC,EAAA5M,KAiHgB0M,IAA4Bc,WAAWb,GAAc,OAErDjL,SAASC,eAAe,OAASwF,EAAWI,GAAOzF,UAAa,mDAAqDyK,EAAgB,eACpHG,GAAY5F,QAAQ,GACrCpF,SAASC,eAAe,MAAQwF,EAAW,IAAMI,GAAOzD,UAAY,mBAAqBmI,EArHzG,SAAAW,EAAAlN,KAAA,mBAAAkN,EAAAnN,KAAA,IAAAmN,EAAArK,GAAAqK,EAAA,UA0HcpK,QAAQC,IAAI,iBAAkB0E,EAAUI,EAAOsE,EAA/Ce,EAAArK,IA1Hd,SA8D4C+E,IA9D5CsF,EAAAlN,KAAA,kBAAAkN,EAAAlN,KAAA,mBAAAkN,EAAAnN,KAAA,IAAAmN,EAAAc,GAAAd,EAAA,UAmIQpK,QAAQC,IAAI,sCAAZmK,EAAAc,IAnIR,SAAAd,EAAAlN,KAAA,mBAAAkN,EAAAnN,KAAA,IAAAmN,EAAAe,GAAAf,EAAA,SAwIIpK,QAAQC,IAAI,2BAA4B0E,GACxC3E,QAAQC,IAARmK,EAAAe,IAzIJ,gBAAAf,EAAA3H,OAAA,SA2ISwG,GA3IT,0BAAAmB,EAAAlK,SAAAsI,EAAA,sCAxZOrM,MAAAlB,KAAAmB,WAAA,SAsiBQkK,GAtiBR8E,EAAAC,EAAAC,GAAA,OAAAC,GAAApP,MAAAlB,KAAAmB,WAAA,SAAAmP,KAAA,OAAAA,GAAAxQ,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAsiBP,SAAAiP,EAAkCC,EAASC,EAAUC,GAArD,IAAAC,EAAAC,EAAAC,EAAA,OAAAxP,IAAAS,KAAA,SAAAgP,GAAA,cAAAA,EAAA9O,KAAA8O,EAAA7O,MAAA,OACM0O,EAAW1M,SAASC,eAAe,WACnC0M,EAAY3M,SAASC,eAAe,oBACpC2M,EAAc5M,SAASC,eAAe,sBAGxCD,SAASC,eAAe,kBAAkBC,MAAM4M,QADlC,GAAXP,GAAkC,GAAZC,GAAqC,GAAdC,EACU,OAGA,GAG7C,GAAXF,GACFG,EAAStE,aAAa,WAAY,YAClCsE,EAASK,UAAUC,IAAI,cAGvBN,EAASO,gBAAgB,YACzBP,EAASK,UAAUG,OAAO,aAGZ,GAAZV,GACFG,EAAUvE,aAAa,WAAY,YACnCuE,EAAUI,UAAUC,IAAI,cAGxBL,EAAUM,gBAAgB,YAC1BN,EAAUI,UAAUG,OAAO,aAGX,GAAdT,GACFG,EAAYxE,aAAa,WAAY,YACrCwE,EAAYG,UAAUC,IAAI,cAG1BJ,EAAYK,gBAAgB,YAC5BL,EAAYG,UAAUG,OAAO,aApCjC,wBAAAL,EAAA7L,SAAAsL,OAtiBOrP,MAAAlB,KAAAmB,WAAA,SA8kBQqD,GA9kBR4M,GAAA,OAAAC,GAAAnQ,MAAAlB,KAAAmB,WAAA,SAAAkQ,KAAA,OAAAA,GAAAvR,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA8kBP,SAAAgQ,EAA2BtG,GAA3B,IAAAvC,EAAA8I,EAAAC,EAAAC,EAAA1G,EAAAE,EAAAyC,EAAAhE,EAAA8D,EAAA3D,EAAAC,EAAA4H,EAAAC,EAAA3D,EAAA4D,EAAAC,EAAA,OAAAxQ,IAAAS,KAAA,SAAAgQ,GAAA,cAAAA,EAAA9P,KAAA8P,EAAA7P,MAAA,UACe,MAAT1D,EADN,CAAAuT,EAAA7P,KAAA,eAAA6P,EAAAtK,OAAA,wBAAAsK,EAAA7P,KAAA,EAIQrB,IAJR,cAMM6H,EAAWrJ,EANjB0S,EAAA7P,KAAA,EAOwBqC,EAAQmE,EAAU7J,GAP1C,cAOEE,EAPFgT,EAAAvP,KAAAuP,EAAA7P,KAAA,GASQoJ,IAAmB,GAAO,GAAO,GATzC,SAWQkG,EAAetN,SAASC,eAAe8G,IAChC3G,UAAY,GAEzBU,QAAQC,IAAI1E,GACRA,EAAM,IACRiR,EAAalL,UAAY,iBAElB/F,GAAO,KAAOA,EAAM,IAC3BiR,EAAalL,UAAY,iBAElB/F,GAAO,KAAQA,EAAM,KAC5BiR,EAAalL,UAAY,iBAEnB/F,GAAO,OACbiR,EAAalL,UAAY,kBAG3B5G,GAAiB,EACb+R,EAAgB,EAChBC,EAAe,KACf1G,EAAiB,KAGZE,EAAI,EAlCf,aAkCkBA,EAAInM,EAAcqK,OAAOmC,QAlC3C,CAAAwG,EAAA7P,KAAA,YAmCwC,WAAhCnD,EAAcqK,OAAO8B,GAAGM,MAAqBlM,EAAmByE,eAAiBhF,EAAcqK,OAAO8B,GAAGO,gBAAgB1H,cAnCjI,CAAAgO,EAAA7P,KAAA,gBAoCUyL,EAAiB5O,EAAcqK,OAAO8B,GAAGO,gBApCnDsG,EAAA7P,KAAA,GAqC2BjD,EAAmBwH,QAAQiF,WAAWiC,GAAgBvN,OArCjF,eAqCUuJ,EArCVoI,EAAAvP,KAAAuP,EAAA7P,KAAA,GAuC0BsB,GAASjE,EAAMhB,EAAI0L,OAAO1L,IAAKoP,GAvCzD,eAuCMlP,EAvCNsT,EAAAvP,KAAAuP,EAAA7P,KAAA,GAwCiCzD,EAAYgI,QAAQ0D,UAAUzB,GAAUtI,OAxCzE,QAwCUqN,EAxCVsE,EAAAvP,KA0CesH,EAAI,EA1CnB,aA0CsBA,EAAI2D,GA1C1B,CAAAsE,EAAA7P,KAAA,gBAAA6P,EAAA7P,KAAA,GA2C0BzD,EAAYgI,QAAQ2D,oBAAoB1B,EAAUoB,GAAG1J,OA3C/E,eA2CY2J,EA3CZgI,EAAAvP,KAAAuP,EAAA7P,KAAA,GA4CkCjD,EAAmBwH,QAAQ4D,SAASV,EAAUI,GAAO3J,OA5CvF,WAAA2R,EAAAvP,KA6C0B8H,OAAS9L,EA7CnC,CAAAuT,EAAA7P,KAAA,gBA8CUuP,IACAC,EAAe/H,EACfqB,EAAiB2C,EAhD3BoE,EAAAtK,OAAA,oBA0C0CqC,IA1C1CiI,EAAA7P,KAAA,iBAkCmDgJ,IAlCnD6G,EAAA7P,KAAA,oBAuDuB,GAAjBuP,EAvDN,CAAAM,EAAA7P,KAAA,gBAwDIxC,GAAiB,EAxDrBqS,EAAA7P,KAAA,GAyDUyI,EAAY+G,EAAc1G,GAzDpC,QAAA+G,EAAA7P,KAAA,kBA6DagJ,EAAI,EA7DjB,aA6DoBA,EAAInM,EAAcqK,OAAOmC,QA7D7C,CAAAwG,EAAA7P,KAAA,aA8D0C,WAAhCnD,EAAcqK,OAAO8B,GAAGM,MAAqBlM,EAAmByE,eAAiBhF,EAAcqK,OAAO8B,GAAGO,gBAAgB1H,cA9DnI,CAAAgO,EAAA7P,KAAA,iBAgEYyL,EAAiB5O,EAAcqK,OAAO8B,GAAGO,gBAhErDsG,EAAA7P,KAAA,GAiE6BjD,EAAmBwH,QAAQiF,WAAWiC,GAAgBvN,OAjEnF,eAiEYuJ,EAjEZoI,EAAAvP,KAAAuP,EAAA7P,KAAA,GAkE+BjD,EAAmBwH,QAAQC,MAAMiD,GAAUvJ,OAlE1E,YAAA2R,EAAAvP,KAoEuBmE,OApEvB,CAAAoL,EAAA7P,KAAA,iBAAA6P,EAAA7P,KAAA,GAqE8BsB,GAASjE,EAAMhB,EAAI0L,OAAO1L,IAAKoP,GArE7D,eAqEUlP,EArEVsT,EAAAvP,KAAAuP,EAAA7P,KAAA,GAsE8BzD,EAAYgI,QAAQuL,OAAO5R,OAtEzD,eAsEcwR,EAtEdG,EAAAvP,KAAAuP,EAAA7P,KAAA,GAuEqCzD,EAAYgI,QAAQ0D,UAAUzB,GAAUtI,OAvE7E,eAuEcqN,EAvEdsE,EAAAvP,KAAAuP,EAAA7P,KAAA,GAwE6BhD,EAAeuH,QAAQI,SAASzG,OAxE7D,QAAA2R,EAAAvP,KA0EcuH,EAAQ,EACRkE,EAAc,EACTnE,EAAI,EA5EvB,aA4E0BA,EAAI2D,GA5E9B,CAAAsE,EAAA7P,KAAA,iBAAA6P,EAAA7P,KAAA,GA6E0BzD,EAAYgI,QAAQ2D,oBAAoB1B,EAAUoB,GAAG1J,OA7E/E,eA6EY2J,EA7EZgI,EAAAvP,KAAAuP,EAAA7P,KAAA,GA+EsCjD,EAAmBwH,QAAQ4D,SAASV,EAAUI,GAAO3J,OA/E3F,WAAA2R,EAAAvP,KAiF8B8H,OAAS9L,EAjFvC,CAAAuT,EAAA7P,KAAA,iBAkFc+L,EAEkB,GApFhC,CAAA8D,EAAA7P,KAAA,iBAAA6P,EAAA7P,KAAA,GAqF6CzD,EAAYgI,QAAQwL,SAASlI,GAAO3J,OArFjF,eAqFoByR,EArFpBE,EAAAvP,MAsFqC0P,WAAW,WAC9BL,EAAgB,wBAAAvE,OAA2BuE,EAAiBrC,MAAM,WAAW,IAEtEqC,EAAiBK,WAAW,wCACnCL,EAAmBA,EAAiBhJ,QAAjB,yCACnBgJ,EAAgB,wBAAAvE,OAA2BuE,EAAmB,IA3FhFE,EAAA7P,KAAA,GA6F0CE,MAAMyP,GAAkBM,KAAK,SAACC,GAAD,OAAcA,EAAS3P,SA7F9F,QA6FoBqP,EA7FpBC,EAAAvP,KA+FgBzC,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAAC,SAAA8Q,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzN,EAAA0N,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAnS,IAAAS,KAAA,SAAA2R,GAAA,cAAAA,EAAAzR,KAAAyR,EAAAxR,MAAA,cACOoQ,EAAYpO,SAASmC,cAAc,QAC/BC,UAAY,kBACtBgM,EAAUqB,GAAKhG,EACf2E,EAAU5K,MAAQiC,GAEZ4I,EAAgBrO,SAASmC,cAAc,QAC/BC,UAAY,aACtB1F,IACF2R,EAAcjM,UAAY,sBAGtBkM,EAAiBtO,SAASmC,cAAc,QAC/BC,UAAY,qBACvB1F,IACF4R,EAAelM,UAAY,6BAIzBwL,EAAa,MAAUzC,SAAS,QAClCoD,EAASvO,SAASmC,cAAc,SAE1BqM,EAAaxO,SAASmC,cAAc,UAEtCyL,EAAa,MAAUI,WAAW,WACpCQ,EAAWpG,aAAa,MAAxB,wBAAAgB,OAAuDwE,EAAa,MAAUtC,MAAM,WAAW,KAG/FkD,EAAWpG,aAAa,MAAOwF,EAAa,OAE9CY,EAAWpG,aAAa,OAAQ,aAChCmG,EAAOlM,YAAYmM,MAGnBD,EAASvO,SAASmC,cAAc,QACzBiG,aAAa,MAAO,gBAEvBqG,EAAUb,EAAa,MAC3BW,EAAOnG,aAAa,MAAOqG,IAE7BF,EAAOnG,aAAa,MAAOqB,IAErBiF,EAAmB1O,SAASmC,cAAc,QAC/BC,UAAY,iBAEvBuM,EAAS3O,SAASmC,cAAc,OAC/BjC,MAAMwP,MAAQ,QACrBf,EAAOvM,UAAY,YACnBuM,EAAOvO,WAAasN,EAAQrG,OAAS,GAAKqG,EAAQvF,UAAU,EAAG,IAAM,MAAQuF,GAAW,UAElFkB,EAAW5O,SAASmC,cAAc,SAC/BC,UAAY,QACrBwM,EAASa,GAAK,UAAYhG,EAC1BmF,EAAS1O,MAAMwP,MAAQ,QACvBd,EAASxO,UAAY,GAErBsO,EAAiBrM,YAAYsM,GAC7BD,EAAiBrM,YAAYuM,GAE7BN,EAAejM,YAAYkM,GAC3BD,EAAejM,YAAYqM,IAErBG,EAAgB7O,SAASmC,cAAc,QAC/BC,UAAY,aAEtB0M,EAAO9O,SAASmC,cAAc,SAC9Bd,EAAMrB,SAASmC,cAAc,MACjC2M,EAAKzM,YAAYhB,GAEb0N,EAAW/O,SAASmC,cAAc,OAClC6M,EAAUhP,SAASmC,cAAc,MAtEtCqN,EAAAxR,KAAA,GAuEsBzD,EAAYgI,QAAQuL,OAAO5R,OAvEjD,eAuEK+S,EAvELO,EAAAlR,KAAAkR,EAAAxR,KAAA,GAwEoBzD,EAAYgI,QAAQI,SAASzG,OAxEjD,eAwEKgT,EAxELM,EAAAlR,KAAAkR,EAAAxR,KAAA,GAyEqBzD,EAAYgI,QAAQoN,cAAczT,OAzEvD,QAyEKiT,EAzELK,EAAAlR,KA0EC0Q,EAAQ5O,UAAY,SAAW6O,EAAW,gBAAkBC,EAAS,sBAAwBC,EAC7FJ,EAAS1M,YAAY2M,GACrBF,EAAKzM,YAAY0M,IAEbK,EAAOpP,SAASmC,cAAc,OAC7BC,UAAU,kBAETiN,EAAkBrP,SAASmC,cAAc,MAC/BjC,MAAMwP,MAAQ,QAC9BL,EAAgBjP,UAAY,aAC5BiP,EAAgBjN,UAAY,YAC5BiN,EAAgBO,QAAU,WAAcvK,EAAW+I,EAAU5K,SAEvD8L,EAAoBtP,SAASmC,cAAc,MAC/BjC,MAAMwP,MAAQ,QAChCJ,EAAkBlP,UAAY,eAC9BkP,EAAkBlN,UAAY,YAC9BkN,EAAkBM,QAAU,WAActH,EAAa8F,EAAU5K,SAE3D+L,EAAmBvP,SAASmC,cAAc,MAC/BjC,MAAMwP,MAAQ,QAC/BH,EAAiBnP,UAAY,SAC7BmP,EAAiBnN,UAAY,YAC7BmN,EAAiBK,QAAU,WAAcnJ,EAAY2H,EAAU5K,MAAO4K,EAAUqB,KAEhFL,EAAK/M,YAAYgN,GACjBD,EAAK/M,YAAYiN,GACjBF,EAAK/M,YAAYkN,GAEjBT,EAAKzM,YAAY+M,GACjBP,EAAcxM,YAAYyM,GAO1BT,EAAchM,YAAYiM,GAC1BD,EAAchM,YAAYwM,GAE1BT,EAAU/L,YAAYgM,GAEtBf,EAAajL,YAAY+L,GApH1B,yBAAAoB,EAAAxO,SAAAmN,KAADtS,GA/FhB,gBAAAgS,EAAAtK,OAAA,sBA4E8CqC,IA5E9CiI,EAAA7P,KAAA,kBA6DqDgJ,IA7DrD6G,EAAA7P,KAAA,mCAAA6P,EAAA7M,SAAAqM,OA9kBOpQ,MAAAlB,KAAAmB,WAAA,SA8yBQuG,GA9yBRoM,EAAAC,EAAAC,EAAAC,GAAA,OAAAC,GAAAhT,MAAAlB,KAAAmB,WAAA,SAAA+S,KAAA,OAAAA,GAAApU,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA8yBP,SAAA6S,EAAuB1L,EAAUuC,EAAe/C,EAAoBmM,GAApE,IAAAC,EAAAC,EAAAC,EAAAC,EAAAvJ,EAAAwJ,EAAAC,EAAA,OAAArT,IAAAS,KAAA,SAAA6S,GAAA,cAAAA,EAAA3S,KAAA2S,EAAA1S,MAAA,UAAA0S,EAAA3S,KAAA,EAEQqS,EAAc,EACdC,EAAcrQ,SAASC,eAAe,eACtCqQ,EAAmBtQ,SAASC,eAAe,oBAE/CD,SAASC,eAAe8G,GAAe3G,UAAY,GAIjC,OAAd+P,GAAqC,iBAAdA,EAV/B,CAAAO,EAAA1S,KAAA,YAWMqS,EAAYjI,aAAa,WAAY,YACrCkI,EAAiBlI,aAAa,WAAY,YAGhB,MAAtBpE,EAfV,CAAA0M,EAAA1S,KAAA,SAAA0S,EAAA7P,GAAAzD,IAAAuT,KAgBwB7V,EAAgB8V,KAhBxC,YAAAF,EAAA1E,GAAA0E,EAAA7P,MAAAgQ,KAAA,CAAAH,EAAA1S,KAAA,SAgBiBuS,EAhBjBG,EAAA1E,GAAAxI,MAiBmBwD,EAAI,EAjBvB,aAiB0BA,EAAIhD,EAAmBkB,OAAOmC,QAjBxD,CAAAqJ,EAAA1S,KAAA,YAkBqD,WAArCgG,EAAmBkB,OAAO8B,GAAGM,KAlB7C,CAAAoJ,EAAA1S,KAAA,YAmBkBlD,EAAgB8V,IAAIL,GAAKO,SAAW9M,EAAmBkB,OAAO8B,GAAGO,gBAnBnF,CAAAmJ,EAAA1S,KAAA,gBAAA0S,EAAA1S,KAAA,GAoBoCsB,GAASjE,EAAMhB,EAAI0L,OAAO1L,IAAK2J,EAAmBkB,OAAO8B,GAAGO,iBApBhG,eAoBgBhN,EApBhBmW,EAAApS,KAAAoS,EAAAzE,GAsB8BmE,EAtB9BM,EAAA1S,KAAA,GAsBmDyJ,GAAUV,EAAexM,EAAayJ,EAAmBkB,OAAO8B,GAAGO,gBAAiB/C,GAtBvI,eAAAkM,EAAAK,GAAAL,EAAApS,KAsBgB8R,EAtBhBM,EAAAzE,GAAAyE,EAAAK,GAAAL,EAAAnN,OAAA,oBAiBgEyD,IAjBhE0J,EAAA1S,KAAA,iBAAA0S,EAAA1S,KAAA,iBA+BiBgJ,EAAI,EA/BrB,aA+BwBA,EAAIhD,EAAmBkB,OAAOmC,QA/BtD,CAAAqJ,EAAA1S,KAAA,YAgCmD,WAArCgG,EAAmBkB,OAAO8B,GAAGM,MAAqBlM,EAAmByE,eAAiBmE,EAAmBkB,OAAO8B,GAAGO,gBAAgB1H,cAhCjJ,CAAA6Q,EAAA1S,KAAA,SAkCY,IAASuS,KADTC,EAAM,EACU1V,EAAgB8V,IAC1B9V,EAAgB8V,IAAIL,GAAKO,SAAW9M,EAAmBkB,OAAO8B,GAAGO,iBACnEiJ,IApChB,KAuCgBA,GAAO1V,EAAgB8V,IAAIvJ,QAvC3C,CAAAqJ,EAAA1S,KAAA,gBAAA0S,EAAA1S,KAAA,GAwCkCsB,GAASjE,EAAMhB,EAAI0L,OAAO1L,IAAK2J,EAAmBkB,OAAO8B,GAAGO,iBAxC9F,eAwCchN,EAxCdmW,EAAApS,KAAAoS,EAAAM,GA0C4BZ,EA1C5BM,EAAA1S,KAAA,GA0CiDyJ,GAAUV,EAAexM,EAAayJ,EAAmBkB,OAAO8B,GAAGO,gBAAiB/C,GA1CrI,QAAAkM,EAAAO,GAAAP,EAAApS,KA0Cc8R,EA1CdM,EAAAM,GAAAN,EAAAO,GAAA,QA+B8DjK,IA/B9D0J,EAAA1S,KAAA,iBAAA0S,EAAA1S,KAAA,wBAAA0S,EAAA1S,KAAA,GAkD0BsB,GAASjE,EAAMhB,EAAI0L,OAAO1L,IAAK8V,GAlDzD,eAkDM5V,EAlDNmW,EAAApS,KAAAoS,EAAAQ,GAuDoBd,EAvDpBM,EAAA1S,KAAA,GAuDyCyJ,GAAUV,EAAexM,EAAa4V,EAAY3L,GAvD3F,QAAAkM,EAAAS,GAAAT,EAAApS,KAuDM8R,EAvDNM,EAAAQ,GAAAR,EAAAS,GAwDMd,EAAYpD,gBAAgB,YAC5BqD,EAAiBrD,gBAAgB,YAzDvC,QA4DuB,GAAfmD,GACFgB,GAAa,mBA7DnBV,EAAA1S,KAAA,iBAAA0S,EAAA3S,KAAA,GAAA2S,EAAAW,GAAAX,EAAA,SAkEI5P,QAAQC,IAAI,wBAAA2P,EAAAW,IACZD,GAAYV,EAAAW,IAnEhB,yBAAAX,EAAA1P,SAAAkP,EAAA,mBA9yBOjT,MAAAlB,KAAAmB,WAAA,SAq3BQoC,GAr3BRgS,EAAAC,EAAAC,GAAA,OAAAC,GAAAxU,MAAAlB,KAAAmB,WAAA,SAAAuU,KAAA,OAAAA,GAAA5V,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAq3BP,SAAAqU,EAAwBrW,EAAMsW,EAAMC,GAApC,IAAAC,EAAAC,EAAAC,EAAA,OAAA3U,IAAAS,KAAA,SAAAmU,GAAA,cAAAA,EAAAjU,KAAAiU,EAAAhU,MAAA,cAAAgU,EAAAhU,KAAA,EAIsBE,MAAMyT,EAAM,CAC9BxT,QAAS,CACPC,eAAgB,mBAChBC,OAAQ,sBAPd,cAIEyT,EAJFE,EAAA1T,KAAA0T,EAAAhU,KAAA,EAUwB8T,EAAYvT,OAVpC,cAUQwT,EAVRC,EAAA1T,KAWEuT,EAAY,IAAIxW,EAAKqD,IAAIuT,SAASF,EAASH,GAX7CI,EAAAzO,OAAA,SAYSsO,GAZT,wBAAAG,EAAAhR,SAAA0Q,OAr3BOzU,MAAAlB,KAAAmB,WAAA,SAo4BQoD,GAp4BR4R,GAAA,OAAAC,GAAAlV,MAAAlB,KAAAmB,WAAA,SAAAiV,KAAA,OAAAA,GAAAtW,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAo4BP,SAAA+U,EAA6BpO,GAA7B,IAAAqO,EAAArL,EAAAsL,EAAAC,EAAAC,EAAAC,EAAA,OAAArV,IAAAS,KAAA,SAAA6U,GAAA,cAAAA,EAAA3U,KAAA2U,EAAA1U,MAAA,OAIE,KAHIqU,EAASrS,SAASC,eAAe,cAC9BG,UAAY,GAEV4G,EAAI,EAAGA,EAAIhD,EAAmBkB,OAAOmC,OAAQL,IAC3C,GAALA,KACEsL,EAAMtS,SAASmC,cAAc,WAC7BiG,aAAa,QAAS,OACtBmK,EAAMvS,SAAS2S,eAAe,iBAElCL,EAAIjQ,YAAYkQ,GAChBF,EAAOhQ,YAAYiQ,IAGoB,WAArCtO,EAAmBkB,OAAO8B,GAAGM,MAAqBtD,EAAmBkB,OAAO8B,GAAG4L,QAAU,GAAKxX,EAAmByE,eAAiBmE,EAAmBkB,OAAO8B,GAAGO,gBAAgB1H,iBAC7K2S,EAAIxS,SAASmC,cAAc,WAC7BiG,aAAa,QAASpE,EAAmBkB,OAAO8B,GAAGO,iBAEjDkL,EAAIzS,SAAS2S,eAAe3O,EAAmBkB,OAAO8B,GAAG8G,KAAO,KAAO9J,EAAmBkB,OAAO8B,GAAG4L,SACxGJ,EAAEnQ,YAAYoQ,GAEdJ,EAAOhQ,YAAYmQ,IArBzB,wBAAAE,EAAA1R,SAAAoR,OAp4BOnV,MAAAlB,KAAAmB,WAAA,SA+5BQ2V,GA/5BRC,EAAAC,EAAAC,EAAAC,GAAA,OAAAC,GAAAjW,MAAAlB,KAAAmB,WAAA,SAAAgW,KAAA,OAAAA,GAAArX,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA+5BP,SAAA8V,EAA6B5Y,EAAaiK,EAAU4O,EAAMC,GAA1D,IAAAzF,EAAAD,EAAA,OAAAvQ,IAAAS,KAAA,SAAAyV,GAAA,cAAAA,EAAAvV,KAAAuV,EAAAtV,MAAA,cACM4P,EAAgB,KADtB0F,EAAAvV,KAAA,EAAAuV,EAAAtV,KAAA,EAGiCzD,EAAYgI,QAAQwL,SAASqF,GAAMlX,OAHpE,cAGQyR,EAHR2F,EAAAhV,MAIyB0P,WAAW,WAC9BL,EAAgB,wBAAAvE,OAA2BuE,EAAiBrC,MAAM,WAAW,IAEtEqC,EAAiBK,WAAW,wCACnCL,EAAmBA,EAAiBhJ,QAAjB,yCACnBgJ,EAAgB,wBAAAvE,OAA2BuE,GAA3BvE,OAA8CgK,IATpEE,EAAAtV,KAAA,EAW0BE,MAAMyP,GAAkBM,KAAK,SAACC,GAAD,OAAcA,EAAS3P,SAX9E,OAWIqP,EAXJ0F,EAAAhV,KAAAgV,EAAAtV,KAAA,iBAAAsV,EAAAvV,KAAA,GAAAuV,EAAAzS,GAAAyS,EAAA,SAcIxS,QAAQC,IAAI,YAAcsS,GAC1BvS,QAAQC,IAARuS,EAAAzS,IAfJ,eAAAyS,EAAA/P,OAAA,SAkBSqK,GAlBT,yBAAA0F,EAAAtS,SAAAmS,EAAA,mBA/5BOlW,MAAAlB,KAAAmB,WAAA,SAq7BQuK,GAr7BR8L,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAC,GAAA3W,MAAAlB,KAAAmB,WAAA,SAAA0W,KAAA,OAAAA,GAAA/X,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAq7BP,SAAAwW,EAAyB9M,EAAexM,EAAakP,EAAgBjF,EAAUsP,GAA/E,IAAApG,EAAA/H,EAAAoO,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA9N,EAAA,OAAA5J,IAAAS,KAAA,SAAAkX,GAAA,cAAAA,EAAAhX,KAAAgX,EAAA/W,MAAA,cAAA+W,EAAA/W,KAAA,EACsBzD,EAAYgI,QAAQuL,OAAO5R,OADjD,cACMwR,EADNqH,EAAAzW,KAAAyW,EAAA/W,KAAA,EAE6BzD,EAAYgI,QAAQ0D,UAAUzB,GAAUtI,OAFrE,OAEMyJ,EAFNoP,EAAAzW,KAIMyV,EAAe/T,SAASC,eAAe8G,GAe3C,IAiBE,IAhBAjG,QAAQC,IAAI1E,GAERA,GAAO,KAAOA,EAAM,IACtB0X,EAAa3R,UAAY,iBAElB/F,GAAO,KAAOA,EAAM,IAC3B0X,EAAa3R,UAAY,iBAElB/F,GAAO,KAAQA,EAAM,KAC5B0X,EAAa3R,UAAY,iBAEnB/F,GAAO,OACb0X,EAAa3R,UAAY,kBAG3BrC,EAAa,cAhBZ+U,EAAA,SAiBQ9N,GACPnL,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAAC,SAAA2X,IAAA,IAAA5B,EAAAxF,EAAAnI,EAAAwP,EAAAzG,EAAA0G,EAAA,OAAA9X,IAAAS,KAAA,SAAAsX,GAAA,cAAAA,EAAApX,KAAAoX,EAAAnX,MAAA,cAAAmX,EAAAnX,KAAA,EACoBzD,EAAYgI,QAAQ2D,oBAAoB1B,EAAUwC,GAAG9K,OADzE,cACOkX,EADP+B,EAAA7W,KAAA6W,EAAAnX,KAAA,EAE6B6U,GAActY,EAAaiK,EAAU4O,EAAM,aAFxE,cAEOxF,EAFPuH,EAAA7W,KAAA6W,EAAAnX,KAAA,EAGwBjD,EAAmBwH,QAAQiF,WAAWiC,GAAgBvN,OAH9E,cAGOuJ,EAHP0P,EAAA7W,KAAA6W,EAAAnX,KAAA,GAK2BjD,EAAmBwH,QAAQ4D,SAASV,EAAU2N,GAAMlX,OAL/E,WAKK+Y,EALLE,EAAA7W,MAMKwV,EANL,CAAAqB,EAAAnX,KAAA,YAOOiX,EAAc7O,OAAS9L,EAP9B,CAAA6a,EAAAnX,KAAA,gBAAAmX,EAAA5R,OAAA,mBAYCyQ,EAAUhU,SAASmC,cAAc,QACzBsN,GAAK,MAAQhK,EAAW,IAAM2N,EACtCY,EAAQ5R,UAAY,WAEpB6R,EAAWjU,SAASmC,cAAc,UACzBiG,aAAa,KAAM,MAAQ3C,EAAW2N,GAC/CY,EAAQ3R,YAAY4R,IAEpBC,EAAWlU,SAASmC,cAAc,OACzBC,UAAY,WACrB6R,EAAS5R,YAAY6R,IAErBC,EAAQnU,SAASmC,cAAc,OACzBC,UAAY,QAClB8R,EAAS7R,YAAY8R,IAErBC,EAASpU,SAASmC,cAAc,OACzBsN,GAAK,MAAQhK,EAAW2N,EAC/BgB,EAAOhS,UAAY,SACnBgS,EAAOhU,UAAY,GACnB+T,EAAM9R,YAAY+R,IAGlBC,EAASrU,SAASmC,cAAc,UACzBiG,aAAa,OAAQ,YAC5BiM,EAAO5E,GAAKhG,EAAiB,IAAM2J,EACnCiB,EAAOjS,UAAY,SACnB+R,EAAM9R,YAAYgS,IAGlBC,EAAStU,SAASmC,cAAc,UACzBC,UAAY,SACnBkS,EAAOc,QAAUf,EAAO5E,GACxB0E,EAAM9R,YAAYiS,GAGd1G,EAAa,MAAUzC,SAAS,QAClCoJ,EAASvU,SAASmC,cAAc,SAC1BqM,EAAaxO,SAASmC,cAAc,UACtCyL,EAAa,MAAUI,WAAW,WACpCQ,EAAWpG,aAAa,MAAxB,wBAAAgB,OAAuDwE,EAAa,MAAUtC,MAAM,WAAW,KAG/FkD,EAAWpG,aAAa,MAAOwF,EAAa,OAE9CY,EAAWpG,aAAa,OAAQ,aAChCmM,EAAOlS,YAAYmM,KAGnB+F,EAASvU,SAASmC,cAAc,QAC5B+S,EAAUtH,EAAa,OACfI,WAAW,aACrBkH,EAAO,wBAAA9L,OAA2B8L,EAAQvQ,QAAQ,UAAW,MAE/D4P,EAAOnM,aAAa,MAAO8M,IAE7BX,EAAOnM,aAAa,MAAO,uBAC3BmM,EAAOnS,UAAU,SACjBkS,EAAOjS,YAAYkS,IAEnBC,EAASxU,SAASmC,cAAc,OACzBC,UAAY,SACnB6R,EAAS5R,YAAYmS,IAErBC,EAAWzU,SAASmC,cAAc,OACzBC,UAAY,WACrBoS,EAAOnS,YAAYoS,IAGnBC,EAAU1U,SAASmC,cAAc,OACzBsN,GAAK,MAAQhK,EAAW2N,EAChCsB,EAAQtS,UAAY,UACpBsS,EAAQtU,WAAasN,EAAQrG,OAAS,GAAKqG,EAAQvF,UAAU,EAAG,IAAMuF,GAAlD,MAAqE0F,EAAK/L,OAAS,EAAI+L,EAAKjL,UAAU,EAAG,GAAKiL,GAClIqB,EAASpS,YAAYqS,IAGrBC,EAAU3U,SAASmC,cAAc,OACzBsN,GAAK,MAAQhK,EAAW2N,EAChCuB,EAAQvS,UAAY,UACpBuS,EAAQvU,UAAY,GACpBqU,EAASpS,YAAYsS,IAGrBC,EAAS5U,SAASmC,cAAc,WACzBmF,KAAO,SACdsN,EAAOxS,UAAY,SACnBwS,EAAO1U,MAAQ,qCACf0U,EAAOxU,UAAY,IAGjBwU,EAAOhF,QADLkE,EACe,WACfuB,GAAW5P,EAAW,IAAM2N,EAAM,SAAU5P,OAK7B,WACf8R,GAAmB7P,EAAW,IAAM2N,EAAO,IAAM3J,EAAgB,SAAUjG,OAK/EiR,EAASpS,YAAYuS,IAOrBC,EAAU7U,SAASmC,cAAc,OACzBsN,GAAK,OAAShK,EAAW2N,EACjCyB,EAAQzS,UAAY,UACpByS,EAAQzU,UAAY,GACpBqU,EAASpS,YAAYwS,GAGrBd,EAAa1R,YAAY2R,GAhI1B,yBAAAmB,EAAAnU,SAAAgU,KAADnZ,IADOmL,EAAI,EAAGA,EAAIrB,EAAgBqB,IAAI8N,EAA/B9N,GAqITjH,EAAa,IAKf,MAAMmI,GACJpH,QAAQC,IAAI,YAAYmH,GA/K5B,wBAAA6M,EAAA/T,SAAA6S,OAr7BO5W,MAAAlB,KAAAmB,WAAA,SAsyCQqY,KAtyCR,OAAAC,GAAAvY,MAAAlB,KAAAmB,WAAA,SAAAsY,KAAA,OAAAA,GAAA3Z,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAsyCP,SAAAoY,IAAA,OAAArY,IAAAS,KAAA,SAAA6X,GAAA,cAAAA,EAAA3X,KAAA2X,EAAA1X,MAAA,OACE2X,IAAU,GADZ,wBAAAD,EAAA1U,SAAAyU,OAtyCOxY,MAAAlB,KAAAmB,WAAA,SA0yCQ0Y,KA1yCR,OAAAC,GAAA5Y,MAAAlB,KAAAmB,WAAA,SAAA2Y,KAAA,OAAAA,GAAAha,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA0yCP,SAAAyY,IAAA,OAAA1Y,IAAAS,KAAA,SAAAkY,GAAA,cAAAA,EAAAhY,KAAAgY,EAAA/X,MAAA,OACE2X,IAAU,GADZ,wBAAAI,EAAA/U,SAAA8U,OA1yCO7Y,MAAAlB,KAAAmB,WAAA,SA8yCQ8Y,KA9yCR,OAAAC,GAAAhZ,MAAAlB,KAAAmB,WAAA,SAAA+Y,KAAA,OAAAA,GAAApa,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA8yCP,SAAA6Y,IAAA,OAAA9Y,IAAAS,KAAA,SAAAsY,GAAA,cAAAA,EAAApY,KAAAoY,EAAAnY,MAAA,OACEuC,GAAY,wBADd,wBAAA4V,EAAAnV,SAAAkV,OA9yCOjZ,MAAAlB,KAAAmB,WAAA,SAkzCQyY,GAlzCRS,GAAA,OAAAC,GAAApZ,MAAAlB,KAAAmB,WAAA,SAAAmZ,KAAA,OAAAA,GAAAxa,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAkzCP,SAAAiZ,EAAyB3N,GAAzB,IAAA4N,EAAAC,EAAAC,EAAAC,EAAA1P,EAAA2P,EAAAlR,EAAAG,EAAAgR,EAAA,OAAAxZ,IAAAS,KAAA,SAAAgZ,GAAA,cAAAA,EAAA9Y,KAAA8Y,EAAA7Y,MAAA,UAAA6Y,EAAA9Y,KAAA,EAEiB,MAATzD,EAFR,CAAAuc,EAAA7Y,KAAA,eAAA6Y,EAAAtT,OAAA,wBAAAsT,EAAA7Y,KAAA,EAKUrB,IALV,cAAAka,EAAA7Y,KAAA,EAMU+B,EAAa,cANvB,OAWI,IAHMuN,EAAetN,SAASC,eAAe,wBACzCuW,EAAWlJ,EAAawJ,qBAAqB,KAC7CL,EAAW,GACNzP,EAAI,EAAGA,EAAIwP,EAASnP,OAAQL,IAEjB,aADlB0P,EAAQF,EAASxP,IACPM,MAAuC,GAAjBoP,EAAMK,SACpCN,EAASpQ,KAAKqQ,GAIdC,EAAQ,GAIH/Q,EAAI,EAtBjB,aAsBoBA,EAAI6Q,EAASpP,QAtBjC,CAAAwP,EAAA7Y,KAAA,gBAuBU4Y,EAAM,GACVA,EAAMH,EAAS7Q,GAAG6J,GAAGnE,MAAM,KAxBjCuL,EAAA7Y,KAAA,GAyBuBjD,EAAmBwH,QAAQiF,WAAWoP,EAAI,IAAI1a,OAzBrE,QAyBMuJ,EAzBNoR,EAAAvY,KA2BMqY,EAAMtQ,KAAKuQ,EAAI,IA3BrB,QAsByChR,IAtBzCiR,EAAA7Y,KAAA,qBA8BQ2K,EA9BR,CAAAkO,EAAA7Y,KAAA,gBAAA6Y,EAAA7Y,KAAA,GA+BYjD,EAAmBwH,QAAQoG,QAAQlD,EAAUkR,GAAOlY,KAAK,CAAE8H,KAAMjM,IA/B7E,QAAAuc,EAAA7Y,KAAA,wBAAA6Y,EAAA7Y,KAAA,GAkCYjD,EAAmBwH,QAAQ+D,MAAMb,EAAUkR,GAAOlY,KAAK,CAAE8H,KAAMjM,IAlC3E,QAoCI0b,KApCJa,EAAA7Y,KAAA,iBAAA6Y,EAAA9Y,KAAA,GAAA8Y,EAAAhW,GAAAgW,EAAA,SAwCI/V,QAAQC,IAAI,eAAA8V,EAAAhW,IAxChB,eAAAgW,EAAA7Y,KAAA,GA0CQ+B,EAAa,IA1CrB,yBAAA8W,EAAA7V,SAAAsV,EAAA,mBAlzCOrZ,MAAAlB,KAAAmB,WAAA,SA+2CQ8Z,KA/2CR,OAAAC,GAAAha,MAAAlB,KAAAmB,WAAA,SAAA+Z,KAAA,OAAAA,GAAApb,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA+2CP,SAAA6Z,IAAA,IAAA5J,EAAAkJ,EAAAC,EAAAC,EAAA1P,EAAAmQ,EAAAC,EAAAT,EAAAC,EAAAnR,EAAA,OAAArI,IAAAS,KAAA,SAAAwZ,GAAA,cAAAA,EAAAtZ,KAAAsZ,EAAArZ,MAAA,UACe,MAAT1D,EADN,CAAA+c,EAAArZ,KAAA,eAAAqZ,EAAA9T,OAAA,iBASE,IAJM+J,EAAetN,SAASC,eAAe,0BACzCuW,EAAWlJ,EAAawJ,qBAAqB,KAC7CL,EAAW,GAENzP,EAAI,EAAGA,EAAIwP,EAASnP,OAAQL,IAEjB,aADlB0P,EAAQF,EAASxP,IACPM,MACRmP,EAASpQ,KAAKqQ,GAZpB,GAgByB,GAAnBD,EAASpP,OAhBf,CAAAgQ,EAAArZ,KAAA,eAAAqZ,EAAA9T,OAAA,iBAoBM4T,GAAa,EAEbR,EAAQ,IAEE,EAEL3P,EAAI,EA1Bf,aA0BkBA,EAAIyP,EAASpP,QA1B/B,CAAAgQ,EAAArZ,KAAA,YA2BQ4Y,EAAM,GACVA,EAAMH,EAASzP,GAAGyI,GAAG9K,QAAQ,MAAO,IAAI2G,MAAM,KAE5B,GAAd6L,EA9BR,CAAAE,EAAArZ,KAAA,gBA+BMoZ,EAAUR,EAAI,GA/BpBS,EAAArZ,KAAA,GAgCY+B,EAAa,eAhCzB,eAAAsX,EAAArZ,KAAA,GAiCyBsZ,GAAcF,GAjCvC,WAmCwB,IAFlBD,EAjCNE,EAAA/Y,MAAA,CAAA+Y,EAAArZ,KAAA,gBAoCkB,EApClBqZ,EAAArZ,KAAA,GAqCc+B,EAAa,IArC3B,eAAAsX,EAAA9T,OAAA,yBAAA8T,EAAArZ,KAAA,GAwCY+B,EAAa,cAxCzB,QA2CI4W,EAAMtQ,KAAKuQ,EAAI,IA3CnB,QA0BuC5P,IA1BvCqQ,EAAArZ,KAAA,wBAAAqZ,EAAArZ,KAAA,GA8CYuZ,GAAYH,GA9CxB,YAAAC,EAAA/Y,KAAA,CAAA+Y,EAAArZ,KAAA,gBAAAqZ,EAAArZ,KAAA,GA+CyBjD,EAAmBwH,QAAQiF,WAAW4P,GAASlb,OA/CxE,eA+CQuJ,EA/CR4R,EAAA/Y,KAAA+Y,EAAArZ,KAAA,GAgDUjD,EAAmBwH,QAAQiV,MAAM/R,EAAUkR,GAAOlY,KAAK,CAAE8H,KAAMjM,IAhDzE,QAAA+c,EAAArZ,KAAA,wBAAAqZ,EAAArZ,KAAA,GAmDUjD,EAAmBwH,QAAQkV,SAASL,EAAST,GAAO,GAAMlY,KAAK,CAAE8H,KAAMjM,IAnDjF,eAAA+c,EAAArZ,KAAA,GAqDQwI,KArDR,eAAA6Q,EAAArZ,KAAA,GAsDQ+B,EAAa,IAtDrB,yBAAAsX,EAAArW,SAAAkW,OA/2COja,MAAAlB,KAAAmB,WAAA,SA06CQwa,KA16CR,OAAAC,GAAA1a,MAAAlB,KAAAmB,WAAA,SAAAya,KAAA,OAAAA,GAAA9b,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA06CP,SAAAua,IAAA,IAAAC,EAAArB,EAAAC,EAAAC,EAAA1P,EAAAmQ,EAAAC,EAAAT,EAAAC,EAAAnR,EAAA,OAAArI,IAAAS,KAAA,SAAAia,GAAA,cAAAA,EAAA/Z,KAAA+Z,EAAA9Z,MAAA,UAAA8Z,EAAA/Z,KAAA,EAEiB,MAATzD,EAFR,CAAAwd,EAAA9Z,KAAA,eAAA8Z,EAAAvU,OAAA,wBAAAuU,EAAA9Z,KAAA,EAKU+B,EAAa,cALvB,OAUI,IAHMuN,EAAetN,SAASC,eAAe,0BACzCuW,EAAWlJ,EAAawJ,qBAAqB,KAC7CL,EAAW,GACNzP,EAAI,EAAGA,EAAIwP,EAASnP,OAAQL,IAEjB,aADlB0P,EAAQF,EAASxP,IACPM,MAAuC,GAAjBoP,EAAMK,SACpCN,EAASpQ,KAAKqQ,GAIdS,GAAa,EAEbR,EAAQ,IAEE,EAEL3P,EAAI,EAvBjB,aAuBoBA,EAAIyP,EAASpP,QAvBjC,CAAAyQ,EAAA9Z,KAAA,YAwBU4Y,EAAM,GACVA,EAAMH,EAASzP,GAAGyI,GAAG9K,QAAQ,MAAO,IAAI2G,MAAM,KAE5B,GAAd6L,EA3BV,CAAAW,EAAA9Z,KAAA,gBA4BQoZ,EAAUR,EAAI,GA5BtBkB,EAAA9Z,KAAA,GA6BgB+B,EAAa,IA7B7B,eAAA+X,EAAA9Z,KAAA,GA8BgB+B,EAAa,eA9B7B,eAAA+X,EAAA9Z,KAAA,GA+B2BsZ,GAAcF,GA/BzC,WAiC0B,IAFlBD,EA/BRW,EAAAxZ,MAAA,CAAAwZ,EAAA9Z,KAAA,gBAkCoB,EAlCpB8Z,EAAA9Z,KAAA,GAmCgB+B,EAAa,IAnC7B,eAAA+X,EAAAvU,OAAA,yBAAAuU,EAAA9Z,KAAA,GAsCc+B,EAAa,cAtC3B,QAwCM4W,EAAMtQ,KAAKuQ,EAAI,IAxCrB,QAuByC5P,IAvBzC8Q,EAAA9Z,KAAA,wBAAA8Z,EAAA9Z,KAAA,GA2CcuZ,GAAYH,GA3C1B,YAAAU,EAAAxZ,KAAA,CAAAwZ,EAAA9Z,KAAA,gBAAA8Z,EAAA9Z,KAAA,GA4C2BjD,EAAmBwH,QAAQiF,WAAW4P,GAASlb,OA5C1E,eA4CUuJ,EA5CVqS,EAAAxZ,KAAAwZ,EAAA9Z,KAAA,GA6CYjD,EAAmBwH,QAAQiV,MAAM/R,EAAUkR,GAAOlY,KAAK,CAAE8H,KAAMjM,IA7C3E,QAAAwd,EAAA9Z,KAAA,wBAAA8Z,EAAA9Z,KAAA,GAgDYjD,EAAmBwH,QAAQkV,SAASL,EAAST,GAAO,GAAMlY,KAAK,CAAE8H,KAAMjM,IAhDnF,eAAAwd,EAAA9Z,KAAA,GAkDUwI,KAlDV,eAAAsR,EAAA9Z,KAAA,GAmDU+B,EAAa,IAnDvB,QAAA+X,EAAA9Z,KAAA,iBAAA8Z,EAAA/Z,KAAA,GAAA+Z,EAAAjX,GAAAiX,EAAA,SAsDIhX,QAAQC,IAAI,eAAA+W,EAAAjX,IAtDhB,eAAAiX,EAAA9Z,KAAA,GAwDQ+B,EAAa,IAxDrB,yBAAA+X,EAAA9W,SAAA4W,EAAA,mBA16CO3a,MAAAlB,KAAAmB,WAAA,SAs+CQsJ,KAt+CR,OAAAuR,GAAA9a,MAAAlB,KAAAmB,WAAA,SAAA6a,KAAA,OAAAA,GAAAlc,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAs+CP,SAAA2a,IAAA,OAAA5a,IAAAS,KAAA,SAAAoa,GAAA,cAAAA,EAAAla,KAAAka,EAAAja,MAAA,cAAAia,EAAAja,KAAA,EACQkF,IADR,cAAA+U,EAAAja,KAAA,EAEQsC,GAAczF,GAFtB,cAAAod,EAAAja,KAAA,EAGQuC,GAAY,wBAHpB,wBAAA0X,EAAAjX,SAAAgX,OAt+CO/a,MAAAlB,KAAAmB,WAAA,SA4+CQoa,GA5+CRY,GAAA,OAAAC,GAAAlb,MAAAlB,KAAAmB,WAAA,SAAAib,KAAA,OAAAA,GAAAtc,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA4+CP,SAAA+a,EAA6BhB,GAA7B,IAAAiB,EAAA,OAAAjb,IAAAS,KAAA,SAAAya,GAAA,cAAAA,EAAAva,KAAAua,EAAAta,MAAA,cAAAsa,EAAAva,KAAA,EAAAua,EAAAta,KAAA,EAE6BsB,GAASjE,EAAMhB,EAAI0L,OAAO1L,IAAK+c,GAF5D,cAEQiB,EAFRC,EAAAha,KAAAga,EAAAta,KAAA,EAGwBqa,EAAa9V,QAAQgW,iBAAiBje,EAASa,GAAoBe,OAH3F,UAImB,GAJnBoc,EAAAha,KAAA,CAAAga,EAAAta,KAAA,gBAAAsa,EAAAta,KAAA,GAKYqa,EAAa9V,QAAQiW,kBAAkBrd,GAAoB,GAAMsD,KAAK,CAAE8H,KAAMjM,IAL1F,eAAAge,EAAA/U,OAAA,UAOW,GAPX,eAAA+U,EAAAva,KAAA,GAAAua,EAAAzX,GAAAyX,EAAA,SAUIxX,QAAQC,IAAIqW,GACZtW,QAAQC,IAAI,mBAAAuX,EAAAzX,IAXhByX,EAAA/U,OAAA,UAYW,GAZX,yBAAA+U,EAAAtX,SAAAoX,EAAA,mBA5+COnb,MAAAlB,KAAAmB,WAAA,SA6/CQqa,GA7/CRkB,GAAA,OAAAC,GAAAzb,MAAAlB,KAAAmB,WAAA,SAAAwb,KAAA,OAAAA,GAAA7c,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA6/CP,SAAAsb,EAA2BvB,GAA3B,IAAAwB,EAAArI,EAAA,OAAAnT,IAAAS,KAAA,SAAAgb,GAAA,cAAAA,EAAA9a,KAAA8a,EAAA7a,MAAA,OACM4a,GAAO,EADbC,EAAA9a,KAAA,EAAA8a,EAAAhY,GAAAzD,IAAAuT,KAGoB7V,EAAgB8V,KAHpC,WAAAiI,EAAA7M,GAAA6M,EAAAhY,MAAAgQ,KAAA,CAAAgI,EAAA7a,KAAA,YAGauS,EAHbsI,EAAA7M,GAAAxI,MAIU1I,EAAgB8V,IAAIL,GAAKO,SAAWsG,EAJ9C,CAAAyB,EAAA7a,KAAA,eAKQ4a,GAAO,EALfC,EAAAtV,OAAA,mBAAAsV,EAAA7a,KAAA,gBAAA6a,EAAA7a,KAAA,iBAAA6a,EAAA9a,KAAA,GAAA8a,EAAA5M,GAAA4M,EAAA,SAWI/X,QAAQC,IAAI,iBAAA8X,EAAA5M,IAXhB,eAAA4M,EAAAtV,OAAA,SAaSqV,GAbT,yBAAAC,EAAA7X,SAAA2X,EAAA,mBA7/CO1b,MAAAlB,KAAAmB,WAAA,SA6gDQkU,GA7gDR0H,GAAA,OAAAC,GAAA9b,MAAAlB,KAAAmB,WAAA,SAAA6b,KAAA,OAAAA,GAAAld,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA6gDP,SAAA2b,EAA4BC,GAA5B,IAAA3L,EAAA4L,EAAAC,EAAAC,EAAAC,EAAA,OAAAjc,IAAAS,KAAA,SAAAyb,GAAA,cAAAA,EAAAvb,KAAAub,EAAAtb,MAAA,OACQsP,EAAetN,SAASC,eAAe,2BAEvCiZ,EAASlZ,SAASmC,cAAc,QAC/BC,UAAY,gBAEb+W,EAAMnZ,SAASmC,cAAc,UAC/BiG,aAAa,OAAQ,YACzB+Q,EAAI1J,GAAK,MACT0J,EAAI/W,UAAY,YAEVgX,EAAMpZ,SAASmC,cAAc,UAC/BiT,QAAU+D,EAAI1J,IAEZ4J,EAASrZ,SAASmC,cAAc,OAC/B/B,UAAY6Y,EACnBI,EAAOjX,UAAY,eAEnB8W,EAAO7W,YAAY8W,GACnBD,EAAO7W,YAAY+W,GAEnBF,EAAO7W,YAAYgX,GACnB/L,EAAajL,YAAY6W,GAtB3B,yBAAAI,EAAAtY,SAAAgY,OA7gDO/b,MAAAlB,KAAAmB,WAAA,SAsiDQmL,KAtiDR,OAAAkR,GAAAtc,MAAAlB,KAAAmB,WAAA,SAAAqc,KAAA,OAAAA,GAAA1d,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAsiDP,SAAAmc,IAAA,IAAAC,EAAA,OAAArc,IAAAS,KAAA,SAAA6b,GAAA,cAAAA,EAAA3b,KAAA2b,EAAA1b,MAAA,QACMyb,EAAWzZ,SAASmC,cAAc,QAC7BsN,GAAK,YAEdgK,EAAS7J,QAAU,WACjB3H,MAIFjI,SAAS2Z,KAAKzZ,MAAM0Z,UAAY,SAChC5Z,SAAS2Z,KAAKE,OAAOJ,GAVvB,wBAAAC,EAAA1Y,SAAAwY,OAtiDOvc,MAAAlB,KAAAmB,WAAA,SAmjDQ4c,GAnjDRC,EAAAC,EAAAC,GAAA,OAAAC,GAAAjd,MAAAlB,KAAAmB,WAAA,SAAAgd,KAAA,OAAAA,GAAAre,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAmjDP,SAAA8c,EAAuBC,EAAQC,EAAUjH,GAAzC,OAAAhW,IAAAS,KAAA,SAAAyc,GAAA,cAAAA,EAAAvc,KAAAuc,EAAAtc,MAAA,cAAAsc,EAAAvc,KAAA,EAAAuc,EAAAtc,KAAA,EAEU+B,EAAa,kBAFvB,cAAAua,EAAAtc,KAAA,EAIwBsB,GAASjE,EAAMhB,EAAI0L,OAAO1L,IAAK+f,GAJvD,cAII7f,EAJJ+f,EAAAhc,KAAAgc,EAAAtc,KAAA,EAOczD,EAAYgI,QAAQgW,iBAAiBje,EAASa,GAAoBe,OAPhF,UAAAoe,EAAAzZ,GAAAyZ,EAAAhc,KAOwF,GAPxFgc,EAAAzZ,GAAA,CAAAyZ,EAAAtc,KAAA,gBAAAsc,EAAAtc,KAAA,GAQYzD,EAAYgI,QAAQiW,kBAAkBrd,GAAoB,GAAMsD,KAAK,CAAE8H,KAAMjM,IARzF,eAAAggB,EAAAtc,KAAA,GAWUzD,EAAYgI,QAAQgY,iBAAiBjgB,EAAS+f,EAAUjH,GAAM3U,KAAK,CAAE8H,KAAMjM,IAXrF,eAAAggB,EAAAtc,KAAA,GAYUwI,KAZV,eAAA8T,EAAAtc,KAAA,GAcU+B,EAAa,IAdvB,QAAAua,EAAAtc,KAAA,wBAAAsc,EAAAvc,KAAA,GAAAuc,EAAAtO,GAAAsO,EAAA,SAiBIxZ,QAAQC,IAARuZ,EAAAtO,IAjBJsO,EAAAtc,KAAA,GAkBU+B,EAAa,IAlBvB,yBAAAua,EAAAtZ,SAAAmZ,EAAA,mBAnjDOld,MAAAlB,KAAAmB,WAAA,SAykDQsd,KAzkDR,OAAAC,GAAAxd,MAAAlB,KAAAmB,WAAA,SAAAud,KAAA,OAAAA,GAAA5e,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAykDP,SAAAqd,IAAA,IAAAC,EAAAnE,EAAAE,EAAA1P,EAAA4P,EAAAnR,EAAAI,EAAA+U,EAAA,OAAAxd,IAAAS,KAAA,SAAAgd,GAAA,cAAAA,EAAA9c,KAAA8c,EAAA7c,MAAA,cAAA6c,EAAA7c,KAAA,EACQ+B,EAAa,cADrB,UAAA8a,EAAA9c,KAAA,EAGQuP,EAAetN,SAASC,eAAe,kBACvCvD,IACF4Q,EAAetN,SAASC,eAAe,6BAErCuW,EAAWlJ,EAAawJ,qBAAqB,MAGpCzP,OAAS,GAV1B,CAAAwT,EAAA7c,KAAA,gBAAA6c,EAAA7c,KAAA,EAY0B/C,EAAcsH,QAAQgW,iBAAiBje,EAASa,GAAoBe,OAZ9F,UAaqB,GAbrB2e,EAAAvc,KAAA,CAAAuc,EAAA7c,KAAA,gBAAA6c,EAAA7c,KAAA,GAcc/C,EAAcsH,QAAQiW,kBAAkBrd,GAAoB,GAC/DsD,KAAK,CACJ8H,KAAMjM,EACNwgB,SAAUzP,OAAO5Q,KAjB7B,QAqBeuM,EAAI,EArBnB,aAqBsBA,EAAIwP,EAASnP,QArBnC,CAAAwT,EAAA7c,KAAA,YAuB0B,UADlB0Y,EAAQF,EAASxP,IACPM,MAAoC,GAAjBoP,EAAMK,QAvB3C,CAAA8D,EAAA7c,KAAA,eAwBoB,GACV4Y,EAAMF,EAAMjH,GAAGnE,MAAM,KAEjB7F,EAAWmR,EAAI,GACf/Q,EAAQ+Q,EAAI,GACZgE,EAAWhE,EAAI,GAEnB9V,QAAQC,IAAI,aAAc0E,EAAUI,EAAO+U,EAAUngB,GA/B/DogB,EAAA7c,KAAA,GAiCgBjD,EAAmBwH,QAAQwY,WAAWtV,EAAUI,EAAO+U,GAC1Dnc,KAAK,CACJ8H,KAAMjM,IAnCpB,eAAAugB,EAAAtX,OAAA,oBAqB2CyD,IArB3C6T,EAAA7c,KAAA,iBAAA6c,EAAA7c,KAAA,iBAAA6c,EAAA9c,KAAA,GAAA8c,EAAAha,GAAAga,EAAA,SA2CI/Z,QAAQC,IAAR8Z,EAAAha,IA3CJ,eAAAga,EAAA7c,KAAA,GA6CQ+B,EAAa,IA7CrB,yBAAA8a,EAAA7Z,SAAA0Z,EAAA,mBAzkDOzd,MAAAlB,KAAAmB,WAAA,SAynDQ+K,KAznDR,OAAA+S,GAAA/d,MAAAlB,KAAAmB,WAAA,SAAA8d,KAAA,OAAAA,GAAAnf,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAynDP,SAAA4d,IAAA,OAAA7d,IAAAS,KAAA,SAAAqd,GAAA,cAAAA,EAAAnd,KAAAmd,EAAAld,MAAA,OACE,IACEgC,SAASC,eAAe,aAAaiN,SACrClN,SAAS2Z,KAAKzZ,MAAM0Z,UAAY,GAElC,MAAO1R,IALT,wBAAAgT,EAAAla,SAAAia,OAznDOhe,MAAAlB,KAAAmB,WAAA,SAkoDQoY,GAloDR6F,EAAAC,GAAA,OAAAC,GAAApe,MAAAlB,KAAAmB,WAAA,SAAAme,KAAA,OAAAA,GAAAxf,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAkoDP,SAAAie,EAAkCC,EAAMC,GAAxC,IAAAC,EAAAhW,EAAA/D,EAAAuN,EAAAyM,EAAAC,EAAA9T,EAAA+T,EAAAC,EAAAC,EAAAC,EAAA7C,EAiEW8C,EAjEX,OAAA5e,IAAAS,KAAA,SAAAoe,GAAA,cAAAA,EAAAle,KAAAke,EAAAje,MAAA,UAiEWge,EAjEX,SAiEoBxY,GACH,UAATA,GACFsW,GAAQ+B,EAAOE,EAAEvY,MAAOiY,EAAK,IAE/BxT,KACA0T,EAAUzb,MAAM4M,QAAU,OAC1B9M,SAASkc,UAAY,KACrBV,EAAShY,IAvEX6E,KAEIoT,EAAO,GACXA,EAAOF,EAAKjQ,MAAM,KACd7F,EAAWgW,EAAK,GAGpBzb,SAASC,eAAe,MAAQwb,EAAK,GAAK,IAAMA,EAAK,IAAIrZ,UAAU,uBAGlD,GAAbqD,EAXN,CAAAwW,EAAAje,KAAA,gBAAAie,EAAAje,KAAA,EAYwBsB,GAASjE,EAAMhB,EAAI0L,OAAO1L,IAAKohB,EAAK,IAZ5D,OAYIlhB,EAZJ0hB,EAAA3d,KAAA2d,EAAAje,KAAA,wBAAAie,EAAAje,KAAA,GAemBjD,EAAmBwH,QAAQC,MAAMiD,GAAUvJ,OAf9D,eAeIwF,EAfJua,EAAA3d,KAAA2d,EAAAje,KAAA,GAgBwBsB,GAASjE,EAAMhB,EAAI0L,OAAO1L,IAAKqH,EAAOsE,YAhB9D,QAgBIzL,EAhBJ0hB,EAAA3d,KAAA,eAAA2d,EAAAje,KAAA,GAmBuBzD,EAAYgI,QAAQuL,OAAO5R,OAnBlD,QAmBM+S,EAnBNgN,EAAA3d,KAsBMod,EAAO1b,SAASC,eAAe,eAE/B0b,EAAY3b,SAASC,eAAe,yBACpC4H,EAAM7H,SAASC,eAAe,mBAE9B2b,EAAY5b,SAASmC,cAAc,OAC7BC,UAAY,UACtBsZ,EAAKtZ,UAAY,kBAGA,GAAbqD,GACFmW,EAAUxb,UAAY6O,EAAW,KAAOwM,EAAK,GAAK,OAASA,EAAK,GAAK,OACrEI,EAAQJ,EAAK,KAGbG,EAAUxb,UAAY6O,EAAW,KAAOwM,EAAK,GAAK,OAAS/Z,EAAOsE,WAAa,OAC/E6V,EAAQna,EAAOsE,aAGb8V,EAAY9b,SAASmC,cAAc,OAC7BC,UAAY,UACtB0Z,EAAU1b,UAAY,0CAElB2b,EAAI/b,SAASmC,cAAc,UAC7BsN,GAAK8L,EACPQ,EAAEI,YAAc,6CAChBJ,EAAE3T,aAAa,OAAQ,SAEnB8Q,EAASlZ,SAASmC,cAAc,QAC7BC,UAAY,eACnByF,EAAIzF,UAAY,GAChByF,EAAIzH,UAAY,GAEAJ,SAASC,eAAe,aAC9BuD,MAAQ,OAElB0V,EAAO7W,YAAYuZ,GACnB1C,EAAO7W,YAAYyZ,GACnB5C,EAAO7W,YAAY0Z,GAEnBlU,EAAIxF,YAAY6W,GAahBwC,EAAKU,SAAW,WAId,OAFApc,SAASC,eAAe,MAAQwb,EAAK,GAAK,IAAMA,EAAK,IAAIrZ,UAAU,UACnE4Z,EAFY,WAGL,GAGTN,EAAKW,OAAOzM,QAAU,WACpB5P,SAASC,eAAe,MAAQwb,EAAK,GAAK,IAAMA,EAAK,IAAIrZ,UAAU,UACnE4Z,EAAS,OAGXhc,SAASkc,UAAY,SAAUI,GAChB,UAATA,EAAE/L,MACJvQ,SAASC,eAAe,MAAQwb,EAAK,GAAK,IAAMA,EAAK,IAAIrZ,UAAU,UACnE4Z,EAAS,QAGbL,EAAUzb,MAAM4M,QAAU,QA7F5B,yBAAAmP,EAAAjb,SAAAsa,OAloDOre,MAAAlB,KAAAmB,WAAA,SA8vDQmY,GA9vDRkH,EAAAC,GAAA,OAAAC,GAAAxf,MAAAlB,KAAAmB,WAAA,SAAAuf,KAAA,OAAAA,GAAA5gB,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA8vDP,SAAAqf,EAA0BnB,EAAMC,GAAhC,IAAAG,EAAAD,EAAApO,EAAA7D,EAAA9D,EAAA8V,EAAAkB,EAAAC,EAAA5V,EAoHWgV,EApHX,OAAA5e,IAAAS,KAAA,SAAAgf,GAAA,cAAAA,EAAA9e,KAAA8e,EAAA7e,MAAA,cAoHWge,EApHX,SAoHoBxY,GACH,UAATA,GACFgX,KAEFxa,SAASC,eAAe,MAAQwb,EAAK,GAAK,IAAMA,EAAK,IAAIrZ,UAAUua,EACnE1U,KACA0T,EAAUzb,MAAM4M,QAAU,OAC1B9M,SAASkc,UAAY,KACrBV,EAAShY,IA3HPmY,EAAY3b,SAASC,eAAe,yBAGrCvD,GACDgf,EAAO1b,SAASC,eAAe,sBAC/BqN,EAAetN,SAASC,eAAe,2BAGvCyb,EAAO1b,SAASC,eAAe,eAC/BqN,EAAetN,SAASC,eAAe,mBAV3C4c,EAAA7e,KAAA,EAe6B/C,EAAcsH,QAAQ0D,UAAU3L,GAAS4B,OAftE,cAeMyJ,EAfNkX,EAAAve,KAiBE+J,KAEIoT,EAAO,GACXA,EAAOF,EAAKjQ,MAAM,KAEdqR,EAAY3c,SAASC,eAAe,MAAQwb,EAAK,GAAK,IAAMA,EAAK,IAAIrZ,UACzEpC,SAASC,eAAe,MAAQwb,EAAK,GAAK,IAAMA,EAAK,IAAIrZ,UAAU,sBAC1DpC,SAASmC,cAAc,OAxBlC0a,EAAA7e,KAAA,GAyByB/C,EAAcsH,QAAQI,SAASzG,OAzBxD,QA6BE,IAJAuN,EAzBFoT,EAAAve,KA2BEgP,EAAalN,UAAY,GA3B3Bwc,EAAA,SA6BW5V,GACPnL,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAAC,SAAAyf,IAAA,IAAA1J,EAAA2J,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzP,EAAAC,EAAAW,EAAA8O,EAAAC,EAAAC,EAAAC,EAAA,OAAApgB,IAAAS,KAAA,SAAA4f,GAAA,cAAAA,EAAA1f,KAAA0f,EAAAzf,MAAA,cAAAyf,EAAA1f,KAAA,EAAA0f,EAAAzf,KAAA,EAEoB/C,EAAcsH,QAAQ2D,oBAAoB5L,EAAS0M,GAAG9K,OAF1E,cAEOkX,EAFPqK,EAAAnf,MAIOye,EAAU/c,SAASmC,cAAc,QAC7BsN,GAAK,MAAQ2D,EAEnB2J,EAAQ3a,UADP1F,EACmB,iBAGA,UAGlBsgB,EAAWhd,SAASmC,cAAc,UACtC6a,EAAWhd,SAASmC,cAAc,UACzBiG,aAAa,KAAM,MAAQgL,GACpC2J,EAAQ1a,YAAY2a,IAEhBC,EAAQjd,SAASmC,cAAc,OAC7BC,UAAY,QAClB4a,EAAS3a,YAAY4a,IAEjBC,EAASld,SAASmC,cAAc,OAC7BC,UAAY,SACnB6a,EAAM5a,YAAY6a,IAEdC,EAASnd,SAASmC,cAAc,UAC7BiG,aAAa,OAAQ,SAC5B+U,EAAO1N,GAAK8L,EAAO,IAAMnI,EACzB+J,EAAO/a,UAAY,SACnB+a,EAAOrP,KAAO,QACdoP,EAAO7a,YAAY8a,IAEfC,EAASpd,SAASmC,cAAc,UAC7BiT,QAAU+H,EAAO1N,GACxByN,EAAO7a,YAAY+a,GAnCtBK,EAAAzf,KAAA,GAsCgC/C,EAAcsH,QAAQwL,SAASqF,GAAMlX,OAtCrE,eAsCOyR,EAtCP8P,EAAAnf,MAuCwB0P,WAAW,WAC9BL,EAAgB,wBAAAvE,OAA2BuE,EAAiBrC,MAAM,WAAW,IAEtEqC,EAAiBK,WAAW,wCACnCL,EAAmBA,EAAiBhJ,QAAjB,yCACnBgJ,EAAgB,wBAAAvE,OAA2BuE,EAAmB,IA5CnE8P,EAAAzf,KAAA,GA8C6BE,MAAMyP,GAAkBM,KAAK,SAACC,GAAD,OAAcA,EAAS3P,SA9CjF,QA8COqP,EA9CP6P,EAAAnf,MAgDOiQ,EAASvO,SAASmC,cAAc,QAC7BiG,aAAa,MAAOwF,EAAa,OACxCW,EAAOnG,aAAa,MAAOqB,GAC3B8E,EAAOnG,aAAa,QAAS,UAAYgL,GACzC7E,EAAOrO,MAAM7D,MAAQ,QACrB+gB,EAAO/a,YAAYkM,IAIf8O,EAASrd,SAASmC,cAAc,OAC7BC,UAAY,SACnB6a,EAAM5a,YAAYgb,IAEdC,EAAUtd,SAASmC,cAAc,OAC7BC,UAAY,SACpBkb,EAAQld,UAAYwN,EAAa,WAAe,GAA5B,WAA+C,UAAYA,EAAa,WAAe,GAA5B,MAA0C,OACzHyP,EAAOhb,YAAYib,IAEfC,EAAUvd,SAASmC,cAAc,OAC7BC,UAAY,SACpBmb,EAAQnd,UAAYwN,EAAa,WAAe,GAA5B,WAA+C,KAAOA,EAAa,WAAe,GAA5B,MAC1EyP,EAAOhb,YAAYkb,IAEfC,EAAUxd,SAASmC,cAAc,OAC7BC,UAAY,SACpBob,EAAQpd,UAAYwN,EAAa,WAAe,GAA5B,WAA+C,KAAOA,EAAa,WAAe,GAA5B,MAC1EyP,EAAOhb,YAAYmb,GAEnBlQ,EAAajL,YAAY0a,GA5E5BU,EAAAzf,KAAA,iBAAAyf,EAAA1f,KAAA,GAAA0f,EAAA5c,GAAA4c,EAAA,SAgFG3c,QAAQC,IAAR0c,EAAA5c,IAhFH,yBAAA4c,EAAAzc,SAAA8b,EAAA,iBAADjhB,IADOmL,EAAI,EAAGA,EAAIrB,EAAgBqB,IAAK4V,EAAhC5V,GAkGT0U,EAAKU,SAAW,WAId,OAFApc,SAASC,eAAe,MAAQwb,EAAK,GAAK,IAAMA,EAAK,IAAIrZ,UAAUua,EACnEX,EAFY,WAGL,GAGTN,EAAKW,OAAOzM,QAAU,WACpB5P,SAASC,eAAe,MAAQwb,EAAK,GAAK,IAAMA,EAAK,IAAIrZ,UAAUua,EACnEX,EAAS,OAGXhc,SAASkc,UAAY,SAAUI,GAChB,UAATA,EAAE/L,MACJvQ,SAASC,eAAe,MAAQwb,EAAK,GAAK,IAAMA,EAAK,IAAIrZ,UAAUua,EACnEX,EAAS,QAGbL,EAAUzb,MAAM4M,QAAU,QAjJ5B,yBAAA+P,EAAA7b,SAAA0b,OA9vDOzf,MAAAlB,KAAAmB,WAAA,SAk5DQwgB,GAl5DRC,GAAA,OAAAC,GAAA3gB,MAAAlB,KAAAmB,WAAA,SAAA0gB,KAAA,OAAAA,GAAA/hB,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KAk5DP,SAAAwgB,EAAyBC,GAAzB,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAjhB,IAAAS,KAAA,SAAAygB,GAAA,cAAAA,EAAAvgB,KAAAugB,EAAAtgB,MAAA,UAAAsgB,EAAAvgB,KAAA,EAEiB,MAATzD,EAFR,CAAAgkB,EAAAtgB,KAAA,eAAAsgB,EAAA/a,OAAA,wBAAA+a,EAAAtgB,KAAA,EAKU+B,EAAa,cALvB,YAOQrE,EAAW,GAPnB,CAAA4iB,EAAAtgB,KAAA,gBAAAsgB,EAAAtgB,KAAA,EAS4B/C,EAAcsH,QAAQgc,cAAcT,GAAK5hB,OATrE,cASU6hB,EATVO,EAAAhgB,KAUMyf,EAAYvf,IAAKuE,MAAMC,QAAQ+a,GAAariB,EACxCsiB,EAAexf,IAAKuE,MAAMyb,MAAMnT,OAAO0S,IAXjDO,EAAAtgB,KAAA,GAayB/C,EAAcsH,QAAQkc,eAAeX,GAAK5hB,OAbnE,eAaU+hB,EAbVK,EAAAhgB,KAAAggB,EAAAtgB,KAAA,GAciCsB,GAASjE,EAAMhB,EAAIkF,YAAYlF,IAAK4jB,GAdrE,eAcUC,EAdVI,EAAAhgB,KAAAggB,EAAAzd,GAgBmB6d,SAhBnBJ,EAAAtgB,KAAA,GAgBmCkgB,EAAe3b,QAAQoc,UAAUrkB,EAASc,GAAoBc,OAhBjG,WAAAoiB,EAAAtS,GAAAsS,EAAAhgB,KAgBU6f,GAhBV,EAAAG,EAAAzd,IAAAyd,EAAAtS,IAkBUoS,GAAc,EAClBtd,QAAQC,IAAI1F,KAER8iB,EAASH,GArBnB,CAAAM,EAAAtgB,KAAA,gBAAAsgB,EAAAtgB,KAAA,GAsBc+B,EAAa,eAtB3B,eAuBYse,EAAU7f,IAAKuE,MAAMyb,MAAMnT,OAAO0S,EAAU5Y,OAAOyZ,mBAvB/DN,EAAAtgB,KAAA,GAwBckgB,EAAe3b,QAAQsc,QAAQzjB,EAAoBiQ,OAAOgT,IAC7D5f,KAAK,CAAE8H,KAAMjM,IACbwkB,GAAG,QAAS,SAASC,EAAOC,GAC3BZ,GAAY,IAEba,MAAM,WACLlf,EAAa,MA9BzB,eAAAue,EAAAtgB,KAAA,GAmCc+B,EAAa,cAnC3B,WAqCMe,QAAQC,IAAIqd,GACK,GAAbA,EAtCV,CAAAE,EAAAtgB,KAAA,gBAAAsgB,EAAAtgB,KAAA,GAwCc/C,EAAcsH,QACjB2c,KAAKxjB,EAAUoiB,GACfrf,KAAK,CACJqc,SAAUzP,OAAO5Q,EAAgBiB,GACjCyjB,GAAI/jB,EACJmL,KAAMjM,IAEPwkB,GAAG,eAAgB,SAACM,EAAoBJ,GACvCjf,EAAa,MAhDzB,QAAAue,EAAAtgB,KAAA,iBAAAsgB,EAAAvgB,KAAA,GAAAugB,EAAArS,GAAAqS,EAAA,SAwDIxd,QAAQC,IAARud,EAAArS,IAxDJ,eAAAqS,EAAAtgB,KAAA,GA0DQ+B,EAAa,IA1DrB,yBAAAue,EAAAtd,SAAA6c,EAAA,mBAl5DO5gB,MAAAlB,KAAAmB,WAAA,SA+8DQmiB,GA/8DRC,GAAA,OAAAC,GAAAtiB,MAAAlB,KAAAmB,WAAA,SAAAqiB,KAAA,OAAAA,GAAA1jB,OAAAsB,EAAA,EAAAtB,CAAAuB,IAAAC,KA+8DP,SAAAmiB,EAA2BC,GAA3B,OAAAriB,IAAAS,KAAA,SAAA6hB,GAAA,cAAAA,EAAA3hB,KAAA2hB,EAAA1hB,MAAA,OACEtC,EAAW+jB,EADb,wBAAAC,EAAA1e,SAAAwe,OA/8DOviB,MAAAlB,KAAAmB,WAm9DP,OAAIR,EAEAijB,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,cACbud,EAAAC,EAAAzd,cAAA,OAAKU,MAAM,+DACT8c,EAAAC,EAAAzd,cAAA,OAAKU,MAAM,kBAAkB3C,MAAO,CAAE2f,WAAY,mBAChDF,EAAAC,EAAAzd,cAAA,KAAGU,MAAM,eAAe3C,MAAO,CAAE4f,WAAY,MAAOC,SAAU,QAAUC,KAAK,KAC3EL,EAAAC,EAAAzd,cAAA,OAAK8d,IAAI,WAAW5jB,MAAM,QAE5BsjB,EAAAC,EAAAzd,cAAA,UAAQU,MAAM,iBAAiByE,KAAK,SAAS4Y,iBAAe,WAAWC,iBAAe,kBAAkBC,gBAAc,iBAAiBC,gBAAc,QAAQC,aAAW,qBACtKX,EAAAC,EAAAzd,cAAA,QAAMU,MAAM,yBAEd8c,EAAAC,EAAAzd,cAAA,OAAKU,MAAM,2BAA2B4M,GAAG,kBACvCkQ,EAAAC,EAAAzd,cAAA,MAAIU,MAAM,uCAAuC3C,MAAO,CAAE6f,SAAU,SAClEJ,EAAAC,EAAAzd,cAAA,MAAIU,MAAM,YACR8c,EAAAC,EAAAzd,cAAA,KAAGU,MAAM,kBAAkB0d,eAAa,OAAOP,KAAK,KAApD,cAEFL,EAAAC,EAAAzd,cAAA,MAAIU,MAAM,YACR8c,EAAAC,EAAAzd,cAAA,KAAGU,MAAM,WAAWmd,KAAK,KAAzB,iBAEFL,EAAAC,EAAAzd,cAAA,MAAIU,MAAM,YACR8c,EAAAC,EAAAzd,cAAA,KAAGU,MAAM,YAAT,oBAOV8c,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,yCACbud,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,OACbud,EAAAC,EAAAzd,cAAA,QAAMC,UAAU,oBACdud,EAAAC,EAAAzd,cAAA,YACEwd,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,WACbud,EAAAC,EAAAzd,cAAA,MAAIC,UAAU,WAAd,wBAEFud,EAAAC,EAAAzd,cAAA,OAAK8d,IAAI,oBAAoB5jB,MAAM,UACnCsjB,EAAAC,EAAAzd,cAAA,MAAIC,UAAU,WAAd,yBAEAud,EAAAC,EAAAzd,cAACqe,EAAA,EAAD,CAAaC,KAAK,KAChBH,aAAW,cACXxS,KAAK,SACL5N,MAAO,CAAEwgB,UAAW,uBACpB7d,MAAM,aAEN8c,EAAAC,EAAAzd,cAACwe,EAAA,EAAD,CAAQnd,MAAM,IAAIod,QAAS,WAAcvB,GAAY,KAArD,KACAM,EAAAC,EAAAzd,cAACwe,EAAA,EAAD,CAAQnd,MAAM,IAAIod,QAAS,WAAcvB,GAAY,KAArD,KACAM,EAAAC,EAAAzd,cAACwe,EAAA,EAAD,CAAQnd,MAAM,IAAIod,QAAS,WAAcvB,GAAY,KAArD,KACAM,EAAAC,EAAAzd,cAACwe,EAAA,EAAD,CAAQnd,MAAM,IAAIod,QAAS,WAAcvB,GAAY,KAArD,KACAM,EAAAC,EAAAzd,cAACwe,EAAA,EAAD,CAAQnd,MAAM,IAAIod,QAAS,WAAcvB,GAAY,KAArD,MAGFM,EAAAC,EAAAzd,cAAA,MAAIC,UAAU,gBAAd,kCACAud,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,YAAYye,KAAK,QAAQpR,GAAG,cAAc6Q,aAAW,iBACpEX,EAAAC,EAAAzd,cAAA,OAAK8d,IAAK,iBAAkB5jB,MAAM,KAAKykB,IAAI,WAAWje,MAAM,kBAAkBT,UAAU,kBAAkBqN,GAAG,cAAcmR,QAAS,WAAclD,GAAU,MAC1JiC,EAAAC,EAAAzd,cAAA,OAAK8d,IAAK,iBAAkB5jB,MAAM,KAAKykB,IAAI,UAAUje,MAAM,kBAAkBT,UAAU,kBAAkBqN,GAAG,aAAamR,QAAS,WAAclD,GAAU,MAC1JiC,EAAAC,EAAAzd,cAAA,OAAK8d,IAAK,iBAAkB5jB,MAAM,KAAKykB,IAAI,MAAMje,MAAM,kBAAkBT,UAAU,kBAAkBqN,GAAG,SAASmR,QAAS,WAAclD,GAAU,MAClJiC,EAAAC,EAAAzd,cAAA,OAAK8d,IAAK,iBAAkB5jB,MAAM,KAAKykB,IAAI,MAAMje,MAAM,kBAAkBT,UAAU,kBAAkBqN,GAAG,SAASmR,QAAS,WAAclD,GAAU,MAClJiC,EAAAC,EAAAzd,cAAA,OAAK8d,IAAK,iBAAkB5jB,MAAM,KAAKykB,IAAI,QAAQje,MAAM,kBAAkBT,UAAU,kBAAkBqN,GAAG,WAAWmR,QAAS,WAAclD,GAAU,UAK9JiC,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,OACbud,EAAAC,EAAAzd,cAAA,QAAMC,UAAU,aACdud,EAAAC,EAAAzd,cAAA,QAAMjC,MAAO,CAAE2f,WAAY,mBACzBF,EAAAC,EAAAzd,cAAC4e,EAAA,EAAD,CAAMC,iBAAiB,SAAS5e,UAAU,sBACxCud,EAAAC,EAAAzd,cAAC8e,EAAA,EAAD,CAAKC,SAAS,QAAQC,MAAM,gBAC1BxB,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,aACbud,EAAAC,EAAAzd,cAAA,OAAKU,MAAM,sCAAsCge,KAAK,UAAUP,aAAW,8BACzEX,EAAAC,EAAAzd,cAAA,OAAKU,MAAM,2BAA2Bge,KAAK,QAAQP,aAAW,iBAC5DX,EAAAC,EAAAzd,cAAA,UAAQmF,KAAK,SAASpH,MAAO,CAAE6f,SAAU,OAASld,MAAM,oBAAoB4M,GAAG,mBAAmBmR,QAASlJ,IAA3G,kBACAiI,EAAAC,EAAAzd,cAAA,UAAQmF,KAAK,SAASpH,MAAO,CAAE6f,SAAU,OAASld,MAAM,oBAAoB4M,GAAG,cAAcmR,QAAS5J,IAAtG,aACA2I,EAAAC,EAAAzd,cAAA,UAAQsN,GAAG,YAAYvP,MAAO,CAAE6f,SAAU,OAAS3d,UAAU,0BAA0Bgf,SAAUle,GAC/Fyc,EAAAC,EAAAzd,cAAA,UAAQkf,UAAQ,EAACxe,MAAM,YAAvB,kBACA8c,EAAAC,EAAAzd,cAAA,mCAKRwd,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,OACbud,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,aACbud,EAAAC,EAAAzd,cAAA,OAAKsN,GAAG,yBAAyBrN,UAAU,4BAIjDud,EAAAC,EAAAzd,cAAC8e,EAAA,EAAD,CAAKC,SAAS,SAASC,MAAM,cAC3BxB,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,aACbud,EAAAC,EAAAzd,cAAA,OAAKU,MAAM,sCAAsCge,KAAK,UAAUP,aAAW,8BACzEX,EAAAC,EAAAzd,cAAA,OAAKU,MAAM,2BAA2B4M,GAAG,iBAAiBoR,KAAK,QAAQP,aAAW,kBAChFX,EAAAC,EAAAzd,cAAA,UAAQmF,KAAK,SAASpH,MAAO,CAAE6f,SAAU,OAASld,MAAM,oBAAoB4M,GAAG,UAAUmR,QAAS5K,IAAlG,QACA2J,EAAAC,EAAAzd,cAAA,UAAQmF,KAAK,SAASpH,MAAO,CAAE6f,SAAU,OAASld,MAAM,oBAAoB4M,GAAG,mBAAmBmR,QAAShL,IAA3G,kBACA+J,EAAAC,EAAAzd,cAAA,UAAQmF,KAAK,SAASpH,MAAO,CAAE6f,SAAU,OAASld,MAAM,oBAAoB4M,GAAG,qBAAqBmR,QAASrL,IAA7G,uBAINoK,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,aACbud,EAAAC,EAAAzd,cAAA,OAAKsN,GAAG,uBAAuBrN,UAAU,mCASvDud,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,iBACbud,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,SAASlC,MAAO,CAAE6f,SAAU,SACzCJ,EAAAC,EAAAzd,cAAA,OAAKjC,MAAO,CAAE6f,SAAU,OAAQuB,aAAc,OAAQ5R,MAAO,UAAWoQ,WAAY,QAApF,yBACAH,EAAAC,EAAAzd,cAAA,SAAOsN,GAAG,eAAerN,UAAU,4CAIvCud,EAAAC,EAAAzd,cAAA,OAAKU,MAAM,6BACT8c,EAAAC,EAAAzd,cAAA,OAAKU,MAAM,gBACT8c,EAAAC,EAAAzd,cAAA,OAAKU,MAAM,8BAA8B3C,MAAO,CAACqhB,WAAY,SAC3D5B,EAAAC,EAAAzd,cAAA,OAAKsN,GAAG,UAAUrN,UAAU,kBAC5Bud,EAAAC,EAAAzd,cAAA,OAAKsN,GAAG,aAAamR,QAAS7jB,EAAeqF,UAAU,qBAAqBkF,KAAK,SAASpH,MAAO,CAAE2f,WAAY,mBAA/G,0BAQNF,EAAAC,EAAAzd,cAAA,OAAKsN,GAAG,yBACNkQ,EAAAC,EAAAzd,cAAA,QAAMsN,GAAG,sBACPkQ,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,eACbud,EAAAC,EAAAzd,cAAA,OAAKsN,GAAG,0BACRkQ,EAAAC,EAAAzd,cAAA,SAAO2L,KAAK,YAAY2B,GAAG,YAAYnI,KAAK,SAAS9D,MAAM,UAC3Dmc,EAAAC,EAAAzd,cAAA,SAAO2L,KAAK,SAAS2B,GAAG,SAASnI,KAAK,SAAS9D,MAAM,eAU7Dmc,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,cACbud,EAAAC,EAAAzd,cAAA,OAAKU,MAAM,+DACT8c,EAAAC,EAAAzd,cAAA,OAAKU,MAAM,kBAAkB3C,MAAO,CAAE2f,WAAY,mBAChDF,EAAAC,EAAAzd,cAAA,KAAGU,MAAM,oBAAoB3C,MAAO,CAAE4f,WAAY,MAAOC,SAAU,QAAUC,KAAK,MAAQL,EAAAC,EAAAzd,cAAA,OAAK8d,IAAI,WAAW5jB,MAAM,OACpHsjB,EAAAC,EAAAzd,cAAA,UAAQU,MAAM,iBAAiByE,KAAK,SAAS4Y,iBAAe,WAAWC,iBAAe,kBAAkBC,gBAAc,iBAAiBC,gBAAc,QAAQC,aAAW,qBACtKX,EAAAC,EAAAzd,cAAA,QAAMU,MAAM,yBAEd8c,EAAAC,EAAAzd,cAAA,OAAKU,MAAM,2BAA2B4M,GAAG,kBACvCkQ,EAAAC,EAAAzd,cAAA,MAAIU,MAAM,uCAAuC3C,MAAO,CAAE6f,SAAU,SAClEJ,EAAAC,EAAAzd,cAAA,MAAIU,MAAM,YACR8c,EAAAC,EAAAzd,cAAA,KAAGU,MAAM,kBAAkB0d,eAAa,OAAOP,KAAK,KAApD,cAEFL,EAAAC,EAAAzd,cAAA,MAAIU,MAAM,YACR8c,EAAAC,EAAAzd,cAAA,KAAGU,MAAM,WAAWmd,KAAK,KAAzB,iBAEFL,EAAAC,EAAAzd,cAAA,MAAIU,MAAM,YACR8c,EAAAC,EAAAzd,cAAA,KAAGU,MAAM,YAAT,mBAKR8c,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,QACbud,EAAAC,EAAAzd,cAAA,OAAKU,MAAM,+BACT8c,EAAAC,EAAAzd,cAAA,OAAKsN,GAAG,UAAUrN,UAAU,kBAC5Bud,EAAAC,EAAAzd,cAAA,OAAKsN,GAAG,aAAamR,QAAS7jB,EAAeqF,UAAU,qBAAqBkF,KAAK,SAASpH,MAAO,CAAE2f,WAAY,mBAA/G,0BAONF,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,6BACbud,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,OACbud,EAAAC,EAAAzd,cAAA,QAAMC,UAAU,aACdud,EAAAC,EAAAzd,cAAA,YACEwd,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,WACbud,EAAAC,EAAAzd,cAAA,MAAIC,UAAU,WAAd,wBAEFud,EAAAC,EAAAzd,cAAA,OAAK8d,IAAI,oBAAoB5jB,MAAM,UACnCsjB,EAAAC,EAAAzd,cAAA,MAAIC,UAAU,WAAd,yBAEAud,EAAAC,EAAAzd,cAACqe,EAAA,EAAD,CAAaC,KAAK,KAChBH,aAAW,cACXxS,KAAK,SACL5N,MAAO,CAAEwgB,UAAW,uBACpB7d,MAAM,aAEN8c,EAAAC,EAAAzd,cAACwe,EAAA,EAAD,CAAQnd,MAAM,IAAIod,QAAS,WAAcvB,GAAY,KAArD,KACAM,EAAAC,EAAAzd,cAACwe,EAAA,EAAD,CAAQnd,MAAM,IAAIod,QAAS,WAAcvB,GAAY,KAArD,KACAM,EAAAC,EAAAzd,cAACwe,EAAA,EAAD,CAAQnd,MAAM,IAAIod,QAAS,WAAcvB,GAAY,KAArD,KACAM,EAAAC,EAAAzd,cAACwe,EAAA,EAAD,CAAQnd,MAAM,IAAIod,QAAS,WAAcvB,GAAY,KAArD,KACAM,EAAAC,EAAAzd,cAACwe,EAAA,EAAD,CAAQnd,MAAM,IAAIod,QAAS,WAAcvB,GAAY,KAArD,MAGFM,EAAAC,EAAAzd,cAAA,MAAIC,UAAU,gBAAd,kCACAud,EAAAC,EAAAzd,cAAA,OAAKU,MAAM,YAAYge,KAAK,QAAQpR,GAAG,cAAc6Q,aAAW,iBAC9DX,EAAAC,EAAAzd,cAAA,OAAK8d,IAAK,iBAAkB5jB,MAAM,KAAKykB,IAAI,WAAWje,MAAM,kBAAkBT,UAAU,kBAAkBqN,GAAG,cAAcmR,QAAS,WAAclD,GAAU,MAC5JiC,EAAAC,EAAAzd,cAAA,OAAK8d,IAAK,iBAAkB5jB,MAAM,KAAKykB,IAAI,UAAUje,MAAM,kBAAkBT,UAAU,kBAAkBqN,GAAG,aAAamR,QAAS,WAAclD,GAAU,MAC1JiC,EAAAC,EAAAzd,cAAA,OAAK8d,IAAK,iBAAkB5jB,MAAM,KAAKykB,IAAI,MAAMje,MAAM,kBAAkBT,UAAU,kBAAkBqN,GAAG,SAASmR,QAAS,WAAclD,GAAU,MAClJiC,EAAAC,EAAAzd,cAAA,OAAK8d,IAAK,iBAAkB5jB,MAAM,KAAKykB,IAAI,MAAMje,MAAM,kBAAkBT,UAAU,kBAAkBqN,GAAG,SAASmR,QAAS,WAAclD,GAAU,MAClJiC,EAAAC,EAAAzd,cAAA,OAAK8d,IAAK,iBAAkB5jB,MAAM,KAAKykB,IAAI,QAAQje,MAAM,kBAAkBT,UAAU,kBAAkBqN,GAAG,WAAWmR,QAAS,WAAclD,GAAU,OAGxJiC,EAAAC,EAAAzd,cAAA,WACAwd,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,YACbud,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,SAASlC,MAAO,CAAE6f,SAAU,SACzCJ,EAAAC,EAAAzd,cAAA,OAAKjC,MAAO,CAAE6f,SAAU,OAAQuB,aAAc,OAAQ5R,MAAO,UAAWoQ,WAAY,QAApF,mBACAH,EAAAC,EAAAzd,cAAA,SAAOsN,GAAG,eAAerN,UAAU,mCACjCud,EAAAC,EAAAzd,cAAA,SAAOC,UAAU,eACfud,EAAAC,EAAAzd,cAAA,UACEwd,EAAAC,EAAAzd,cAAA,MAAIG,MAAM,OAAV,QACAqd,EAAAC,EAAAzd,cAAA,MAAIG,MAAM,OAAV,SACAqd,EAAAC,EAAAzd,cAAA,MAAIG,MAAM,OAAV,iBAGJqd,EAAAC,EAAAzd,cAAA,aACEwd,EAAAC,EAAAzd,cAAA,UACEwd,EAAAC,EAAAzd,cAAA,yBACAwd,EAAAC,EAAAzd,cAAA,qBACAwd,EAAAC,EAAAzd,cAAA,mBAEFwd,EAAAC,EAAAzd,cAAA,UACEwd,EAAAC,EAAAzd,cAAA,0BACAwd,EAAAC,EAAAzd,cAAA,qBACAwd,EAAAC,EAAAzd,cAAA,mBAEFwd,EAAAC,EAAAzd,cAAA,UACEwd,EAAAC,EAAAzd,cAAA,2BACAwd,EAAAC,EAAAzd,cAAA,qBACAwd,EAAAC,EAAAzd,cAAA,mBAEFwd,EAAAC,EAAAzd,cAAA,UACEwd,EAAAC,EAAAzd,cAAA,yBACAwd,EAAAC,EAAAzd,cAAA,qBACAwd,EAAAC,EAAAzd,cAAA,sBAMRwd,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,SAASlC,MAAO,CAAE6f,SAAU,SACzCJ,EAAAC,EAAAzd,cAAA,OAAKjC,MAAO,CAAE6f,SAAU,OAAQuB,aAAc,OAAQ5R,MAAO,UAAWoQ,WAAY,QAApF,yBACAH,EAAAC,EAAAzd,cAAA,SAAOsN,GAAG,eAAerN,UAAU,8CAQ7Cud,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,OACbud,EAAAC,EAAAzd,cAAA,SAAOC,UAAU,aACfud,EAAAC,EAAAzd,cAAA,UACEwd,EAAAC,EAAAzd,cAAA,QAAMC,UAAU,aACdud,EAAAC,EAAAzd,cAAA,QAAMjC,MAAO,CAAE2f,WAAY,mBACzBF,EAAAC,EAAAzd,cAAC4e,EAAA,EAAD,CAAMC,iBAAiB,SAAS5e,UAAU,sBACxCud,EAAAC,EAAAzd,cAAC8e,EAAA,EAAD,CAAKC,SAAS,QAAQC,MAAM,gBAC1BxB,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,aACbud,EAAAC,EAAAzd,cAAA,OAAKU,MAAM,sCAAsCge,KAAK,UAAUP,aAAW,8BACzEX,EAAAC,EAAAzd,cAAA,OAAKU,MAAM,2BAA2Bge,KAAK,QAAQP,aAAW,iBAC5DX,EAAAC,EAAAzd,cAAA,UAAQmF,KAAK,SAASzE,MAAM,oBAAoB4M,GAAG,mBAAmBmR,QAASlJ,IAA/E,kBACAiI,EAAAC,EAAAzd,cAAA,UAAQmF,KAAK,SAASzE,MAAM,oBAAoB4M,GAAG,cAAcmR,QAAS5J,IAA1E,aACA2I,EAAAC,EAAAzd,cAAA,UAAQsN,GAAG,YAAYrN,UAAU,0BAA0Bgf,SAAUle,GACnEyc,EAAAC,EAAAzd,cAAA,UAAQkf,UAAQ,EAACxe,MAAM,YAAvB,kBACA8c,EAAAC,EAAAzd,cAAA,mCAKRwd,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,OACbud,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,aACbud,EAAAC,EAAAzd,cAAA,OAAKsN,GAAG,yBAAyBrN,UAAU,qBAIjDud,EAAAC,EAAAzd,cAAC8e,EAAA,EAAD,CAAKC,SAAS,SAASC,MAAM,cAC3BxB,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,aACbud,EAAAC,EAAAzd,cAAA,OAAKU,MAAM,sCAAsCge,KAAK,UAAUP,aAAW,8BACzEX,EAAAC,EAAAzd,cAAA,OAAKU,MAAM,2BAA2B4M,GAAG,iBAAiBoR,KAAK,QAAQP,aAAW,kBAChFX,EAAAC,EAAAzd,cAAA,UAAQmF,KAAK,SAASzE,MAAM,oBAAoB4M,GAAG,UAAUmR,QAAS5K,IAAtE,QACA2J,EAAAC,EAAAzd,cAAA,UAAQmF,KAAK,SAASzE,MAAM,oBAAoB4M,GAAG,mBAAmBmR,QAAShL,IAA/E,kBACA+J,EAAAC,EAAAzd,cAAA,UAAQmF,KAAK,SAASzE,MAAM,oBAAoB4M,GAAG,qBAAqBmR,QAASrL,IAAjF,uBAINoK,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,aACbud,EAAAC,EAAAzd,cAAA,OAAKsN,GAAG,uBAAuBrN,UAAU,qCAY3Dud,EAAAC,EAAAzd,cAAA,OAAKsN,GAAG,yBACNkQ,EAAAC,EAAAzd,cAAA,QAAMsN,GAAG,eACPkQ,EAAAC,EAAAzd,cAAA,OAAKC,UAAU,eACbud,EAAAC,EAAAzd,cAAA,OAAKsN,GAAG,iBAAiBrN,UAAU,WACnCud,EAAAC,EAAAzd,cAAA,SAAO2L,KAAK,YAAY2B,GAAG,YAAYnI,KAAK,SAAS9D,MAAM,UAC3Dmc,EAAAC,EAAAzd,cAAA,SAAO2L,KAAK,SAAS2B,GAAG,SAASnI,KAAK,SAAS9D,MAAM,cAK3Dmc,EAAAC,EAAAzd,cAAA,cACEwd,EAAAC,EAAAzd,cAAA,OAAKU,MAAM,aACT8c,EAAAC,EAAAzd,cAAA,OAAKU,MAAM,mBAEb8c,EAAAC,EAAAzd,cAAA,OAAKU,MAAM,iBACT8c,EAAAC,EAAAzd,cAAA,kFA5yEIqf,aC1DHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAtF,EAAA,GAAArO,KAAA2T,EAAAC,KAAA,WAAqB5T,KAAK,SAAA6T,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWriB,SAASC,eAAe,SACpDqiB,OACH3C,EAAAC,EAAAzd,cAACwd,EAAAC,EAAM2C,WAAP,KACE5C,EAAAC,EAAAzd,cAACqgB,EAAD,QAOJf","file":"static/js/main.21a01e6e.chunk.js","sourcesContent":["import './App.css';\nimport { Button, ButtonGroup, Modal } from 'react-bootstrap';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component, createElement } from 'react';\n\nimport 'sf-font';\n\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Web3 from 'web3';\n\nimport { useEffect } from \"react\"\nimport { accessListify } from 'ethers/lib/utils';\nimport { First } from 'react-bootstrap/esm/PageItem';\n\nimport NFTStakeABI from './RushNFTStaking.json';\nimport NitroBoostABI from './NitroBoost.json';\n\nimport { useWeb3React } from \"@web3-react/core\"  \n\nconst $ = window.$;\n\nvar tx_pending = false;\n\nvar CONFIG = null;\nvar ABI = null;\nvar account = null;\nvar nftcontract = null;\n\nvar defSymbol = null;\nvar totalGasLimit = null;\n\nvar walletBalanceAPI = null;\nvar scannerAPI = null;\nvar balanceAPI = null;\nvar resultAPICall = null;\nvar CONFIGWhitelist = null;\n\nvar nftName = null;\n\nvar stakingnftcontract = null;\nvar rewardcontract = null;\nvar nitrocontract = null;\nvar nftlevelcontract = null;\n\nvar stakingnft_address = null;\nvar nitroboost_address = null;\n\nvar acc = localStorage.getItem(\"account\");\nvar short_acct;\n\nvar web3 = null;\nvar contract = null;\n\nvar rewardInDetail = false;\nvar vaultSelected = null;\n\nvar amtNitro = 0;\n \n\n/* var refresh_screen;\n$(function () {\n  refresh_screen = function (_text) {\n    $(\".loader\").fadeOut(1000);\n    $(\".content\").fadeIn(1000);\n  }\n}); */\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      width: window.innerWidth,\n    };\n\n  }\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n  handleWindowSizeChange = () => {\n    this.setState({ width: window.innerWidth });\n  };\n\n  componentDidUpdate(){\n    /* const connectWalletOnPageLoad = async () => {\n      if (localStorage.getItem('isWalletConnected') === 'true') {\n        try {\n          await activate(injected)\n          localStorage.setItem('isWalletConnected', true)\n        } catch (ex) {\n          console.log(ex)\n        }\n      }\n    }\n    connectWalletOnPageLoad() */\n  }\n  \n \n  render() {\n    const { width } = this.state;\n    const isMobile = width <= 900;\n\n    let nftcost = '';\n  \n    const sleep = (milliseconds) => {\n      return new Promise(resolve => setTimeout(resolve, milliseconds))\n    }\n  \n    function delay() { \n      return new Promise(resolve => setTimeout(resolve, 300));\n    }\n\n    \n    async function connectwallet() {\n      try {\n        if (window.ethereum) {\n\n          const configResponse = await fetch(\"/config/config.json\", {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n          });\n          CONFIG = await configResponse.json();\n\n          web3 = new Web3(window.ethereum);\n\n\n          await window.ethereum.send('eth_requestAccounts');\n          var accounts = await web3.eth.getAccounts();\n          account = accounts[0];\n\n          const networkId = await window.ethereum.request({\n            method: \"net_version\",\n          });\n\n          if ((networkId == CONFIG.MAINNET.ID) || (networkId == CONFIG.TESTNET.ID)) {\n\n            const abiResponse = await fetch(\"/config/abi.json\", {\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\",\n              },\n            });\n            ABI = await abiResponse.json();\n\n            var abiWhitelist = null;\n\n            if (networkId == CONFIG.MAINNET.ID) {\n              defSymbol = CONFIG.MAINNET.SYMBOL;\n              totalGasLimit = CONFIG.MAINNET.GAS_LIMIT;\n              scannerAPI = CONFIG.MAINNET.API;\n              balanceAPI = CONFIG.MAINNET.BALANCE;\n              walletBalanceAPI = CONFIG.MAINNET.WALLET;\n              rewardcontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, CONFIG.MAINDAPP.TOKENREWARD);\n              stakingnftcontract = await ABIFetch(web3, ABI.STAKING.ABI, CONFIG.MAINDAPP.STAKING);\n              nitrocontract = await ABIFetch(web3, ABI.NITROBOOST.ABI, CONFIG.MAINDAPP.NITROBOOST);\n              nftlevelcontract = await ABIFetch(web3, ABI.RUSHLEVEL.ABI, CONFIG.MAINDAPP.LEVELING);\n\n              stakingnft_address = CONFIG.MAINDAPP.STAKING;\n              nitroboost_address = CONFIG.MAINDAPP.NITROBOOST.toUpperCase();\n\n              abiWhitelist = await fetch(\"/config/whitelisted.json\", {\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Accept: \"application/json\",\n                },\n              });\n              CONFIGWhitelist = await abiWhitelist.json();\n\n            }\n            else if (networkId == CONFIG.TESTNET.ID) {\n              //console.log(\"API CALL\");\n\n              defSymbol = CONFIG.TESTNET.SYMBOL;\n              totalGasLimit = CONFIG.TESTNET.GAS_LIMIT;\n              scannerAPI = CONFIG.TESTNET.API;\n              balanceAPI = CONFIG.TESTNET.BALANCE;\n              walletBalanceAPI = CONFIG.TESTNET.WALLET;\n              rewardcontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, CONFIG.TESTDAPP.TOKENREWARD);\n              stakingnftcontract = await ABIFetch(web3, ABI.STAKING.ABI, CONFIG.TESTDAPP.STAKING);\n              nitrocontract = await ABIFetch(web3, ABI.NITROBOOST.ABI, CONFIG.TESTDAPP.NITROBOOST);\n              nftlevelcontract = await ABIFetch(web3, ABI.RUSHLEVEL.ABI, CONFIG.TESTDAPP.LEVELING);\n\n\n              stakingnft_address = CONFIG.TESTDAPP.STAKING;\n              nitroboost_address = CONFIG.TESTDAPP.NITROBOOST;\n\n              abiWhitelist = await fetch(\"/config/testwhitelisted.json\", {\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Accept: \"application/json\",\n                },\n              });\n              CONFIGWhitelist = await abiWhitelist.json();\n\n            }\n\n            onGoingNotif(\"\");\n\n            var sWallBal = document.getElementById(\"wallBal\");\n            sWallBal.style.width = \"100px\";\n            sWallBal.innerHTML = await WalletBalance(account);\n\n            resultAPICall = await APICall(account, scannerAPI);\n            await listNFTFilter(resultAPICall);\n            //  await listNFT(account, 'unstaked-nft-container', resultAPICall, \"All\");\n            //document.getElementById(\"unstaked-nft-container\").innerHTML = \"\";\n\n            document.getElementById('unstaked-nft-container').innerHTML=\"\";\n            const DivContainer = document.getElementById('staked-nft-container');\n            DivContainer.innerHTML = \"\";\n            await stakeVaults('staked-nft-container');\n\n            await LoadVaultInfo();\n\n            var timer = setInterval(function () {\n              if (tx_pending==false){\n                RewardInquiry();\n              }\n            }, 5000);\n\n            localStorage.setItem('isWalletConnected', true)\n\n          }\n\n          else {\n            var z = window.confirm(\"Wrong network!\");\n          }\n\n        }\n      }\n      catch (ex) {\n        console.log('connectwallet - SeeError - ' + ex);\n      }\n    }\n\n    async function LoadVaultInfo(){\n      try{\n        var tbl = document.getElementById('tblvaultInfo');\n        tbl.innerHTML=\"\";\n\n        var thd = document.createElement('thead');\n        thd.className = \"thead-light\";\n        tbl.appendChild(thd);\n\n        var _tr = document.createElement('tr');\n        var _th1 = document.createElement('th');\n        _th1.scope = 'col';\n        _th1.innerHTML = 'Collection';\n        _tr.appendChild(_th1)\n\n        var _th2 = document.createElement('th');\n        _th2.scope = 'col';\n        _th2.innerHTML = 'Rewards Per Day';\n        _tr.appendChild(_th2)\n\n        thd.appendChild(_tr);\n\n        var counter_vault = 0;\n\n        var _tbody = document.createElement('tbody');\n        var _vault = await stakingnftcontract.methods.Vault(counter_vault).call();\n        while (_vault.active) { \n          var _rewardcontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, _vault.tokenReward);\n          var _rewardSymbol = await _rewardcontract.methods.symbol().call(); \n\n          var _tbody_tr = document.createElement('tr');\n\n          var _tbody_td1 = document.createElement('td');\n          _tbody_td1.innerHTML = _vault.vaultName;\n          _tbody_tr.appendChild(_tbody_td1);\n\n          var _tbody_td2 = document.createElement('td');\n          _tbody_td2.class='amount'; \n\n          \n          if (_vault.reqBooster == false){\n            //_tbody_tr.className=\"stakegoldeffect\";\n            _tbody_td1.className=\"textGlow\";  \n            _tbody_td2.className=\"textGlow\";  \n          }\n\n          var _span1 = document.createElement('span');\n          _span1.class = \"amount\";\n          _span1.innerHTML=Web3.utils.fromWei(_vault.rewardRate)\n\n          var _span2 = document.createElement('span');\n          _span2.class = \"currency\";\n          _span2.innerHTML = _rewardSymbol;\n\n          _tbody_td2.appendChild(_span1);\n          _tbody_td2.appendChild(_span2);\n\n          _tbody_tr.appendChild(_tbody_td2);\n\n          _tbody.appendChild(_tbody_tr);\n\n          counter_vault += 1;\n          var _vault = await stakingnftcontract.methods.Vault(counter_vault).call();\n\n        }    \n        tbl.appendChild(_tbody);\n      }\n      catch(ex){\n        console.log(ex);\n      }\n\n\n    }\n \n\n    async function RefreshCollection() {      \n      if (account==null){\n        return;\n      }\n      var nftCol = document.getElementById(\"nftFilter\").value;\n\n      //console.log(\"RefreshCollection >> nftCol: \", nftCol);\n\n      resultAPICall = await APICall(account, scannerAPI);\n      await listNFT(account, 'unstaked-nft-container', resultAPICall, nftCol);\n    }\n\n    async function APICall(account, API) {\n      var theURL = API + \"=\" + account;\n      var apiResponse = await fetch(theURL);\n      var jsonParsedContents = await apiResponse.json();\n\n      return jsonParsedContents;\n    }\n\n    async function APIBalanceCall(_account, _CA, API) {\n      var theURL = API.replace('@CONTRACTADDRESS', _CA).replace('@ACCOUNT', _account);\n      var apiResponse = await fetch(theURL);\n      var jsonParsedContents = await apiResponse.json();\n\n      return jsonParsedContents;\n    }\n\n    async function WalletBalance(_account) {\n      var theURL = walletBalanceAPI.replace('@ACCOUNT', _account);\n      var apiResponse = await fetch(theURL);\n      var jsonParsedContents = await apiResponse.json();\n\n      var earnedrwd = Web3.utils.fromWei(jsonParsedContents.result);\n      var rewards = Number(earnedrwd).toFixed(3);\n\n      return '  ' + rewards + ' ' + defSymbol;\n    }\n\n    async function claimVault(_vaultId) {\n      try {\n        await onGoingNotif(\"Pending...\");\n\n        console.log(\"_vaultId: \", _vaultId);\n        var _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n\n        var _tkIDs = [];\n\n        var nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _vault.nftAddress);        \n        var balanceOfOwner = await nftcontract.methods.balanceOf(stakingnft_address).call();\n        console.log('balanceOfOwner: ' + balanceOfOwner);\n\n        for (let j = 0; j < balanceOfOwner; j++) {\n          var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(stakingnft_address, j).call();\n          var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n          if (_nftStakeInfo.owner == account) {\n            console.log(_tkID);\n            _tkIDs.push(_tkID);\n          }\n        }\n\n        \n        /* resultAPICall = await APIBalanceCall(stakingnft_address, _vault.nftAddress, balanceAPI);\n        //console.log(resultAPICall);\n        for (let i = 0; i < resultAPICall.result; i++) {\n\n          var balanceOfOwner = await nftcontract.methods.balanceOf(stakingnft_address).call();\n          console.log('balanceOfOwner: ' + balanceOfOwner);\n\n          for (let j = 0; j < balanceOfOwner; j++) {\n            var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(stakingnft_address, j).call();\n            var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n            if (_nftStakeInfo.owner == account) {\n              console.log(_tkID);\n              _tkIDs.push(_tkID);\n            }\n          }\n        } */\n        console.log(_tkIDs);\n\n        await stakingnftcontract.methods.claim(_vaultId, _tkIDs).send({ from: account });\n        await refreshDAppView();\n\n      }\n      catch (ex) {\n        console.log('claimVault');\n        console.log(ex);\n      }\n      await onGoingNotif(\"\");\n\n    }\n\n    async function backToStake() {\n      await stakeVaults('staked-nft-container');\n    }\n\n    async function modifyVault(_vaultId, _vaultContract) {\n      try {\n        await UnstakeMenuControl(true, true, true);\n\n        var tab_container = \"staked-nft-container\";\n        document.getElementById('staked-nft-container').innerHTML = \"\";\n\n        var _account = stakingnft_address;\n        resultAPICall = await APICall(_account, scannerAPI);\n\n        rewardInDetail = true;\n\n        for (let i = 0; i < resultAPICall.result.length; i++) {\n          if (resultAPICall.result[i].type == \"ERC-721\") {\n            var _contractAddress = resultAPICall.result[i].contractAddress;\n            vaultSelected = _contractAddress;\n            var _vId = await stakingnftcontract.methods.getVaultId(_contractAddress).call();\n            if ((_vaultId == _vId) && (_vaultContract == _contractAddress)) {\n              nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _contractAddress);\n              //await ShowNFTCard(tab_container, nftcontract, _contractAddress, _account, true);\n              await renderNFT(tab_container, nftcontract, _contractAddress, _account, true);\n              \n              break;\n            }\n          }\n        }\n      }\n      catch (ex) {\n        console.log(ex);\n      }\n    }\n\n\n    async function onGoingNotif(msg) {\n      var btnConnect = document.getElementById('btnConnect');\n      if (msg == \"\") {\n        try {\n          hideCover();\n          tx_pending=false;\n        }\n        catch (ex) {\n        }\n\n        short_acct = account.substring(0, 6) + \"....\" + account.substring(account.length - 4, account.length);\n        var img = document.createElement('img');\n        img.className = \"ml-3\";\n        img.setAttribute(\"src\", 'chef.svg');\n        //btnConnect.className = \"ml-3\";\n        btnConnect.innerHTML = short_acct;\n        btnConnect.appendChild(img);\n      }\n      else {\n        showCover();\n        btnConnect.innerHTML = \"\";\n        btnConnect.innerHTML = msg;\n        /* showLoading(); */\n      }\n    }\n\n    async function unstakeVault(_vaultId) {\n      try {\n        await onGoingNotif(\"Pending...\");\n\n        var _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n\n        var _tkIDs = [];\n        resultAPICall = await APIBalanceCall(stakingnft_address, _vault.nftAddress, balanceAPI);\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _vault.nftAddress);\n\n        for (let i = 0; i < resultAPICall.result; i++) {\n          var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(stakingnft_address, i).call();\n          var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n          if (_nftStakeInfo.owner == account) {\n            _tkIDs.push(_tkID);\n          }\n        }\n        await stakingnftcontract.methods.unstake(_vaultId, _tkIDs).send({ from: account });\n        await refreshDAppView();\n      }\n      catch (ex) {\n        console.log('unstakeVault');\n        console.log(ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function GetNFTLevel(_vaultId, _tkID){   \n      try{\n        var nftLevel = await nftlevelcontract.methods.getNFTLevel(_vaultId, _tkID).call(); \n        if (nftLevel != \"undefined\") {\n          return `Lv ${nftLevel}`;\n        }         \n      } \n      catch(ex){\n        return \"\";\n      }     \n    }\n\n    async function RewardInquiry() {\n      var _vaultId;\n      try {\n        var btnConnect = document.getElementById('btnConnect');\n        if (!btnConnect.innerHTML.includes(short_acct)) {\n          return;\n        }\n\n        var sWallBal = document.getElementById(\"wallBal\");\n        sWallBal.innerHTML = await WalletBalance(account);\n\n        //var _stakeCount = 0;\n        var _account = stakingnft_address;\n        resultAPICall = await APICall(_account, scannerAPI);\n\n        var balanceOfVault = 0;\n        var _symbol = await rewardcontract.methods.symbol().call();\n        if (rewardInDetail == false) {\n\n          for (let i = 0; i < resultAPICall.result.length; i++) {\n            if (resultAPICall.result[i].type == \"ERC-721\" && nitroboost_address.toUpperCase() != resultAPICall.result[i].contractAddress.toUpperCase()) {\n              var contractAdress = resultAPICall.result[i].contractAddress;\n              _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n\n              var divPend = document.getElementById(\"Pending\" + resultAPICall.result[i].contractAddress);\n\n              var _pendingRewards = 0;\n\n              if (divPend != null) {\n                nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, resultAPICall.result[i].contractAddress);\n                balanceOfVault = await nftcontract.methods.balanceOf(_account).call();\n\n                var result = await stakingnftcontract.methods.pendingRewardByAccount(_vaultId, account).call();\n                const { 0: _pend, 1: _stakeCount} = result;\n\n                var earned = String(_pend).split(\",\")[0];\n                var earnedrwd = Web3.utils.fromWei(earned);\n                _pendingRewards = Number(earnedrwd).toFixed(2);\n                /* _stakeCount = 0;\n\n                for (var j = 0; j < balanceOfVault; j++) {\n                  var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, j).call();\n                  var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n\n                  if (_nftStakeInfo.owner == account) {\n                    _stakeCount++;\n                  }\n                } */\n\n                divPend.innerHTML = `Total: ${_stakeCount} | <h6 class='pendingRewards'> Earn: ${_pendingRewards} ${_symbol} </h6>`;\n              }\n            }\n          }\n        }\n        else if (rewardInDetail == true) {\n          try {\n            nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, vaultSelected);\n            _vaultId = await stakingnftcontract.methods.getVaultId(vaultSelected).call();\n            balanceOfVault = await nftcontract.methods.balanceOf(_account).call();\n            _pendingRewards = 0;\n            var _stakeCount = 0; \n\n            for (var j = 0; j < balanceOfVault; j++) {\n              var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, j).call();\n              var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n              \n              if (_nftStakeInfo.owner == account) {\n                _stakeCount++;\n\n                var _pend = await stakingnftcontract.methods.pendingReward(_vaultId, _tkID).call();\n                var earned = String(_pend).split(\",\")[0];\n                var earnedrwd = Web3.utils.fromWei(earned);\n                var rewards = Number(earnedrwd).toFixed(4);\n                _pendingRewards = Number(rewards).toFixed(4);\n  \n                const objNFTPend = document.getElementById(\"att\" + _vaultId + _tkID); \n                objNFTPend.innerHTML = \"\";\n                objNFTPend.innerHTML = \"Earn: \" + _pendingRewards + \" \" + _symbol;\n\n\n                var nftLevel = await GetNFTLevel(_vaultId, _tkID); \n                const objNFTLvl = document.getElementById(\"lvl\" + _vaultId + _tkID);\n                objNFTLvl.innerHTML = \"\";\n                objNFTLvl.innerHTML = nftLevel;\n  \n                var _nitroStakeRemaining;\n                try {\n                  const result = await stakingnftcontract.methods.nitroStakeRemaining(_vaultId, _tkID).call(); \n\n                  const { 0: nitroID, 1: limit, 2: remain } = result;\n                  _nitroStakeRemaining = remain;\n                  if (_nitroStakeRemaining > 0) { \n                    var _glowNum = await nitrocontract.methods.getRareType(nitroID).call();\n\n                    var inSec = (_nitroStakeRemaining / 86400) * 24 * 60 * 60;\n \n                    var seconds = Number(inSec);\n                    var d = Math.floor(seconds / (3600 * 24));\n                    var h = Math.floor(seconds % (3600 * 24) / 3600);\n                    var m = Math.floor(seconds % 3600 / 60);\n                    var s = Math.floor(seconds % 60);\n\n                    var dDisplay = d > 0 ? d + (d == 1 ? \" day, \" : \" days, \") : \"\";\n                    var hDisplay = h > 0 ? h + (h == 1 ? \":\" : \":\" ) : \"\";\n                    var mDisplay = m > 0 ? m + (m == 1 ? \":\" : \":\") : \"\";\n                    var sDisplay = s > 0 ? s + (s == 1 ? \"\" : \"\") : \"\";\n                    var remainingBurn = dDisplay + hDisplay + mDisplay + sDisplay;\n  \n                    const _nitroEquipped = await stakingnftcontract.methods.getEquippedNitro(_vaultId, _tkID).call();\n                    const _multipower = await stakingnftcontract.methods.getNitroPower(_vaultId, _nitroEquipped).call();\n                    var _powerFloat = parseFloat(_multipower + '.00') / 100;\n\n                    var nftLvlBonus = await nftlevelcontract.methods.getLevelBonus(_vaultId, _tkID).call();\n                    _powerFloat = _powerFloat * parseFloat(nftLvlBonus + '.00');\n\n                    document.getElementById(\"att2\" + _vaultId + _tkID).innerHTML =  \"<span class='font-awesome-icons rocket'></span> \" + remainingBurn + ' left'\n                       + '</br> x' + _powerFloat.toFixed(2);\n                    document.getElementById(\"nft\" + _vaultId + \"|\" + _tkID).className = \"nftCard Equipped\" + _glowNum; \n \n                  }\n                }\n                catch (nitro_ex) {\n                  console.log(\"no nitro equip\", _vaultId, _tkID, _nitroStakeRemaining, nitro_ex);\n                }\n\n              }\n\n\n            }\n          }\n          catch (ex1) {\n            console.log(\"Error in RewardInquiry - Detailed: \", ex1);\n          }\n        }\n      }\n      catch (ex) {\n        console.log(\"Error on RewardInquiry: \", _vaultId);\n        console.log(ex); \n      }\n      return _stakeCount;\n    } \n\n    async function UnstakeMenuControl(btnBack, btnClaim, btnUnstake) {\n      var _btnBack = document.getElementById(\"btnBack\");\n      var _btnClaim = document.getElementById(\"btnClaimSelected\");\n      var _btnUnstake = document.getElementById(\"btnUnstakeSelected\");\n\n      if ((btnBack == false) && (btnClaim == false) && (btnUnstake == false)) {\n        document.getElementById(\"btnUnstakeMenu\").style.display = \"none\";\n      }\n      else {\n        document.getElementById(\"btnUnstakeMenu\").style.display = \"\";\n      }\n\n      if (btnBack == false) {\n        _btnBack.setAttribute(\"disabled\", \"disabled\");\n        _btnBack.classList.add(\"disabled\");\n      }\n      else {\n        _btnBack.removeAttribute('disabled');\n        _btnBack.classList.remove(\"disabled\");\n      }\n\n      if (btnClaim == false) {\n        _btnClaim.setAttribute(\"disabled\", \"disabled\");\n        _btnClaim.classList.add(\"disabled\");\n      }\n      else {\n        _btnClaim.removeAttribute('disabled');\n        _btnClaim.classList.remove(\"disabled\");\n      }\n\n      if (btnUnstake == false) {\n        _btnUnstake.setAttribute(\"disabled\", \"disabled\");\n        _btnUnstake.classList.add(\"disabled\");\n      }\n      else {\n        _btnUnstake.removeAttribute('disabled');\n        _btnUnstake.classList.remove(\"disabled\");\n      }\n    }\n\n    async function stakeVaults(tab_container) {      \n      if (account==null){\n        return;\n      }\n      await delay();\n\n      var _account = stakingnft_address;\n      resultAPICall = await APICall(_account, scannerAPI);\n\n      await UnstakeMenuControl(false, false, false);\n\n      const DivContainer = document.getElementById(tab_container);\n      DivContainer.innerHTML = \"\";\n\n      console.log(width);\n      if (width<830){\n        DivContainer.className = \"nft_card_view1\";\n      }\n      else if (width>=830 && width<1000){\n        DivContainer.className = \"nft_card_view2\";\n      }\n      else if (width>=1000 && width<1300){\n        DivContainer.className = \"nft_card_view3\";\n      }\n      else if(width>=1300){\n        DivContainer.className = \"nft_card_view4\";\n      }\n\n      rewardInDetail = false;\n      var usrVaultCount = 0;\n      var usrCurrVault = null;\n      var _vaultContract = null;\n\n      //Check Number of Vault Stake of user\n      for (let i = 0; i < resultAPICall.result.length; i++) {\n        if (resultAPICall.result[i].type == \"ERC-721\" && nitroboost_address.toUpperCase() != resultAPICall.result[i].contractAddress.toUpperCase()) {\n          var contractAdress = resultAPICall.result[i].contractAddress;\n          var _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n\n          nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, contractAdress);\n          var balanceOfVault = await nftcontract.methods.balanceOf(_account).call();\n\n          for (var j = 0; j < balanceOfVault; j++) {\n            var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, j).call();\n            var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n            if (_nftStakeInfo.owner == account) {\n              usrVaultCount++;\n              usrCurrVault = _vaultId;\n              _vaultContract = contractAdress;\n              break;\n            }\n          }\n        }\n      }\n\n      if (usrVaultCount == 1) {\n        rewardInDetail = true;\n        await modifyVault(usrCurrVault, _vaultContract);\n      }\n      else {\n\n        for (let i = 0; i < resultAPICall.result.length; i++) {\n          if (resultAPICall.result[i].type == \"ERC-721\" && nitroboost_address.toUpperCase() != resultAPICall.result[i].contractAddress.toUpperCase()) {\n\n            var contractAdress = resultAPICall.result[i].contractAddress;\n            var _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n            var _vaultInfo = await stakingnftcontract.methods.Vault(_vaultId).call();\n\n            if (_vaultInfo.active) {\n              nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, contractAdress);\n              var nftName = await nftcontract.methods.name().call();\n              var balanceOfVault = await nftcontract.methods.balanceOf(_account).call();\n              var symbol = await rewardcontract.methods.symbol().call();\n\n              var _tkID = 0;\n              var _stakeCount = 0;\n              for (var j = 0; j < balanceOfVault; j++) {\n                _tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, j).call();\n\n                var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n\n                if (_nftStakeInfo.owner == account) {\n                  _stakeCount++;\n\n                  if (_stakeCount > 0) {\n                    let tokenMetadataURI = await nftcontract.methods.tokenURI(_tkID).call();\n                    if (tokenMetadataURI.startsWith(\"ipfs://\")) {\n                      tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI.split(\"ipfs://\")[1]}`;\n                    }\n                    else if (tokenMetadataURI.startsWith(\"https://gateway.pinata.cloud/ipfs/\")) {\n                      tokenMetadataURI = tokenMetadataURI.replace(`https://gateway.pinata.cloud/ipfs/`, ``);\n                      tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI}${1}`;\n                    }\n                    var tokenMetadata = await fetch(tokenMetadataURI).then((response) => response.json());\n\n                    (async function () {\n                      const cardVault = document.createElement('div');\n                      cardVault.className = \"vault_container\";\n                      cardVault.id = contractAdress;\n                      cardVault.value = _vaultId;\n\n                      const cardVaultCard = document.createElement('div');\n                      cardVaultCard.className = \"vault_card\";\n                      if (isMobile) {\n                        cardVaultCard.className = \"vault_card-mobile\";\n                      }\n\n                      const cardVaultFront = document.createElement('div');\n                      cardVaultFront.className = \"vault_front parent\";\n                      if (isMobile){\n                        cardVaultFront.className = \"vault_front-mobile parent\";\n                      }\n\n                      var imgNFT\n                      if (tokenMetadata[\"image\"].includes(\"mp4\")) {\n                        imgNFT = document.createElement('video');\n\n                        const vid_source = document.createElement(\"source\");\n\n                        if (tokenMetadata[\"image\"].startsWith(\"ipfs://\")) {\n                          vid_source.setAttribute(\"src\", `https://ipfs.io/ipfs/${tokenMetadata[\"image\"].split(\"ipfs://\")[1]}`);\n                        }\n                        else {\n                          vid_source.setAttribute(\"src\", tokenMetadata[\"image\"]);\n                        }\n                        vid_source.setAttribute(\"type\", \"video/mp4\");\n                        imgNFT.appendChild(vid_source);\n                      }\n                      else {\n                        imgNFT = document.createElement('img');\n                        imgNFT.setAttribute(\"src\", '.\\loading.gif');\n\n                        var img_src = tokenMetadata[\"image\"];\n                        imgNFT.setAttribute(\"src\", img_src);\n                      }\n                      imgNFT.setAttribute(\"alt\", contractAdress);\n\n                      const cardVaultDetails = document.createElement('div');\n                      cardVaultDetails.className = \"vault_details\";\n\n                      const cardH4 = document.createElement('h5');\n                      cardH4.style.color = \"white\";\n                      cardH4.className = \"VaultName\";\n                      cardH4.innerHTML = (nftName.length > 15 ? nftName.substring(0, 10) + \"...\" : nftName) + \" Vault\";\n\n                      const cardSpan = document.createElement('span');\n                      cardSpan.className = \"spanX\"\n                      cardSpan.id = \"Pending\" + contractAdress;\n                      cardSpan.style.color = \"white\";\n                      cardSpan.innerHTML = \"\";\n\n                      cardVaultDetails.appendChild(cardH4);\n                      cardVaultDetails.appendChild(cardSpan);\n\n                      cardVaultFront.appendChild(imgNFT);\n                      cardVaultFront.appendChild(cardVaultDetails);\n\n                      const cardVaultBack = document.createElement('div');\n                      cardVaultBack.className = \"vault_back\";\n\n                      var _tbl = document.createElement('table');\n                      var _tr = document.createElement('tr');\n                      _tbl.appendChild(_tr);\n\n                      var _attrdiv = document.createElement('div');\n                      var nft_dtl = document.createElement('h6');\n                      var _nftName = await nftcontract.methods.name().call();\n                      var _symbl = await nftcontract.methods.symbol().call();\n                      var _supply = await nftcontract.methods.totalSupply().call();\n                      nft_dtl.innerHTML = \"Name: \" + _nftName + '</br>Symbol: ' + _symbl + '</br>Total Supply: ' + _supply;\n                      _attrdiv.appendChild(nft_dtl);\n                      _tbl.appendChild(_attrdiv);   \n\n                      var _tr2 = document.createElement('tr');\n                      _tr2.className=\"vault_back_att\";\n\n                      const cardButtonClaim = document.createElement('a');\n                      cardButtonClaim.style.color = \"white\";\n                      cardButtonClaim.innerHTML = \"Claim All \";\n                      cardButtonClaim.className = \"back_attr\";\n                      cardButtonClaim.onclick = function () { claimVault(cardVault.value); }\n\n                      const cardButtonUnstake = document.createElement('a');\n                      cardButtonUnstake.style.color = \"white\";\n                      cardButtonUnstake.innerHTML = \"Unstake All \";\n                      cardButtonUnstake.className = \"back_attr\";\n                      cardButtonUnstake.onclick = function () { unstakeVault(cardVault.value); }\n\n                      const cardButtonModify = document.createElement('a');\n                      cardButtonModify.style.color = \"white\";\n                      cardButtonModify.innerHTML = \"Modify\";\n                      cardButtonModify.className = \"back_attr\";\n                      cardButtonModify.onclick = function () { modifyVault(cardVault.value, cardVault.id); }\n\n                      _tr2.appendChild(cardButtonClaim);\n                      _tr2.appendChild(cardButtonUnstake);\n                      _tr2.appendChild(cardButtonModify);\n\n                      _tbl.appendChild(_tr2);  \n                      cardVaultBack.appendChild(_tbl);  \n\n\n                      /* cardVaultBack.appendChild(cardButtonClaim);\n                      cardVaultBack.appendChild(cardButtonUnstake);\n                      cardVaultBack.appendChild(cardButtonModify); */\n\n                      cardVaultCard.appendChild(cardVaultFront);\n                      cardVaultCard.appendChild(cardVaultBack);\n\n                      cardVault.appendChild(cardVaultCard);\n\n                      DivContainer.appendChild(cardVault);\n                    })();\n                  }\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n\n    }\n\n    async function listNFT(_account, tab_container, jsonParsedContents, filterList) {\n      try {\n        var userNFTHold = 0;\n        var btnStakeAll = document.getElementById(\"btnStakeAll\");\n        var btnStakeSelected = document.getElementById(\"btnStakeSelected\");\n\n        document.getElementById(tab_container).innerHTML = \"\";\n\n        //console.log(\"filterList: \", filterList);\n\n        if (filterList == \"All\" || filterList == \"All Owned NFT\") {\n          btnStakeAll.setAttribute('disabled', 'disabled');\n          btnStakeSelected.setAttribute('disabled', 'disabled');\n\n          //Populate List NFT \n          if (jsonParsedContents != null) {\n            for (var key in CONFIGWhitelist.NFT) {\n              for (let i = 0; i < jsonParsedContents.result.length; i++) {\n                if (jsonParsedContents.result[i].type == \"ERC-721\") {\n                  if (CONFIGWhitelist.NFT[key].ADDRESS == jsonParsedContents.result[i].contractAddress) {\n                    nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, jsonParsedContents.result[i].contractAddress);\n                    //serNFTHold = userNFTHold + (await ShowNFTCard(tab_container, nftcontract, jsonParsedContents.result[i].contractAddress, _account));  //myHoldNFT\n                    userNFTHold = userNFTHold + (await renderNFT(tab_container, nftcontract, jsonParsedContents.result[i].contractAddress, _account));  //myHoldNFT\n                    break;\n                  }\n                }\n              }\n            }\n\n            //All other ERC-721\n            var ctr;\n            for (let i = 0; i < jsonParsedContents.result.length; i++) {\n              if (jsonParsedContents.result[i].type == \"ERC-721\" && nitroboost_address.toUpperCase() != jsonParsedContents.result[i].contractAddress.toUpperCase()) {\n                ctr = 0;\n                for (var key in CONFIGWhitelist.NFT) {\n                  if (CONFIGWhitelist.NFT[key].ADDRESS != jsonParsedContents.result[i].contractAddress) {\n                    ctr++;\n                  }\n                }\n                if (ctr >= CONFIGWhitelist.NFT.length) {\n                  nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, jsonParsedContents.result[i].contractAddress);\n                  //userNFTHold = userNFTHold + (await ShowNFTCard(tab_container, nftcontract, jsonParsedContents.result[i].contractAddress, _account));  //myHoldNFT\n                  userNFTHold = userNFTHold + (await renderNFT(tab_container, nftcontract, jsonParsedContents.result[i].contractAddress, _account));  //myHoldNFT\n                  \n                }\n              }\n            }\n          }\n        }\n        else {\n          nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, filterList);\n\n          //console.log(await nftcontract.methods.name().call());\n\n          //userNFTHold = userNFTHold + (await ShowNFTCard(tab_container, nftcontract, filterList, _account));  //myHoldNFT\n          userNFTHold = userNFTHold + (await renderNFT(tab_container, nftcontract, filterList, _account));  //myHoldNFT\n          btnStakeAll.removeAttribute('disabled');\n          btnStakeSelected.removeAttribute('disabled');\n        }\n\n        if (userNFTHold == 0) {\n          ShowNFTError(\"NO NFT SCANNED.\");\n        }\n      }\n\n      catch (ex) {\n        console.log('listNFT - SeeError - ' + ex);\n        ShowNFTError(ex);\n      }\n    }\n\n    async function ABIFetch(web3, _abi, _address) {\n      var _contract;\n      var ABIResponse;\n\n      ABIResponse = await fetch(_abi, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      });\n      const ABIJSON = await ABIResponse.json();\n      _contract = new web3.eth.Contract(ABIJSON, _address);\n      return _contract;\n    }\n\n    async function listNFTFilter(jsonParsedContents) {\n      var lstNFT = document.getElementById(\"nftFilter\");\n      lstNFT.innerHTML = \"\";\n\n      for (let i = 0; i < jsonParsedContents.result.length; i++) {\n        if (i == 0) {\n          var z_1 = document.createElement(\"option\");\n          z_1.setAttribute(\"value\", \"All\");\n          var t_1 = document.createTextNode(\"All Owned NFT\");\n\n          z_1.appendChild(t_1);\n          lstNFT.appendChild(z_1);\n        }\n\n        if (jsonParsedContents.result[i].type == \"ERC-721\" && jsonParsedContents.result[i].balance > 0 && nitroboost_address.toUpperCase() != jsonParsedContents.result[i].contractAddress.toUpperCase()) {\n          var z = document.createElement(\"option\");\n          z.setAttribute(\"value\", jsonParsedContents.result[i].contractAddress);\n\n          var t = document.createTextNode(jsonParsedContents.result[i].name + \": \" + jsonParsedContents.result[i].balance);\n          z.appendChild(t);\n\n          lstNFT.appendChild(z);\n        }\n\n      }\n    }\n\n    async function fetchNFTImage(nftcontract, _account, tkID, _caller) {\n      var tokenMetadata = null;\n      try {\n        let tokenMetadataURI = await nftcontract.methods.tokenURI(tkID).call();\n        if (tokenMetadataURI.startsWith(\"ipfs://\")) {\n          tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI.split(\"ipfs://\")[1]}`;\n        }\n        else if (tokenMetadataURI.startsWith(\"https://gateway.pinata.cloud/ipfs/\")) {\n          tokenMetadataURI = tokenMetadataURI.replace(`https://gateway.pinata.cloud/ipfs/`, ``);\n          tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI}${tkID}`;\n        }\n        tokenMetadata = await fetch(tokenMetadataURI).then((response) => response.json());\n      }\n      catch (ex) {\n        console.log('Caller - ' + _caller);\n        console.log(ex);\n      }\n\n      return tokenMetadata;\n\n    }\n\n    async function renderNFT(tab_container, nftcontract, contractAdress, _account, isStaked){\n      var nftName = await nftcontract.methods.name().call();\n      var balanceOfOwner = await nftcontract.methods.balanceOf(_account).call();  \n\n      var nftContainer = document.getElementById(tab_container); \n      var nftCard;\n        var nftTable;\n      var nftMedia;\n        var nftTD;\n          var nftLvl;\n          var nftChk;\n          var nftLbl;\n          var nftImg;\n      var nftAtt;\n        var nftAttTD;\n          var nftTxt1;\n          var nftTxt2;\n          var nftBtn;\n          var nftTxt3;\n      try{\n        console.log(width);\n\n        if (width>=400 && width<850){\n          nftContainer.className = \"nft_card_view2\";\n        }\n        else if (width>=850 && width<1000){\n          nftContainer.className = \"nft_card_view3\";\n        }\n        else if (width>=1000 && width<1300){\n          nftContainer.className = \"nft_card_view4\";\n        }\n        else if(width>=1300){\n          nftContainer.className = \"nft_card_view5\";\n        }\n\n        onGoingNotif(\"Loading...\");\n        for (let i = 0; i < balanceOfOwner; i++){\n          (async function (){\n            const tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, i).call();\n            const tokenMetadata = await fetchNFTImage(nftcontract, _account, tkID, 'renderNFT');\n            const _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n            \n            var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, tkID).call();\n            if (isStaked) {\n              if (_nftStakeInfo.owner != account) {\n                return;\n              }\n            }\n\n            nftCard = document.createElement(\"div\");\n            nftCard.id = \"nft\" + _vaultId + \"|\" + tkID;\n            nftCard.className = \"nftCard\";\n\n            nftTable = document.createElement(\"TABLE\");\n            nftTable.setAttribute(\"id\", \"tbl\" + _vaultId + tkID);\n            nftCard.appendChild(nftTable);\n\n            nftMedia = document.createElement(\"TR\");\n            nftMedia.className = \"nftMedia\";\n            nftTable.appendChild(nftMedia);\n\n            nftTD = document.createElement(\"TD\");\n            nftTD.className = \"nftTD\";\n            nftMedia.appendChild(nftTD);\n\n            nftLvl = document.createElement('h6');\n            nftLvl.id = \"lvl\" + _vaultId + tkID;\n            nftLvl.className = \"nftLvl\";\n            nftLvl.innerHTML = \"\"\n            nftTD.appendChild(nftLvl);\n            /* nftMedia.appendChild(nftLvl); */\n\n            nftChk = document.createElement(\"INPUT\");\n            nftChk.setAttribute(\"type\", \"checkbox\");\n            nftChk.id = contractAdress + \"_\" + tkID;\n            nftChk.className = \"nftChk\";\n            nftTD.appendChild(nftChk);\n            /* nftMedia.appendChild(nftChk); */\n \n            nftLbl = document.createElement(\"LABEL\");\n            nftLbl.className = \"parent\";\n            nftLbl.htmlFor = nftChk.id;\n            nftTD.appendChild(nftLbl);\n            /* nftMedia.appendChild(nftLbl); */\n\n            if (tokenMetadata[\"image\"].includes(\"mp4\")) {\n              nftImg = document.createElement('video');\n              const vid_source = document.createElement(\"source\");\n              if (tokenMetadata[\"image\"].startsWith(\"ipfs://\")) {\n                vid_source.setAttribute(\"src\", `https://ipfs.io/ipfs/${tokenMetadata[\"image\"].split(\"ipfs://\")[1]}`);\n              }\n              else {\n                vid_source.setAttribute(\"src\", tokenMetadata[\"image\"]);\n              }\n              vid_source.setAttribute(\"type\", \"video/mp4\");\n              nftImg.appendChild(vid_source);\n            }\n            else {\n              nftImg = document.createElement('img');\n              var _imgFix = tokenMetadata[\"image\"];\n              if (_imgFix.startsWith(\"ipfs://\")) {\n                _imgFix = `https://ipfs.io/ipfs/${_imgFix.replace(\"ipfs://\", '')}`\n              }\n              nftImg.setAttribute(\"src\", _imgFix);\n            }\n            nftImg.setAttribute(\"alt\", \"Error loading image\");\n            nftImg.className=\"nftImg\";\n            nftLbl.appendChild(nftImg);\n             \n            nftAtt = document.createElement(\"TR\");\n            nftAtt.className = \"nftAtt\";\n            nftTable.appendChild(nftAtt);\n\n            nftAttTD = document.createElement(\"TD\");\n            nftAttTD.className = \"nftAttTD\";\n            nftAtt.appendChild(nftAttTD);\n\n \n            nftTxt1 = document.createElement('h6');\n            nftTxt1.id = \"stk\" + _vaultId + tkID;\n            nftTxt1.className = \"nftTxt1\";\n            nftTxt1.innerHTML = (nftName.length > 20 ? nftName.substring(0, 20) : nftName) + ` #` + (tkID.length > 5 ? tkID.substring(1, 5) : tkID);\n            nftAttTD.appendChild(nftTxt1);\n            /* nftAtt.appendChild(nftTxt1); */\n\n            nftTxt2 = document.createElement('h6');\n            nftTxt2.id = \"att\" + _vaultId + tkID;\n            nftTxt2.className = \"nftTxt2\";\n            nftTxt2.innerHTML = \"\";\n            nftAttTD.appendChild(nftTxt2);\n            /* nftAtt.appendChild(nftTxt2); */\n\n            nftBtn = document.createElement('button');\n            nftBtn.type = \"button\";\n            nftBtn.className = \"nftBtn\";\n            nftBtn.style = \"{{ fontFamily: 'SF Pro Display' }}\";\n            nftBtn.innerHTML = \"+\";\n\n            if (isStaked){              \n              nftBtn.onclick = function () {\n                showPrompt(_vaultId + \"|\" + tkID, function (value) {\n                });\n              };\n            }\n            else{              \n              nftBtn.onclick = function () {\n                showPromptTransfer(_vaultId + \"|\" + tkID + \"|\" + contractAdress, function (value) {\n                });\n              };\n            }\n\n            nftAttTD.appendChild(nftBtn);\n            /* nftAtt.appendChild(nftBtn); */\n\n           /*  var _i = document.createElement(\"i\");\n            _i.className=\"fa-regular fa-rocket-launch\";\n            nftAttTD.appendChild(_i); */\n \n            nftTxt3 = document.createElement('h6');\n            nftTxt3.id = \"att2\" + _vaultId + tkID;\n            nftTxt3.className = \"nftTxt3\";\n            nftTxt3.innerHTML = \"\";\n            nftAttTD.appendChild(nftTxt3);\n            /* nftAtt.appendChild(nftTxt3); */\n\n            nftContainer.appendChild(nftCard);\n\n          })();\n        }\n        onGoingNotif(\"\");\n\n\n\n      }\n      catch(ex){\n        console.log(\"renderNFT\",ex);\n      }\n    }\n\n    async function ShowNFTCard(tab_container, nftcontract, contractAdress, _account, isStaked) {\n      var nftName = await nftcontract.methods.name().call();\n      var balanceOfOwner = await nftcontract.methods.balanceOf(_account).call();\n      var DivContainer = document.getElementById(tab_container);\n      var nftcontainer;\n      var objNFTPend;\n      var objNFTNitroEquip;\n      var btnPowerUp;\n      var imgNFT;\n\n      var mismatchNFT;\n      //console.log(\"ShowNFTCard>>\", nftName);\n\n      try {\n        for (let i = 0; i < balanceOfOwner; i++) {\n          (async function () {\n            try {\n              var tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, i).call();\n              const tokenMetadata = await fetchNFTImage(nftcontract, _account, tkID, 'ShowNFTCard');\n              var _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n              var _checkAdd = stakingnftcontract.methods.Vault(_vaultId).call();\n              \n              mismatchNFT = false;\n              if (_checkAdd.nftAddress != contractAdress) {\n                mismatchNFT = true;\n              }\n\n              var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, tkID).call();\n              if (isStaked) {\n                if (_nftStakeInfo.owner != account) {\n                  return;\n                }\n              }\n\n              nftcontainer = document.createElement(\"div\");\n              nftcontainer.id = \"nftcontainer_\" + _vaultId + \"_\" + tkID;\n              //nftcontainer.className = \"parent nftcontainer\";\n              if (isMobile) {\n                nftcontainer.className = \"nftcontainer-mobile\";\n              }\n              else {\n                nftcontainer.className = \"nftcontainer\";\n              }\n\n              const nftdetail = document.createElement('div');\n              nftdetail.id = \"nftdetail_\" + _vaultId + \"_\" + tkID;\n              nftdetail.className = \"nftdetail\";\n\n              const chk = document.createElement(\"INPUT\");\n              chk.setAttribute(\"type\", \"checkbox\");\n              chk.id = contractAdress + \"_\" + tkID;\n              chk.className = \"unlisted\";\n\n              const lbl = document.createElement(\"LABEL\");\n              lbl.className = \"parent\";\n              lbl.htmlFor = chk.id;\n\n              if (tokenMetadata[\"image\"].includes(\"mp4\")) {\n                imgNFT = document.createElement('video');\n              }\n              else {\n                imgNFT = document.createElement('img');\n              }\n              if (isMobile) {\n                imgNFT.className = \"image-mobile\";\n              }\n              else {\n                imgNFT.className = \"image\";\n              }\n\n              if (tokenMetadata[\"image\"].includes(\"mp4\")) {\n\n                const vid_source = document.createElement(\"source\");\n                if (tokenMetadata[\"image\"].startsWith(\"ipfs://\")) {\n                  vid_source.setAttribute(\"src\", `https://ipfs.io/ipfs/${tokenMetadata[\"image\"].split(\"ipfs://\")[1]}`);\n                }\n                else {\n                  vid_source.setAttribute(\"src\", tokenMetadata[\"image\"]);\n                }\n\n                vid_source.setAttribute(\"type\", \"video/mp4\");\n                imgNFT.appendChild(vid_source);\n              }\n              else {\n                var _imgFix = tokenMetadata[\"image\"];\n                if (_imgFix.startsWith(\"ipfs://\")) {\n                  _imgFix = `https://ipfs.io/ipfs/${_imgFix.replace(\"ipfs://\", '')}`\n                }\n                imgNFT.setAttribute(\"src\", _imgFix);\n              }\n\n\n              imgNFT.setAttribute(\"alt\", \"Error loading image\");  //contractAdress);\n\n              \n              var _level = await nftlevelcontract.methods.getNFTLevel(_vaultId, tkID).call();\n              if(_level>0){\n                _level = \"(Lv\" + _level + \")\"; \n              }\n              else{\n                _level=\"\";\n              }\n\n              const objNFT = document.createElement('h6');\n              objNFT.id = \"stk\" + _vaultId + tkID;\n              objNFT.className = \"h6nftName\";\n              objNFT.innerHTML = (nftName.length > 20 ? nftName.substring(1, 20) : nftName) + ` #` + (tkID.length > 5 ? tkID.substring(1, 5) : tkID) + _level;\n\n              lbl.appendChild(imgNFT);\n              nftcontainer.appendChild(chk);\n              nftcontainer.appendChild(lbl);\n\n              nftdetail.appendChild(objNFT);\n              nftcontainer.appendChild(nftdetail);\n\n              /* Begin - For Staked NFT Only */\n              if (isStaked) {\n\n\n                objNFTPend = document.createElement('h6');\n                objNFTPend.className = \"h6pendingEarn\";\n                objNFTPend.id = \"pend\" + _vaultId + tkID;\n                objNFTPend.innerHTML = \"\";\n\n                objNFTNitroEquip = document.createElement('h6');\n                objNFTNitroEquip.className = \"h6nitroEquip\";\n                objNFTNitroEquip.id = \"nitro\" + _vaultId + tkID;\n                objNFTNitroEquip.innerHTML = \"\";\n\n                btnPowerUp = document.createElement('button');\n                btnPowerUp.type = \"button\";\n                btnPowerUp.className = \"powerUpButton\";\n                btnPowerUp.style = \"{{ fontFamily: 'SF Pro Display' }}\";\n                btnPowerUp.innerHTML = \"+\";\n\n                btnPowerUp.onclick = function () {\n                  showPrompt(_vaultId + \"|\" + tkID, function (value) {\n                  });\n                };\n                nftdetail.appendChild(objNFTNitroEquip);\n                nftcontainer.appendChild(objNFTPend);\n                nftcontainer.appendChild(btnPowerUp);\n              }\n              /* End - For Staked NFT Only */\n\n              /*Put Transfer NFT if Not Staked*/\n              else {\n\n                btnPowerUp = document.createElement('button');\n                btnPowerUp.type = \"button\";\n                btnPowerUp.className = \"transferButton\";\n                btnPowerUp.style = \"{{ fontFamily: 'SF Pro Display' }}\";\n                btnPowerUp.innerHTML = \"+\";\n\n                if (mismatchNFT) {\n                  btnPowerUp.onclick = function () {\n                    showPromptTransfer(\"-1|\" + tkID + \"|\" + contractAdress, function (value) {\n                    });\n                  };\n                }\n                else {\n                  btnPowerUp.onclick = function () {\n                    showPromptTransfer(_vaultId + \"|\" + tkID + \"|\" + contractAdress, function (value) {\n                    });\n                  };\n                }\n\n                nftcontainer.appendChild(btnPowerUp)\n              }\n\n\n              DivContainer.appendChild(nftcontainer);\n\n\n            }\n            catch (ex2) {\n              ShowNFTError(nftName + \" - Error on reading token URI\");\n              console.log('ShowNFTErrorCard', ex2);\n            }\n\n          })();\n        }\n\n        return balanceOfOwner;\n      }\n      catch (ex) {\n        console.log('Error on ShowNFTCard', ex);\n      }\n    }\n\n    async function UnstakeSelected() {\n      ClaimThem(true);\n    }\n\n    async function ClaimSelected() {\n      ClaimThem(false);\n    }\n\n    async function BackToCollection() {\n      stakeVaults('staked-nft-container');\n    }\n\n    async function ClaimThem(unstake) {\n      try {        \n        if (account==null){\n          return;\n        }\n        await delay();\n        await onGoingNotif(\"Pending...\");\n\n        const DivContainer = document.getElementById('staked-nft-container');\n        var children = DivContainer.getElementsByTagName('*');\n        var elements = [], child;\n        for (var i = 0; i < children.length; i++) {\n          child = children[i];\n          if (child.type == \"checkbox\" && child.checked == true) {\n            elements.push(child);\n          }\n        }\n\n        var tkIDs = [];\n        var _vaultId;\n\n        //loop for getting staked vault\n        for (var j = 0; j < elements.length; j++) {\n          var nft = [];\n          nft = elements[j].id.split(\"_\");\n          _vaultId = await stakingnftcontract.methods.getVaultId(nft[0]).call();\n\n          tkIDs.push(nft[1]);\n        }\n\n        if (unstake) {\n          await stakingnftcontract.methods.unstake(_vaultId, tkIDs).send({ from: account });\n        }\n        else {\n          await stakingnftcontract.methods.claim(_vaultId, tkIDs).send({ from: account });\n        }\n        BackToCollection();\n\n      }\n      catch (ex) {\n        console.log(\"ClaimThem - \" + ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function addToken(tokenAddress, tokenSymbol, tokenDecimals, tokenImage){\n      const wasAdded = await window.ethereum.request({\n        method: 'wallet_watchAsset',\n        params: {\n          type: 'ERC20', // Initially only supports ERC20, but eventually more!\n          options: {\n            address: tokenAddress, // The address that the token is at.\n            symbol: tokenSymbol, // A ticker symbol or shorthand, up to 5 chars.\n            decimals: tokenDecimals, // The number of decimals in the token\n            image: tokenImage, // A string url of the token logo\n          },\n        },\n      });\n      //console.log(wasAdded);  \n    }\n  \n    async function StakeAll() {      \n      if (account==null){\n        return;\n      }\n\n      const DivContainer = document.getElementById('unstaked-nft-container');\n      var children = DivContainer.getElementsByTagName('*');\n      var elements = [], child;\n  \n      for (var i = 0; i < children.length; i++) {\n        child = children[i];\n        if (child.type == \"checkbox\") {\n          elements.push(child);\n        }\n      }\n\n      if (elements.length == 0) {\n        return;\n      }\n\n      var _isNFTAppr = false;\n      var address;\n      var tkIDs = [];\n\n      var _reject = false;\n\n      for (var i = 0; i < elements.length; i++) {\n        var nft = [];\n        nft = elements[i].id.replace(\"chk\", \"\").split(\"_\");\n\n        if (_isNFTAppr == false) {\n          address = nft[0];\n          await onGoingNotif(\"Approve All\");\n          _isNFTAppr = await nftApproveAll(address);\n\n          if (_isNFTAppr == false) {\n            _reject = true;\n            await onGoingNotif(\"\");\n            return;\n          }\n          await onGoingNotif(\"Pending...\");\n        }\n\n        tkIDs.push(nft[1]);\n      }\n\n      if (await isWhitelist(address)) {\n        var _vaultId = await stakingnftcontract.methods.getVaultId(address).call();\n        await stakingnftcontract.methods.stake(_vaultId, tkIDs).send({ from: account });\n      }\n      else {\n        await stakingnftcontract.methods.stakeAny(address, tkIDs, true).send({ from: account });\n      }\n      await refreshDAppView();\n      await onGoingNotif(\"\");\n\n\n    }\n\n    async function StakeThem() {\n      try {        \n        if (account==null){\n          return;\n        }\n        await onGoingNotif(\"Pending...\");\n\n        const DivContainer = document.getElementById('unstaked-nft-container');\n        var children = DivContainer.getElementsByTagName('*');\n        var elements = [], child;\n        for (var i = 0; i < children.length; i++) {\n          child = children[i];\n          if (child.type == \"checkbox\" && child.checked == true) {\n            elements.push(child);\n          }\n        }\n\n        var _isNFTAppr = false;\n        var address;\n        var tkIDs = [];\n\n        var _reject = false;\n\n        for (var i = 0; i < elements.length; i++) {\n          var nft = [];\n          nft = elements[i].id.replace(\"chk\", \"\").split(\"_\");\n\n          if (_isNFTAppr == false) {\n            address = nft[0];\n              await onGoingNotif(\"\");\n              await onGoingNotif(\"Approve All\");\n            _isNFTAppr = await nftApproveAll(address);\n\n            if (_isNFTAppr == false) {\n              _reject = true;\n              await onGoingNotif(\"\");\n              return;\n            }\n            await onGoingNotif(\"Pending...\");\n          }\n          tkIDs.push(nft[1]);\n        }\n\n        if (await isWhitelist(address)) {\n          var _vaultId = await stakingnftcontract.methods.getVaultId(address).call();\n          await stakingnftcontract.methods.stake(_vaultId, tkIDs).send({ from: account });\n        }\n        else {\n          await stakingnftcontract.methods.stakeAny(address, tkIDs, true).send({ from: account });\n        }\n        await refreshDAppView();\n        await onGoingNotif(\"\");\n      }\n      catch (ex) {\n        console.log(\"StakeThem - \" + ex);\n      }\n      await onGoingNotif(\"\");\n\n    }\n\n    async function refreshDAppView() {\n      await RefreshCollection();\n      await listNFTFilter(resultAPICall);\n      await stakeVaults('staked-nft-container');\n    }\n\n    async function nftApproveAll(address) {\n      try {\n        var _nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, address);\n        var _isAppr = await _nftcontract.methods.isApprovedForAll(account, stakingnft_address).call();\n        if (_isAppr == false) {\n          await _nftcontract.methods.setApprovalForAll(stakingnft_address, true).send({ from: account })\n        }\n        return true;\n      }\n      catch (ex) {\n        console.log(address);\n        console.log(\"nftApproveAll - \" + ex);\n        return false;\n      }\n\n    }\n\n    async function isWhitelist(address) {\n      var _res = false;\n      try {\n        for (var key in CONFIGWhitelist.NFT) {\n          if (CONFIGWhitelist.NFT[key].ADDRESS == address) {\n            _res = true;\n            break;\n          }\n        }\n      }\n      catch (ex) {\n        console.log(\"isWhitelist - \" + ex);\n      }\n      return _res;\n    }\n\n    async function ShowNFTError(msgValue) {\n      const DivContainer = document.getElementById('unstaked-nft-container');\n\n      const curDiv = document.createElement('div');\n      curDiv.className = \"nftcontainer\";  // mt-3 ml-3\";\n\n      const chk = document.createElement(\"INPUT\");\n      chk.setAttribute(\"type\", \"checkbox\");\n      chk.id = \"chk\";\n      chk.className = \"unlisted\";\n\n      const lbl = document.createElement(\"LABEL\");\n      lbl.htmlFor = chk.id;\n\n      const objNFT = document.createElement('h6');\n      objNFT.innerHTML = msgValue;\n      objNFT.className = \"errorMessage\";\n\n      curDiv.appendChild(chk);\n      curDiv.appendChild(lbl);\n\n      curDiv.appendChild(objNFT);\n      DivContainer.appendChild(curDiv);\n    }\n\n    async function showCover() {\n      let coverDiv = document.createElement('div');\n      coverDiv.id = 'cover-div';\n\n      coverDiv.onclick = function () {\n        hideCover();\n      };\n\n      // make the page unscrollable while the modal form is open\n      document.body.style.overflowY = 'hidden';\n      document.body.append(coverDiv);\n    }\n\n    async function SendNFT(nftAdd, destiAdd, tkID) {\n      try {\n        await onGoingNotif(\"Sending NFT...\");\n\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, nftAdd);\n        //console.log(\"NFT: \", await nftcontract.methods.name().call());\n\n        if (await nftcontract.methods.isApprovedForAll(account, stakingnft_address).call()==false){\n          await nftcontract.methods.setApprovalForAll(stakingnft_address, true).send({ from: account});\n        }\n\n        await nftcontract.methods.safeTransferFrom(account, destiAdd, tkID).send({ from: account });\n        await refreshDAppView();\n\n        await onGoingNotif(\"\");\n      }\n      catch (ex) {\n        console.log(ex);\n        await onGoingNotif(\"\");\n      }\n    }\n\n    async function NitroAdd() {\n      await onGoingNotif(\"Pending...\");\n      try {\n        let DivContainer = document.getElementById('prompt-message');\n        if (isMobile){\n          DivContainer = document.getElementById('prompt-message-mobile');\n        }\n        var children = DivContainer.getElementsByTagName('*');\n        var child;\n\n        if (children.length > 0) {\n\n          var _isAppr = await nitrocontract.methods.isApprovedForAll(account, stakingnft_address).call();\n          if (_isAppr == false) {\n            await nitrocontract.methods.setApprovalForAll(stakingnft_address, true)\n              .send({\n                from: account,\n                gasLimit: String(totalGasLimit)\n              })\n          }\n\n          for (var i = 0; i < children.length; i++) {\n            child = children[i];\n            if (child.type == \"radio\" && child.checked == true) {\n              var nft = [];\n              nft = child.id.split(\"|\");\n\n              var _vaultId = nft[0];\n              var _tkID = nft[1];\n              var _nitroId = nft[2];\n\n              console.log(\"stakeNitro\", _vaultId, _tkID, _nitroId, totalGasLimit);\n\n              await stakingnftcontract.methods.stakeNitro(_vaultId, _tkID, _nitroId)\n                .send({\n                  from: account \n                });\n              break;\n            }\n          }\n        }\n      }\n      catch (ex) {\n        console.log(ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function hideCover() {\n      try {\n        document.getElementById('cover-div').remove();\n        document.body.style.overflowY = '';\n      }\n      catch (ex) {\n      }\n    }\n\n    async function showPromptTransfer(text, callback) {\n      showCover();\n \n      var _nft = [];\n      _nft = text.split(\"|\");\n      var _vaultId = _nft[0];\n \n      //Highlight the selected NFT\n      document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard SelectedNFT\";\n\n      var _vault;\n      if (_vaultId == -1) {\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _nft[2]);\n      }\n      else {\n        _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _vault.nftAddress);\n      }\n\n      var _nftName = await nftcontract.methods.name().call();\n\n\n      let form = document.getElementById('prompt-form');\n\n      let container = document.getElementById('prompt-form-container');\n      let msg = document.getElementById('prompt-message');\n\n      var h6NFTAddy = document.createElement('h5');\n      h6NFTAddy.className = \"h6Nitro\";\n      form.className = \"transfer-width\";\n\n      var txAdd;\n      if (_vaultId == -1) {\n        h6NFTAddy.innerHTML = _nftName + \" #\" + _nft[1] + \"<br>\" + _nft[2] + \"<br>\";\n        txAdd = _nft[2];\n      }\n      else {\n        h6NFTAddy.innerHTML = _nftName + \" #\" + _nft[1] + \"<br>\" + _vault.nftAddress + \"<br>\";\n        txAdd = _vault.nftAddress;\n      }\n\n      var h6Caption = document.createElement('h6');\n      h6Caption.className = \"h6Nitro\";\n      h6Caption.innerHTML = \"Transfer NFT to (Input Wallet Address)\";\n\n      var x = document.createElement(\"INPUT\");\n      x.id = text;\n      x.placeholder = \"0x0000000000000000000000000000000000000000\";\n      x.setAttribute(\"type\", \"text\");\n\n      var curDiv = document.createElement('div');\n      curDiv.className = \"transfer-nft\";\n      msg.className = \"\";\n      msg.innerHTML = \"\";\n\n      var btnSubmit = document.getElementById('btnSubmit');\n      btnSubmit.value = \"Send\";\n\n      curDiv.appendChild(h6NFTAddy);\n      curDiv.appendChild(h6Caption);\n      curDiv.appendChild(x);\n\n      msg.appendChild(curDiv);\n\n\n      function complete(value) {\n        if (value == \"submit\") {\n          SendNFT(txAdd, x.value, _nft[1]);\n        }\n        hideCover();\n        container.style.display = 'none';\n        document.onkeydown = null;\n        callback(value);\n      }\n\n      form.onsubmit = function () {\n        let value = \"submit\";\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard\";\n        complete(value);\n        return false;\n      };\n\n      form.cancel.onclick = function () {\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard\";\n        complete(null);\n      };\n\n      document.onkeydown = function (e) {\n        if (e.key == 'Escape') {\n          document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard\";\n          complete(null);\n        }\n      };\n      container.style.display = 'block';\n    }\n\n    async function showLoading() {\n      let form = document.getElementById('prompt-form');\n      let container = document.getElementById('prompt-form-container');\n\n      let DivContainer = document.getElementById('prompt-message');\n\n      showCover();\n      //DivContainer.className = \"scroll\";\n      DivContainer.innerHTML = \"\";\n\n      const lbl = document.createElement(\"LABEL\");\n      lbl.className = \"parent\";\n\n      let img = document.createElement('img');\n      img.setAttribute(\"src\", 'loading.gif');\n\n      let curDiv = document.createElement('div');\n      curDiv.className = \"nitrocontainer\";\n\n      lbl.appendChild(img);\n      curDiv.appendChild(lbl);\n      DivContainer.appendChild(curDiv);\n\n      container.style.display = 'block';\n\n      //console.log(DivContainer);\n    }\n\n    async function showPrompt(text, callback) {     \n      let container = document.getElementById('prompt-form-container');\n      let form;\n      let DivContainer; \n      if(isMobile){\n        form = document.getElementById('prompt-form-mobile');\n        DivContainer = document.getElementById('prompt-message-mobile'); \n      }\n      else{\n        form = document.getElementById('prompt-form');\n        DivContainer = document.getElementById('prompt-message'); \n      }\n\n      var curDiv;\n      var contractAdress;\n      var balanceOfOwner = await nitrocontract.methods.balanceOf(account).call(); \n\n      showCover();\n\n      var _nft = [];\n      _nft = text.split(\"|\");\n\n      var lastClass = document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className;\n      document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard SelectedNFT\"; \n      curDiv = document.createElement('div');\n      contractAdress = await nitrocontract.methods.symbol().call();  \n      //DivContainer.className = \"nitro-scroll\";\n      DivContainer.innerHTML = \"\"; \n\n      for (let i = 0; i < balanceOfOwner; i++) {\n        (async function () {\n          try {\n            var tkID = await nitrocontract.methods.tokenOfOwnerByIndex(account, i).call();\n\n            var nitCard = document.createElement('div');            \n            nitCard.id = \"nit\" + tkID;\n            if(isMobile){\n              nitCard.className = \"nitCard-mobile\";\n            }\n            else{\n              nitCard.className = \"nitCard\";\n            }\n\n            var nitTable = document.createElement('TABLE');\n            nitTable = document.createElement(\"TABLE\");\n            nitTable.setAttribute(\"id\", \"tbl\" + tkID);\n            nitCard.appendChild(nitTable);\n\n            var nitTR = document.createElement('TR');\n            nitTR.className = \"nitTR\";\n            nitTable.appendChild(nitTR);\n\n            var nitTD1 = document.createElement('TD');\n            nitTD1.className = \"nitTD1\";\n            nitTR.appendChild(nitTD1);\n             \n            var nitchk = document.createElement(\"INPUT\");\n            nitchk.setAttribute(\"type\", \"radio\"); \n            nitchk.id = text + '|' + tkID;\n            nitchk.className = \"nitchk\";\n            nitchk.name = \"nitro\";\n            nitTD1.appendChild(nitchk);\n\n            var nitlbl = document.createElement(\"LABEL\");\n            nitlbl.htmlFor = nitchk.id;\n            nitTD1.appendChild(nitlbl);\n\n\n            let tokenMetadataURI = await nitrocontract.methods.tokenURI(tkID).call();\n            if (tokenMetadataURI.startsWith(\"ipfs://\")) {\n              tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI.split(\"ipfs://\")[1]}`;\n            }\n            else if (tokenMetadataURI.startsWith(\"https://gateway.pinata.cloud/ipfs/\")) {\n              tokenMetadataURI = tokenMetadataURI.replace(`https://gateway.pinata.cloud/ipfs/`, ``);\n              tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI}${1}`;\n            }\n            var tokenMetadata = await fetch(tokenMetadataURI).then((response) => response.json()); \n\n            var imgNFT = document.createElement('img');\n            imgNFT.setAttribute(\"src\", tokenMetadata[\"image\"]);  \n            imgNFT.setAttribute(\"alt\", contractAdress);\n            imgNFT.setAttribute(\"title\", \"Nitro #\" + tkID);\n            imgNFT.style.width = \"100px\";\n            nitlbl.appendChild(imgNFT);\n\n            \n\n            var nitTD2 = document.createElement('TD');\n            nitTD2.className = \"nitTD2\";\n            nitTR.appendChild(nitTD2);\n            \n            var nitAtt1 = document.createElement('h6');\n            nitAtt1.className = \"nitAtt\";\n            nitAtt1.innerHTML = tokenMetadata[\"attributes\"][0][\"trait_type\"] + ': <b> x' + tokenMetadata[\"attributes\"][0][\"value\"] + '</b>'; \n            nitTD2.appendChild(nitAtt1);\n\n            var nitAtt2 = document.createElement('h6');\n            nitAtt2.className = \"nitAtt\";\n            nitAtt2.innerHTML = tokenMetadata[\"attributes\"][1][\"trait_type\"] + ': ' + tokenMetadata[\"attributes\"][1][\"value\"]; \n            nitTD2.appendChild(nitAtt2);\n\n            var nitAtt3 = document.createElement('h6');\n            nitAtt3.className = \"nitAtt\";\n            nitAtt3.innerHTML = tokenMetadata[\"attributes\"][2][\"trait_type\"] + ': ' + tokenMetadata[\"attributes\"][2][\"value\"]; \n            nitTD2.appendChild(nitAtt3);\n \n            DivContainer.appendChild(nitCard);\n\n          }\n          catch (ex2) {\n            console.log(ex2);\n          }\n\n        })();\n      }\n\n      function complete(value) {\n        if (value == \"submit\") {\n          NitroAdd();\n        }\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=lastClass;\n        hideCover();\n        container.style.display = 'none';\n        document.onkeydown = null;\n        callback(value);\n      }\n\n      form.onsubmit = function () {\n        let value = \"submit\";\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=lastClass;\n        complete(value);\n        return false;\n      };\n\n      form.cancel.onclick = function () {\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=lastClass;\n        complete(null);\n      };\n\n      document.onkeydown = function (e) {\n        if (e.key == 'Escape') {\n          document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=lastClass;\n          complete(null);\n        }\n      };\n      container.style.display = 'block';\n    }\n\n    async function NitroMint(pID) {\n      try { \n        if (account==null){\n          return;\n        }\n        await onGoingNotif(\"Pending...\");\n\n        if (amtNitro > 0) {\n \n          var totalCost = await nitrocontract.methods.getNitroPrice(pID).call(); \n          totalCost = Web3.utils.fromWei(totalCost) * amtNitro;\n          var totalCostWei = Web3.utils.toWei(String(totalCost));\n\n          var _token = await nitrocontract.methods.getCryptotoken(pID).call();\n          var _tokencontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, _token);\n\n          var _allow = parseInt( await _tokencontract.methods.allowance(account, nitroboost_address).call()); \n\n          var _txRejected = false;         \n          console.log(web3);\n\n          if (_allow < totalCostWei) {\n            await onGoingNotif(\"Approval...\");\n            var apprAmt = Web3.utils.toWei(String(totalCost*Number.MAX_SAFE_INTEGER ));\n            await _tokencontract.methods.approve(nitroboost_address, String(apprAmt))\n              .send({ from: account })\n              .on('error', function(error, receipt){\n                _txRejected=true;\n              })\n              .catch(()=>{\n                onGoingNotif(\"\");\n              });\n             \n            /* await rewardcontract.methods.approve(nitroboost_address, _maxSupp)\n              .send({ from: account }); */\n            await onGoingNotif(\"Pending...\");\n          }\n          console.log(_txRejected);\n          if (_txRejected==false){\n\n            await nitrocontract.methods\n              .mint(amtNitro, pID)\n              .send({\n                gasLimit: String(totalGasLimit * amtNitro),\n                to: nitroboost_address,\n                from: account\n              })\n              .on('confirmation', (confirmationNumber, receipt) => {\n                onGoingNotif(\"\");\n                //console.log(confirmationNumber, receipt);\n              });\n          }\n\n        }\n      }\n      catch (ex) {\n        console.log(ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function BtnSelected(amt) {\n      amtNitro = amt;\n    }\n \n    if (isMobile) { \n      return (\n        <div className=\"App nftapp\">\n          <nav class=\"navbar navbarfont navbar-expand-md navbar-dark bg-dark mb-1\" >\n            <div class=\"container-fluid\" style={{ fontFamily: \"SF Pro Display\" }}>\n              <a class=\"navbar-brand\" style={{ fontWeight: \"800\", fontSize: '15px' }} href=\"#\">\n                <img src=\"logo.png\" width=\"50\" />\n              </a>\n              <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n              </button>\n              <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n                <ul class=\"navbar-nav me-auto mb-2 px-3 mb-md-0\" style={{ fontSize: \"15px\" }}>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Dashboard</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Market Place</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\">Bridge NFTs</a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </nav>\n\n          <div className='container container-style-mobile mb-5'>\n            <div className='row'>\n              <body className='nftminter-mobile'>\n                <form>\n                  <div className='row p-2'>\n                    <h5 className='h5Nitro'>Mint Nitro NFT Here</h5>\n                  </div>\n                  <img src=\"./nitrocommon.gif\" width=\"100px\" />\n                  <h6 className='h6Nitro'>Select Nitro Quantity</h6>\n\n                  <ButtonGroup size=\"lg\"\n                    aria-label=\"First group\"\n                    name=\"amount\"\n                    style={{ boxShadow: \"1px 1px 5px #000000\" }}\n                    class=\"btn-group\"\n                  >\n                    <Button value=\"1\" onClick={function () { BtnSelected(1) }}>1</Button>\n                    <Button value=\"2\" onClick={function () { BtnSelected(2) }}>2</Button>\n                    <Button value=\"3\" onClick={function () { BtnSelected(3) }}>3</Button>\n                    <Button value=\"4\" onClick={function () { BtnSelected(4) }}>4</Button>\n                    <Button value=\"5\" onClick={function () { BtnSelected(5) }}>5</Button>\n                  </ButtonGroup>\n\n                  <h6 className='h6Nitro mt-3'>Pay with your preferred Crypto</h6>\n                  <div className=\"nitro-qty\" role=\"group\" id=\"btnNitroQty\" aria-label=\"Token Payment\" >\n                  <img src={\"./tokens/1.png\"} width=\"50\" alt=\"CrudeOil\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnCrudeOil\" onClick={function () { NitroMint(0) }} />\n                    <img src={\"./tokens/2.png\"} width=\"50\" alt=\"MartinB\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnMartinB\" onClick={function () { NitroMint(1) }} />\n                    <img src={\"./tokens/3.png\"} width=\"50\" alt=\"KTH\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnKTH\" onClick={function () { NitroMint(2) }} />\n                    <img src={\"./tokens/4.png\"} width=\"50\" alt=\"ARG\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnARG\" onClick={function () { NitroMint(3) }} />\n                    <img src={\"./tokens/5.png\"} width=\"50\" alt=\"Tango\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnTango\" onClick={function () { NitroMint(4) }} />\n                  </div>\n                </form>\n              </body>              \n            </div>\n            <div className='row'>\n              <body className='nftstaker'>\n                <form style={{ fontFamily: \"SF Pro Display\" }} >\n                  <Tabs defaultActiveKey=\"second\" className=\"nav-pills nav-fill\">\n                    <Tab eventKey=\"first\" title=\"Unstaked NFT\">\n                      <div className='row items' >\n                        <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                          <div class=\"hold-nft-menu buttonmenu\" role=\"group\" aria-label=\"Hold NFT Menu\">\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnStakeSelected\" onClick={StakeThem}>Stake Selected</button>\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnStakeAll\" onClick={StakeAll}>Stake All</button>\n                            <select id=\"nftFilter\" style={{ fontSize: \"9px\" }} className='drpFilter btn-secondary' onChange={RefreshCollection}>\n                              <option selected class=\"selected\">JeepneyRushNFT</option>\n                              <option>All Owned NFT</option>\n                            </select>\n                          </div>\n                        </div>\n                      </div>\n                      <div className='col'>\n                        <div className='row items'>\n                          <div id='unstaked-nft-container' className='nft_card_view-mobile' />\n                        </div>\n                      </div>\n                    </Tab>\n                    <Tab eventKey=\"second\" title=\"Staked NFT\">\n                      <div className='row items' >\n                        <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                          <div class=\"hold-nft-menu buttonmenu\" id=\"btnUnstakeMenu\" role=\"group\" aria-label=\"Stake NFT Menu\">\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnBack\" onClick={BackToCollection}>Back</button>\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnClaimSelected\" onClick={ClaimSelected}>Claim Selected</button>\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnUnstakeSelected\" onClick={UnstakeSelected}>Unstake Selected</button>\n                          </div>\n                        </div>\n                      </div>\n                      <div className='row items'>\n                        <div id='staked-nft-container' className='ml-3 mr-3 nft_card_view' />\n                      </div>\n                    </Tab>\n                  </Tabs>\n                </form>\n              </body>\n            </div>\n          </div>\n \n          <div className=\"row px-4 pt-2\">\n            <div className='header' style={{ fontSize: '11px' }}>\n              <div style={{ fontSize: '15px', borderRadius: '14px', color: \"#ffffff\", fontWeight: \"300\" }}>Staking Vault Rewards</div>\n              <table id=\"tblvaultInfo\" className='table px-15 table-bordered table-dark' />\n            </div>\n          </div>\n\n          <nav class=\"navbar navbarfont bg-dark\"/*navbar-expand-md navbar-dark  style={{ marginBottom: \"0px\", marginLeft: \"0px\", marginRight: \"0px\", clear: \"both\" }} */>\n            <div class=\"navbar-inner\">\n              <div class=\"d-flex flex-row accountInfo\" style={{marginLeft: \"10px\"}}>\n                <div id=\"wallBal\" className=\"walletBalance\" />\n                <div id=\"btnConnect\" onClick={connectwallet} className=\"connectbutton ml-2\" type=\"button\" style={{ fontFamily: \"SF Pro Display\" }}>\n                  Connect Your Wallet\n                </div>\n              </div>\n\n            </div>\n          </nav>\n\n          <div id=\"prompt-form-container\">\n            <form id=\"prompt-form-mobile\">\n              <div className='add-booster'>\n                <div id=\"prompt-message-mobile\"></div>\n                <input name=\"btnSubmit\" id=\"btnSubmit\" type=\"submit\" value=\"Equip\"></input>\n                <input name=\"cancel\" id=\"cancel\" type=\"button\" value=\"Cancel\" />\n              </div>\n            </form>\n          </div>\n\n        </div>\n      );\n    }\n    else { \n      return (\n        <div className=\"App nftapp\">\n          <nav class=\"navbar navbarfont navbar-expand-md navbar-dark bg-dark mb-4\">\n            <div class=\"container-fluid\" style={{ fontFamily: \"SF Pro Display\" }}>\n              <a class=\"navbar-brand px-5\" style={{ fontWeight: \"800\", fontSize: '15px' }} href=\"#\"></a><img src=\"logo.png\" width=\"7%\" />\n              <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n              </button>\n              <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n                <ul class=\"navbar-nav me-auto mb-2 px-3 mb-md-0\" style={{ fontSize: \"15px\" }}>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Dashboard</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Market Place</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\">Bridge NFTs</a>\n                  </li>\n                </ul>\n              </div>\n            </div> \n            <div className='px-5'>\n              <div class=\"d-flex flex-row accountInfo\">\n                <div id=\"wallBal\" className=\"walletBalance\" />\n                <div id=\"btnConnect\" onClick={connectwallet} className=\"connectbutton ml-2\" type=\"button\" style={{ fontFamily: \"SF Pro Display\" }}>\n                  Connect Your Wallet\n                </div>\n              </div>\n            </div>\n          </nav>\n\n          <div className='container container-style'>\n            <div className='col'>\n              <body className='nftminter'>\n                <form>\n                  <div className='row p-2'>\n                    <h5 className='h5Nitro'>Mint Nitro NFT Here</h5>\n                  </div>\n                  <img src=\"./nitrocommon.gif\" width=\"100px\" />\n                  <h6 className='h6Nitro'>Select Nitro Quantity</h6>\n\n                  <ButtonGroup size=\"lg\"\n                    aria-label=\"First group\"\n                    name=\"amount\"\n                    style={{ boxShadow: \"1px 1px 5px #000000\" }}\n                    class=\"btn-group\"\n                  >\n                    <Button value=\"1\" onClick={function () { BtnSelected(1) }}>1</Button>\n                    <Button value=\"2\" onClick={function () { BtnSelected(2) }}>2</Button>\n                    <Button value=\"3\" onClick={function () { BtnSelected(3) }}>3</Button>\n                    <Button value=\"4\" onClick={function () { BtnSelected(4) }}>4</Button>\n                    <Button value=\"5\" onClick={function () { BtnSelected(5) }}>5</Button>\n                  </ButtonGroup>\n\n                  <h6 className='h6Nitro mt-3'>Pay with your preferred Crypto</h6>\n                  <div class=\"nitro-qty\" role=\"group\" id=\"btnNitroQty\" aria-label=\"Token Payment\">\n                    <img src={\"./tokens/1.png\"} width=\"50\" alt=\"CrudeOil\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnCrudeOil\" onClick={function () { NitroMint(0) }} />\n                    <img src={\"./tokens/2.png\"} width=\"50\" alt=\"MartinB\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnMartinB\" onClick={function () { NitroMint(1) }} />\n                    <img src={\"./tokens/3.png\"} width=\"50\" alt=\"KTH\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnKTH\" onClick={function () { NitroMint(2) }} />\n                    <img src={\"./tokens/4.png\"} width=\"50\" alt=\"ARG\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnARG\" onClick={function () { NitroMint(3) }} />\n                    <img src={\"./tokens/5.png\"} width=\"50\" alt=\"Tango\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnTango\" onClick={function () { NitroMint(4) }} />\n                  </div>\n\n                  <br></br>\n                  <div className=\"row pt-2\">\n                    <div className='header' style={{ fontSize: '11px' }}>\n                      <div style={{ fontSize: '15px', borderRadius: '14px', color: \"#ffffff\", fontWeight: \"300\" }}>Nitro NFT Rates</div>\n                      <table id=\"tblnitroInfo\" className='table table-bordered table-dark' >\n                        <thead className='thead-light'>\n                          <tr>\n                            <th scope=\"col\">Type</th>\n                            <th scope=\"col\">Price</th>\n                            <th scope=\"col\">Reward Rate</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          <tr>\n                            <td>Nitro Crude</td>\n                            <td>700 OIL</td>\n                            <td>x2.0</td>\n                          </tr>\n                          <tr>\n                            <td>Nitro Martin</td>\n                            <td>750 OIL</td>\n                            <td>x2.1</td>\n                          </tr>\n                          <tr>\n                            <td>Nitro KTH/ARG</td>\n                            <td>770 OIL</td>\n                            <td>x2.2</td>\n                          </tr>\n                          <tr>\n                            <td>Nitro Tango</td>\n                            <td>800 OIL</td>\n                            <td>x2.3</td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n\n                    <div className='header' style={{ fontSize: '11px' }}>\n                      <div style={{ fontSize: '15px', borderRadius: '14px', color: \"#ffffff\", fontWeight: \"300\" }}>Staking Vault Rewards</div>\n                      <table id=\"tblvaultInfo\" className='table px-5 table-bordered table-dark' />\n                    </div>\n                  </div>\n                  \n                </form>\n              </body>\n\n            </div>\n            <div className='col'>\n              <table className='nftstaker'>\n                <tr>\n                  <body className='nftstaker'>\n                    <form style={{ fontFamily: \"SF Pro Display\" }} >\n                      <Tabs defaultActiveKey=\"second\" className=\"nav-pills nav-fill\">\n                        <Tab eventKey=\"first\" title=\"Unstaked NFT\">\n                          <div className='row items' >\n                            <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                              <div class=\"hold-nft-menu buttonmenu\" role=\"group\" aria-label=\"Hold NFT Menu\">\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnStakeSelected\" onClick={StakeThem}>Stake Selected</button>\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnStakeAll\" onClick={StakeAll}>Stake All</button>\n                                <select id=\"nftFilter\" className='drpFilter btn-secondary' onChange={RefreshCollection}>\n                                  <option selected class=\"selected\">JeepneyRushNFT</option>\n                                  <option>All Owned NFT</option>\n                                </select>\n                              </div>\n                            </div>\n                          </div>\n                          <div className='col'>\n                            <div className='row items'>\n                              <div id='unstaked-nft-container' className='nft_card_view' />\n                            </div>\n                          </div>\n                        </Tab>\n                        <Tab eventKey=\"second\" title=\"Staked NFT\">\n                          <div className='row items' >\n                            <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                              <div class=\"hold-nft-menu buttonmenu\" id=\"btnUnstakeMenu\" role=\"group\" aria-label=\"Stake NFT Menu\">\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnBack\" onClick={BackToCollection}>Back</button>\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnClaimSelected\" onClick={ClaimSelected}>Claim Selected</button>\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnUnstakeSelected\" onClick={UnstakeSelected}>Unstake Selected</button>\n                              </div>\n                            </div>\n                          </div>\n                          <div className='row items'>\n                            <div id='staked-nft-container' className='ml-3 mr-3 nft_card_view' />\n                          </div>\n                        </Tab>\n                      </Tabs>\n                    </form>\n                  </body>\n                </tr>\n              </table>\n\n            </div>\n          </div>\n\n          <div id=\"prompt-form-container\"> \n            <form id=\"prompt-form\">\n              <div className='add-booster'>\n                <div id=\"prompt-message\" className='scroll'></div>\n                <input name=\"btnSubmit\" id=\"btnSubmit\" type=\"submit\" value=\"Equip\"></input>\n                <input name=\"cancel\" id=\"cancel\" type=\"button\" value=\"Cancel\" />\n              </div>\n            </form>\n          </div>\n\n          <footer>\n            <div class=\"container\">\n              <div class=\"row secondary\"></div>\n            </div>\n            <div class=\"row copyright\">\n              <p>Copyright &copy; 2022 RushDapp SmartBCH | All Rights Reserved</p>\n            </div>\n\n          </footer>\n        </div>\n      );\n    }\n\n  };\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["window","$","short_acct","tx_pending","CONFIG","ABI","account","nftcontract","defSymbol","totalGasLimit","walletBalanceAPI","scannerAPI","balanceAPI","resultAPICall","CONFIGWhitelist","stakingnftcontract","rewardcontract","nitrocontract","nftlevelcontract","nitroBCHcontract","nitroBCH_address","stakingnft_address","nitroboost_address","scannercontract","web3","rewardInDetail","vaultSelected","amtNitro","isLoading","isRendering","userStakes","Array","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleWindowSizeChange","setState","width","innerWidth","state","addEventListener","removeEventListener","isMobile","connectwallet","_connectwallet","apply","arguments","asyncToGenerator","_regeneratorRuntime","mark","_callee","configResponse","accounts","networkId","abiResponse","abiWhitelist","sWallBal","wrap","_context","prev","next","ethereum","fetch","headers","Content-Type","Accept","sent","json","Web3","send","eth","getAccounts","request","method","MAINNET","ID","TESTNET","SYMBOL","GAS_LIMIT","API","BALANCE","WALLET","ABIFetch","TOKENREWARD","MAINDAPP","STAKING","NITROBOOST","RUSHLEVEL","LEVELING","SCANNER","NITROBCH","TESTDAPP","onGoingNotif","document","getElementById","style","WalletBalance","innerHTML","APICall","listNFTFilter","LoadVaults","setInterval","CheckRewards","LoadVaultInfo","confirm","t0","console","log","stop","VaultRewardToken","_x","_VaultRewardToken","_callee2","delegate","vaultrewarder","rewardToken","_rewardcontract","_context2","REWARDER","methods","abrupt","_LoadVaultInfo","_callee3","tbl","thd","_tr","_th1","_th2","counter_vault","_tbody","_vault","_rewardSymbol","_tbody_tr","_tbody_td1","short_vault","_tbody_td2","_span1","_span2","_context3","createElement","className","appendChild","scope","Vault","active","tokenReward","symbol","vaultName","length","substring","class","reqBooster","utils","fromWei","rewardRate","RefreshCollection","_RefreshCollection","_callee4","nftCol","_context4","value","listNFT","_x2","_x3","_APICall","_callee5","theURL","apiResponse","jsonParsedContents","_context5","APIBalanceCall","_x4","_x5","_x6","_APIBalanceCall","_callee6","_account","_CA","_context6","replace","_x7","_WalletBalance","_callee7","earnedrwd","rewards","_context7","result","Number","toFixed","claimVault","_x8","_claimVault","_callee8","_vaultId","_tkIDs","balanceOfOwner","j","_tkID","_context8","ERC721","nftAddress","balanceOf","tokenOfOwnerByIndex","nftStake","owner","push","claim","from","refreshDAppView","modifyVault","_x9","_x10","_modifyVault","_callee9","_vaultContract","tab_container","_context9","UnstakeMenuControl","getVaultAddress","renderNFT","_x11","_onGoingNotif","_callee10","msg","btnConnect","img","_context10","hideCover","ex","setAttribute","showCover","unstakeVault","_x12","_unstakeVault","_callee11","i","_context11","unstake","GetNFTLevel","_x13","_x14","_GetNFTLevel","_callee12","nftLevel","_context12","getNFTLevel","concat","_CheckRewards","_callee13","_stakeVaults","_symbol","totalVaults","_i","_i2","contractAdress","divPend","_pendingRewards","_pend2","_stakeCount","earned","tokenIds","_pend","objNFTPend","objNFTLvl","_nitroStakeRemaining","_result","nitroID","remain","_nitroEquipped","_multipower","_powerFloat","nftLvlBonus","_lvlFloat","_glowNum","seconds","d","h","m","s","remainingBurn","_context13","includes","getTotalVault","isAcctHasStakeOnVault","pendingRewardByAccount","String","split","getVaultId","getTokenIDs","pendingReward","nitroStakeRemaining","getEquippedNitro","getNitroPower","parseFloat","getLevelBonus","getRareType","Math","floor","t1","t2","_x15","_x16","_x17","_UnstakeMenuControl","_callee14","btnBack","btnClaim","btnUnstake","_btnBack","_btnClaim","_btnUnstake","_context14","display","classList","add","removeAttribute","remove","_x18","_x19","_getTokenIDs","_callee15","tkns","_context15","getStakeInVaultAccount","_x20","_LoadVaults","_callee17","DivContainer","usrCurrVault","_i3","_vaultInfo","nftName","tokenMetadataURI","tokenMetadata","_context17","name","tokenURI","startsWith","then","response","_callee16","cardVault","cardVaultCard","cardVaultFront","imgNFT","vid_source","img_src","cardVaultDetails","cardH4","cardSpan","cardVaultBack","_tbl","_attrdiv","nft_dtl","_nftName","_symbl","_supply","_tr2","cardButtonClaim","cardButtonUnstake","cardButtonModify","_context16","id","color","totalSupply","onclick","_x21","_x22","_x23","_x24","_listNFT","_callee18","filterList","userNFTHold","btnStakeAll","btnStakeSelected","key","ctr","_i4","_context18","keys","NFT","done","type","ADDRESS","contractAddress","t3","toUpperCase","t4","t5","t6","t7","ShowNFTError","t8","_x25","_x26","_x27","_ABIFetch","_callee19","_abi","_address","_contract","ABIResponse","ABIJSON","_context19","Contract","_x28","_listNFTFilter","_callee20","lstNFT","z_1","t_1","z","t","_context20","createTextNode","balance","fetchNFTImage","_x29","_x30","_x31","_x32","_fetchNFTImage","_callee21","tkID","_caller","_context21","isImgUrl","loadDefaultURI","_loadDefaultURI","_callee22","_context22","_x33","_isImgUrl","_callee23","url","_context23","res","get","_x34","_x35","_x36","_x37","_x38","_renderNFT","_callee25","isStaked","nftContainer","nftCard","nftTable","nftMedia","nftTD","nftLvl","nftChk","nftLbl","nftImg","nftAtt","nftAttTD","nftTxt1","nftTxt2","nftBtn","nftTxt3","_loop","_context25","_callee24","_imgFix","_context24","htmlFor","img_er","showPrompt","showPromptTransfer","UnstakeSelected","_UnstakeSelected","_callee28","_context28","ClaimThem","ClaimSelected","_ClaimSelected","_callee29","_context29","BackToCollection","_BackToCollection","_callee30","_context30","_x44","_ClaimThem","_callee31","_DivContainer","children","elements","child","tkIDs","nft","_context31","getElementsByTagName","checked","StakeAll","_StakeAll","_callee33","_isNFTAppr","address","_context33","nftApproveAll","isWhitelist","stake","stakeAny","StakeThem","_StakeThem","_callee34","_DivContainer2","_context34","_refreshDAppView","_callee35","_context35","_x49","_nftApproveAll","_callee36","_nftcontract","_context36","isApprovedForAll","setApprovalForAll","_x50","_isWhitelist","_callee37","_res","_context37","_x51","_ShowNFTError","_callee38","msgValue","curDiv","chk","lbl","objNFT","_context38","_showCover","_callee39","coverDiv","_context39","body","overflowY","append","SendNFT","_x52","_x53","_x54","_SendNFT","_callee40","nftAdd","destiAdd","_context40","safeTransferFrom","NitroAdd","_NitroAdd","_callee41","_DivContainer3","_nitroId","_context41","gasLimit","stakeNitro","_hideCover","_callee42","_context42","_x55","_x56","_showPromptTransfer","_callee43","text","callback","_nft","form","container","h6NFTAddy","txAdd","h6Caption","x","complete","_context43","onkeydown","placeholder","onsubmit","cancel","e","_x57","_x58","_showPrompt","_callee46","lastClass","_loop3","_context46","_callee45","nitCard","nitTable","nitTR","nitTD1","nitchk","nitlbl","nitTD2","nitAtt1","nitAtt2","nitAtt3","_context45","NitroMint","_x59","_NitroMint","_callee47","pID","totalCost","totalCostWei","_token","_tokencontract","_allow_int","_allow","_txRejected","apprAmt","_gasLimit","_cost","_totalCost","_context47","getNitroPrice","toWei","getCryptotoken","allowance","parseInt","MAX_SAFE_INTEGER","approve","on","error","receipt","catch","mint","to","confirmationNumber","cost","BtnSelected","_x60","_BtnSelected","_callee48","amt","_context48","react_default","a","fontFamily","fontWeight","fontSize","href","src","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","ButtonGroup","size","boxShadow","Button","onClick","role","alt","Tabs","defaultActiveKey","Tab","eventKey","title","onChange","selected","borderRadius","marginLeft","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.3ed0e6b9.chunk.js","sourcesContent":["import './App.css';\nimport { Button, ButtonGroup} from 'react-bootstrap';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component } from 'react'; \n\nimport 'sf-font'; \nimport Web3 from 'web3';\n//import { walletconnect } from 'web3modal/dist/providers/connectors';\n \n\nconst $ = window.$;\n\nvar tx_pending = false;\n\nvar CONFIG = null;\nvar ABI = null;\nvar account = null;\nvar nftcontract = null;\n\nvar defSymbol = null;\nvar totalGasLimit = null;\n\nvar walletBalanceAPI = null;\nvar scannerAPI = null;\nvar balanceAPI = null;\nvar resultAPICall = null;\nvar CONFIGWhitelist = null;\n\nvar nitroBCH;\nvar nftName = null;\n\nvar stakingnftcontract = null;\nvar rewardcontract = null;\nvar nitrocontract = null;\nvar nftlevelcontract = null;\n\nvar nitroBCHcontract = null;\nvar nitroBCH_address = null;\n\nvar stakingnft_address = null;\nvar nitroboost_address = null;\n\nvar scannercontract = null; \nvar scanneraddress = null; \n \nvar short_acct;\n\nvar web3 = null; \n\nvar rewardInDetail = false;\nvar vaultSelected = null;\n\nvar amtNitro = 0;\n\nvar isLoading = false;\nvar isRendering = false; \n\nvar userStakes = new Array();\nvar isWalletConnected;\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      width: window.innerWidth,\n    };\n\n  }\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n  handleWindowSizeChange = () => {\n    this.setState({ width: window.innerWidth });\n  };\n\n  /* componentDidUpdate(){ \n\n  } */\n  \n \n  render() {\n    const { width } = this.state;\n    const isMobile = width <= 900;\n\n    let nftcost = '';\n  \n    const sleep = (milliseconds) => {\n      return new Promise(resolve => setTimeout(resolve, milliseconds))\n    }\n  \n    function delay() { \n      return new Promise(resolve => setTimeout(resolve, 300));\n    }\n \n    async function connectwallet() {\n      try {\n        if (window.ethereum) {\n\n          const configResponse = await fetch(\"/config/config.json\", {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n          });\n          CONFIG = await configResponse.json();\n\n          web3 = new Web3(window.ethereum);\n\n\n          await window.ethereum.send('eth_requestAccounts');\n          var accounts = await web3.eth.getAccounts();\n          account = accounts[0];\n\n          const networkId = await window.ethereum.request({\n            method: \"net_version\",\n          });\n\n          if ((networkId == CONFIG.MAINNET.ID) || (networkId == CONFIG.TESTNET.ID)) {\n\n            const abiResponse = await fetch(\"/config/abi.json\", {\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\",\n              },\n            });\n            ABI = await abiResponse.json();\n\n            var abiWhitelist = null;\n            //nitroBCH = CONFIG.NitroBCH.PRICE;\n            //console.log(\"nitroBCH\", nitroBCH);\n\n            if (networkId == CONFIG.MAINNET.ID) {\n              defSymbol = CONFIG.MAINNET.SYMBOL;\n              totalGasLimit = CONFIG.MAINNET.GAS_LIMIT;\n              scannerAPI = CONFIG.MAINNET.API;\n              balanceAPI = CONFIG.MAINNET.BALANCE;\n              walletBalanceAPI = CONFIG.MAINNET.WALLET;\n              rewardcontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, CONFIG.MAINDAPP.TOKENREWARD);\n              stakingnftcontract = await ABIFetch(web3, ABI.STAKING.ABI, CONFIG.MAINDAPP.STAKING);\n              nitrocontract = await ABIFetch(web3, ABI.NITROBOOST.ABI, CONFIG.MAINDAPP.NITROBOOST);\n              nftlevelcontract = await ABIFetch(web3, ABI.RUSHLEVEL.ABI, CONFIG.MAINDAPP.LEVELING);\n              scannercontract =  await ABIFetch(web3, ABI.SCANNER.ABI, CONFIG.MAINDAPP.SCANNER);\n\n              nitroBCHcontract =  await ABIFetch(web3, ABI.NITROBCH.ABI, CONFIG.MAINDAPP.NITROBCH);\n              nitroBCH_address = CONFIG.MAINDAPP.NITROBCH;\n\n              stakingnft_address = CONFIG.MAINDAPP.STAKING;\n              nitroboost_address = CONFIG.MAINDAPP.NITROBOOST;  \n              scanneraddress = CONFIG.MAINDAPP.SCANNER;\n\n              abiWhitelist = await fetch(\"/config/whitelisted.json\", {\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Accept: \"application/json\",\n                },\n              });\n              CONFIGWhitelist = await abiWhitelist.json();\n\n            }\n            else if (networkId == CONFIG.TESTNET.ID) {  \n              defSymbol = CONFIG.TESTNET.SYMBOL;\n              totalGasLimit = CONFIG.TESTNET.GAS_LIMIT;\n              scannerAPI = CONFIG.TESTNET.API;\n              balanceAPI = CONFIG.TESTNET.BALANCE;\n              walletBalanceAPI = CONFIG.TESTNET.WALLET;\n              rewardcontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, CONFIG.TESTDAPP.TOKENREWARD);\n              stakingnftcontract = await ABIFetch(web3, ABI.STAKING.ABI, CONFIG.TESTDAPP.STAKING);\n              nitrocontract = await ABIFetch(web3, ABI.NITROBOOST.ABI, CONFIG.TESTDAPP.NITROBOOST);\n              nftlevelcontract = await ABIFetch(web3, ABI.RUSHLEVEL.ABI, CONFIG.TESTDAPP.LEVELING);\n              scannercontract =  await ABIFetch(web3, ABI.SCANNER.ABI, CONFIG.TESTDAPP.SCANNER);\n \n              nitroBCHcontract =  await ABIFetch(web3, ABI.NITROBCH.ABI, CONFIG.TESTDAPP.NITROBCH);\n              nitroBCH_address = CONFIG.TESTDAPP.NITROBCH;\n\n              stakingnft_address = CONFIG.TESTDAPP.STAKING;\n              nitroboost_address = CONFIG.TESTDAPP.NITROBOOST;\n              scanneraddress = CONFIG.TESTDAPP.SCANNER;\n\n              abiWhitelist = await fetch(\"/config/testwhitelisted.json\", {\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Accept: \"application/json\",\n                },\n              });\n              CONFIGWhitelist = await abiWhitelist.json();\n\n            }\n\n            onGoingNotif(\"\");\n\n            var sWallBal = document.getElementById(\"wallBal\");\n            sWallBal.style.width = \"100px\";\n            sWallBal.innerHTML = await WalletBalance(account);\n\n            resultAPICall = await APICall(account, scannerAPI); \n\n            await listNFTFilter(resultAPICall); \n\n            document.getElementById('unstaked-nft-container').innerHTML=\"\";\n            const DivContainer = document.getElementById('staked-nft-container');\n            DivContainer.innerHTML = \"\"; \n\n            await LoadVaults('staked-nft-container'); \n\n\n            var timer = setInterval(function () {\n              if (tx_pending==false){ \n                CheckRewards();\n              }\n            }, 5000);\n            await LoadVaultInfo();\n\n            //localStorage.setItem('isWalletConnected', true);\n            isWalletConnected = true;\n          }\n\n          else {\n            var z = window.confirm(\"Wrong network!\");\n          }\n\n        }\n      }\n      catch (ex) {\n        console.log('connectwallet - SeeError - ' + ex);\n        isWalletConnected = false;\n      }\n    }\n\n    async function VaultRewardToken(delegate){\n      var vaultrewarder = await ABIFetch(web3, ABI.REWARDER.ABI, delegate); \n      var rewardToken = await vaultrewarder.methods.rewardToken().call(); \n      var _rewardcontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, rewardToken);\n      return _rewardcontract;\n    }\n\n    async function LoadVaultInfo(){\n      try{\n        var tbl = document.getElementById('tblvaultInfo');\n        tbl.innerHTML=\"\";\n\n        var thd = document.createElement('thead');\n        thd.className = \"thead-light\";\n        tbl.appendChild(thd);\n\n        var _tr = document.createElement('tr');\n        var _th1 = document.createElement('th');\n        _th1.scope = 'col';\n        _th1.innerHTML = 'Collection';\n        _tr.appendChild(_th1)\n\n        var _th2 = document.createElement('th');\n        _th2.scope = 'col';\n        _th2.innerHTML = 'Rewards Per Day';\n        _tr.appendChild(_th2)\n\n        thd.appendChild(_tr);\n\n        var counter_vault = 0;\n\n        var _tbody = document.createElement('tbody');\n        var _vault = await stakingnftcontract.methods.Vault(counter_vault).call();\n        while (_vault.active) { \n          var _rewardcontract;\n          if (_vault.delegate != stakingnft_address){\n            _rewardcontract = await VaultRewardToken(_vault.delegate); \n          }\n          else{\n            _rewardcontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, _vault.tokenReward);\n          }\n          var _rewardSymbol = await _rewardcontract.methods.symbol().call(); \n\n          var _tbody_tr = document.createElement('tr');\n\n          var _tbody_td1 = document.createElement('td');\n  \n          var short_vault = (_vault.vaultName.length > 20 ? _vault.vaultName.substring(0, 20) + \"...\" : _vault.vaultName);\n          _tbody_td1.innerHTML = short_vault;  \n          _tbody_tr.appendChild(_tbody_td1);\n\n          var _tbody_td2 = document.createElement('td');\n          _tbody_td2.class='amount'; \n \n          if (_vault.reqBooster == false){ \n            _tbody_td1.className=\"textGlow\";  \n            _tbody_td2.className=\"textGlow\";  \n          }\n\n          var _span1 = document.createElement('span');\n          _span1.class = \"amount\";\n          _span1.innerHTML=Web3.utils.fromWei(_vault.rewardRate) + \" \";\n\n          var _span2 = document.createElement('span');\n          _span2.class = \"currency\";\n          _span2.innerHTML = _rewardSymbol;\n\n          _tbody_td2.appendChild(_span1);\n          _tbody_td2.appendChild(_span2);\n\n          _tbody_tr.appendChild(_tbody_td2);\n\n          _tbody.appendChild(_tbody_tr);\n\n          counter_vault += 1;\n          var _vault = await stakingnftcontract.methods.Vault(counter_vault).call();\n\n        }    \n        tbl.appendChild(_tbody);\n      }\n      catch(ex){\n        console.log(ex);\n      } \n    }\n \n\n    async function RefreshCollection() {      \n      if (account==null){\n        return;\n      }\n      var nftCol = document.getElementById(\"nftFilter\").value;  \n      resultAPICall = await APICall(account, scannerAPI);\n      await listNFT(account, 'unstaked-nft-container', resultAPICall, nftCol);\n    }\n\n    async function APICall(account, API) {\n      var theURL = API + \"=\" + account;\n      var apiResponse = await fetch(theURL);\n      var jsonParsedContents = await apiResponse.json();\n\n      return jsonParsedContents;\n    }\n\n    async function APIBalanceCall(_account, _CA, API) {\n      var theURL = API.replace('@CONTRACTADDRESS', _CA).replace('@ACCOUNT', _account);\n      var apiResponse = await fetch(theURL);\n      var jsonParsedContents = await apiResponse.json();\n\n      return jsonParsedContents;\n    }\n\n    async function WalletBalance(_account) {\n      var theURL = walletBalanceAPI.replace('@ACCOUNT', _account);\n      var apiResponse = await fetch(theURL);\n      var jsonParsedContents = await apiResponse.json();\n\n      var earnedrwd = Web3.utils.fromWei(jsonParsedContents.result);\n      var rewards = Number(earnedrwd).toFixed(3);\n\n      return '  ' + rewards + ' ' + defSymbol;\n    }\n\n    async function claimVault(_vaultId) {\n      try {\n        await onGoingNotif(\"Pending...\"); \n        var _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n\n        var _tkIDs = [];\n\n        var nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _vault.nftAddress);        \n        var balanceOfOwner = await nftcontract.methods.balanceOf(stakingnft_address).call(); \n        //console.log(\"balanceOfOwner\", balanceOfOwner);\n\n        for (let j = 0; j < balanceOfOwner; j++) {\n          var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(stakingnft_address, j).call();\n          var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n          if (_nftStakeInfo.owner == account) { \n            _tkIDs.push(_tkID);\n          }\n\n          if (_tkIDs.length == userStakes[_vaultId][0]){\n            break;\n          }\n\n          //console.log(\"_tkIDs\", _tkIDs);\n        }\n  \n        await stakingnftcontract.methods.claim(_vaultId, _tkIDs).send({ from: account });\n        await refreshDAppView();\n\n      }\n      catch (ex) {\n        console.log('claimVault');\n        console.log(ex);\n      }\n      await onGoingNotif(\"\"); \n    } \n\n    async function modifyVault(_vaultId, _vaultContract) {\n      try {\n        await UnstakeMenuControl(true, true, true);\n\n        var tab_container = \"staked-nft-container\";\n        document.getElementById('staked-nft-container').innerHTML = \"\";\n \n        rewardInDetail = true;\n\n        vaultSelected = await scannercontract.methods.getVaultAddress(_vaultId).call();\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, vaultSelected);\n        await renderNFT(tab_container, nftcontract, vaultSelected, account, true);\n \n      }\n      catch (ex) {\n        console.log(ex);\n      }\n    }\n\n\n    async function onGoingNotif(msg) {\n      var btnConnect = document.getElementById('btnConnect');\n      if (msg == \"\") {\n        try {\n          hideCover();\n          tx_pending=false;\n        }\n        catch (ex) {\n        }\n\n        short_acct = account.substring(0, 6) + \"....\" + account.substring(account.length - 4, account.length);\n        var img = document.createElement('img');\n        img.className = \"ml-3\";\n        img.setAttribute(\"src\", 'chef.svg'); \n        btnConnect.innerHTML = short_acct;\n        btnConnect.appendChild(img);\n      }\n      else {\n        showCover();\n        btnConnect.innerHTML = \"\";\n        btnConnect.innerHTML = msg; \n      }\n    }\n\n    async function unstakeVault(_vaultId) {\n      try {\n        await onGoingNotif(\"Pending...\");\n\n        var _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n\n        var _tkIDs = [];\n        resultAPICall = await APIBalanceCall(stakingnft_address, _vault.nftAddress, balanceAPI);\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _vault.nftAddress);\n\n        for (let i = 0; i < resultAPICall.result; i++) {\n          var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(stakingnft_address, i).call();\n          var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n          if (_nftStakeInfo.owner == account) {\n            _tkIDs.push(_tkID);\n          }\n        }\n        await stakingnftcontract.methods.unstake(_vaultId, _tkIDs).send({ from: account });\n        await refreshDAppView();\n      }\n      catch (ex) {\n        console.log('unstakeVault');\n        console.log(ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function GetNFTLevel(_vaultId, _tkID){   \n      try{\n        var nftLevel = await nftlevelcontract.methods.getNFTLevel(_vaultId, _tkID).call(); \n        if (nftLevel != \"undefined\") {\n          return `Lv ${nftLevel}`;\n        }         \n      } \n      catch(ex){\n        return \"\";\n      }     \n    }\n\n    async function CheckRewards() {\n      /* if (isWalletConnected == false){\n        await connectwallet();\n      } */\n      if (isLoading || isRendering) {\n        return;\n      }\n      isLoading = true;\n\n      var _stakeVaults = new Array();\n      var _vaultId;\n      var _symbol = await rewardcontract.methods.symbol().call();\n\n      try {\n        var btnConnect = document.getElementById('btnConnect');\n        if (!btnConnect.innerHTML.includes(short_acct)) {\n          return;\n        }\n        var sWallBal = document.getElementById(\"wallBal\");\n        sWallBal.innerHTML = await WalletBalance(account);\n \n        var totalVaults = await scannercontract.methods.getTotalVault().call();\n\n        if (rewardInDetail == false) {\n\n          for (let i = 0; i < totalVaults; i++) {\n            //console.log(\"totalGasLimit\", totalGasLimit)\n            var isAcctHasStakeOnVault = await scannercontract.methods.isAcctHasStakeOnVault(account, i).call(); //({gasLimit: String(totalGasLimit)});\n            if (isAcctHasStakeOnVault) {\n              _stakeVaults.push(i); \n            }\n          }\n\n          for (let i = 0; i < _stakeVaults.length; i++) {\n            _vaultId = _stakeVaults[i];  \n            var contractAdress = await scannercontract.methods.getVaultAddress(_vaultId).call();  \n\n            var divPend = document.getElementById(\"Pending\" + contractAdress);\n            var _pendingRewards = 0;\n\n            if (divPend != null) {\n              var result = await stakingnftcontract.methods.pendingRewardByAccount(_vaultId, account).call();\n              const { 0: _pend, 1: _stakeCount } = result;\n\n              userStakes.push([_vaultId, _stakeCount]);\n              //console.log(\"userStakes\", userStakes);\n\n              var earned = String(_pend).split(\",\")[0];\n              var earnedrwd = Web3.utils.fromWei(earned);\n              _pendingRewards = Number(earnedrwd).toFixed(2);\n\n              //Custom Reward Token\n              var _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n              if (_vault.delegate != stakingnft_address) {\n                var _rewardcontract = await VaultRewardToken(_vault.delegate);\n                _symbol = await _rewardcontract.methods.symbol().call();\n              }\n              divPend.innerHTML = `Total: ${_stakeCount} | <h6 class='pendingRewards'> Earn: ${_pendingRewards} ${_symbol} </h6>`;\n            }\n          }\n        }\n        else if (rewardInDetail == true) {\n          try { \n            _vaultId = await stakingnftcontract.methods.getVaultId(vaultSelected).call(); \n            _pendingRewards = 0; \n\n            //Custom Reward Token\n            var _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n            if (_vault.delegate != stakingnft_address) {\n              var _rewardcontract = await VaultRewardToken(_vault.delegate);\n              _symbol = await _rewardcontract.methods.symbol().call();\n            }\n\n            var tokenIds = await getTokenIDs(_vaultId, account);\n            for (var i = 0; i < tokenIds.length; i++) {\n              var _tkID = tokenIds[i];\n              var _pend = await stakingnftcontract.methods.pendingReward(_vaultId, _tkID).call();\n              var earned = String(_pend).split(\",\")[0];\n              var earnedrwd = Web3.utils.fromWei(earned);\n              var rewards = Number(earnedrwd).toFixed(4);\n              _pendingRewards = Number(rewards).toFixed(4);\n\n              //console.log(\"Earn: \" + _pendingRewards + \" \" + _symbol);\n\n              const objNFTPend = document.getElementById(\"att\" + _vaultId + _tkID);\n              objNFTPend.innerHTML = \"\";\n              objNFTPend.innerHTML = \"Earn: \" + _pendingRewards + \" \" + _symbol;\n\n\n              var nftLevel = await GetNFTLevel(_vaultId, _tkID);\n              const objNFTLvl = document.getElementById(\"lvl\" + _vaultId + _tkID);\n              objNFTLvl.innerHTML = \"\";\n              objNFTLvl.innerHTML = nftLevel;\n\n              var _nitroStakeRemaining;\n              try {\n                const result = await stakingnftcontract.methods.nitroStakeRemaining(_vaultId, _tkID).call();\n\n                const { 0: nitroID, 1: limit, 2: remain } = result;\n                _nitroStakeRemaining = remain;\n\n                var _nitroEquipped;\n                var _multipower;\n                var _powerFloat;\n                var nftLvlBonus;\n                var _lvlFloat;\n\n                _nitroEquipped = await stakingnftcontract.methods.getEquippedNitro(_vaultId, _tkID).call();\n                if (_nitroEquipped > 0) {\n                  _multipower = await stakingnftcontract.methods.getNitroPower(_vaultId, _nitroEquipped).call();\n                  _powerFloat = parseFloat(_multipower + '.00') / 100;\n                  nftLvlBonus = await nftlevelcontract.methods.getLevelBonus(_vaultId, _tkID).call();\n                  _lvlFloat = parseFloat(nftLvlBonus + '.00') / 100;\n                  _powerFloat = _powerFloat * _lvlFloat;\n \n                  if (_nitroStakeRemaining > 0) {\n                    var _glowNum = await nitrocontract.methods.getRareType(nitroID).call();\n\n                    var inSec = (_nitroStakeRemaining / 86400) * 24 * 60 * 60;\n\n                    var seconds = Number(inSec);\n                    var d = Math.floor(seconds / (3600 * 24));\n                    var h = Math.floor(seconds % (3600 * 24) / 3600);\n                    var m = Math.floor(seconds % 3600 / 60);\n                    var s = Math.floor(seconds % 60);\n\n                    var dDisplay = d > 0 ? d + (d == 1 ? \" day, \" : \" days, \") : \"\";\n                    var hDisplay = h > 0 ? h + (h == 1 ? \":\" : \":\") : \"\";\n                    var mDisplay = m > 0 ? m + (m == 1 ? \":\" : \":\") : \"\";\n                    var sDisplay = s > 0 ? s + (s == 1 ? \"\" : \"\") : \"\";\n                    var remainingBurn = dDisplay + hDisplay + mDisplay + sDisplay;\n \n                    document.getElementById(\"att2\" + _vaultId + _tkID).innerHTML = \"<span class='font-awesome-icons rocket'></span> \" + remainingBurn + ' left'\n                      + '</br> x' + _powerFloat.toFixed(2);\n                    document.getElementById(\"nft\" + _vaultId + \"|\" + _tkID).className = \"nftCard Equipped\" + _glowNum;\n\n                  }\n                  else {\n                    document.getElementById(\"att2\" + _vaultId + _tkID).innerHTML = 'x' + _powerFloat.toFixed(2);\n                  } \n                }\n              }\n              catch (ex3) {\n                console.log(\"Error in RewardInquiry - Detailed: \", ex3);\n              }\n            }\n          }\n          catch (ex2) {\n            console.log(ex2);\n          }\n        }\n      }\n      catch(ex1){\n        console.log(ex1);\n      }\n      isLoading = false; \n    }\n \n    async function UnstakeMenuControl(btnBack, btnClaim, btnUnstake) {\n      var _btnBack = document.getElementById(\"btnBack\");\n      var _btnClaim = document.getElementById(\"btnClaimSelected\");\n      var _btnUnstake = document.getElementById(\"btnUnstakeSelected\");\n\n      if ((btnBack == false) && (btnClaim == false) && (btnUnstake == false)) {\n        document.getElementById(\"btnUnstakeMenu\").style.display = \"none\";\n      }\n      else {\n        document.getElementById(\"btnUnstakeMenu\").style.display = \"\";\n      }\n\n      if (btnBack == false) {\n        _btnBack.setAttribute(\"disabled\", \"disabled\");\n        _btnBack.classList.add(\"disabled\");\n      }\n      else {\n        _btnBack.removeAttribute('disabled');\n        _btnBack.classList.remove(\"disabled\");\n      }\n\n      if (btnClaim == false) {\n        _btnClaim.setAttribute(\"disabled\", \"disabled\");\n        _btnClaim.classList.add(\"disabled\");\n      }\n      else {\n        _btnClaim.removeAttribute('disabled');\n        _btnClaim.classList.remove(\"disabled\");\n      }\n\n      if (btnUnstake == false) {\n        _btnUnstake.setAttribute(\"disabled\", \"disabled\");\n        _btnUnstake.classList.add(\"disabled\");\n      }\n      else {\n        _btnUnstake.removeAttribute('disabled');\n        _btnUnstake.classList.remove(\"disabled\");\n      }\n    }\n  \n    async function getTokenIDs(_vaultId, _account) {\n      var tokenIds = await scannercontract.methods.getStakeInVaultAccount(_vaultId, _account).call();\n      //console.log(\"debug\");\n      var tkns = new Array();\n      for (let j = 0; j < tokenIds.length; j++) {\n        if (tokenIds[j] > 0) {\n          tkns.push(tokenIds[j]);\n        }\n      }\n      return tkns;\n    }\n  \n    async function LoadVaults(tab_container){\n      if (account == null) {\n        return;\n      }\n      if(isRendering){\n        return;\n      }\n      isRendering = true;\n      onGoingNotif(\"Rendering NFTs...\");\n \n      await UnstakeMenuControl(false, false, false);\n\n      const DivContainer = document.getElementById(tab_container);\n      DivContainer.innerHTML = \"\";\n\n      if (width < 830) {\n        DivContainer.className = \"nft_card_view1\";\n      }\n      else if (width>=830 && width<1000){\n        DivContainer.className = \"nft_card_view2\";\n      }\n      else if (width>=1000 && width<1300){\n        DivContainer.className = \"nft_card_view3\";\n      }\n      else if(width>=1300){\n        DivContainer.className = \"nft_card_view4\";\n      }\n\n      var _vaultId;\n      var tokenIds;\n      var totalVaults = await scannercontract.methods.getTotalVault().call();\n      var isAcctHasStakeOnVault;\n      var _stakeVaults = new Array();\n      var contractAdress;\n      var usrCurrVault;\n      var _vaultContract;\n\n      for (let i=0; i<totalVaults; i++){\n        isAcctHasStakeOnVault = await scannercontract.methods.isAcctHasStakeOnVault(account, i).call();\n        if (isAcctHasStakeOnVault){\n          _stakeVaults.push(i);\n          usrCurrVault = i;\n        }\n      }\n      //console.log(\"_stakeVaults\", _stakeVaults);\n \n \n      if (_stakeVaults.length==1){\n        rewardInDetail = true;\n        _vaultContract = await scannercontract.methods.getVaultAddress(usrCurrVault).call();\n\n        await modifyVault(usrCurrVault, _vaultContract);\n      }\n      else{\n        for (let i=0; i<_stakeVaults.length; i++){\n          _vaultId = _stakeVaults[i];\n            var _vaultInfo = await stakingnftcontract.methods.Vault(_vaultId).call();\n\n          if (_vaultInfo.active) {\n            contractAdress = _vaultInfo.nftAddress;\n            nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, contractAdress);\n            var nftName = await nftcontract.methods.name().call();\n\n            tokenIds = await getTokenIDs(_vaultId, account);\n\n            var _tkID = 0;\n            for (var j = 0; j < tokenIds.length; j++) {\n              _tkID = tokenIds[j];\n              if (_tkID == 0) {\n                continue;\n              }\n\n              let tokenMetadataURI = await nftcontract.methods.tokenURI(_tkID).call();\n              if (tokenMetadataURI.startsWith(\"ipfs://\")) {\n                tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI.split(\"ipfs://\")[1]}`;\n              }\n              else if (tokenMetadataURI.startsWith(\"https://gateway.pinata.cloud/ipfs/\")) {\n                tokenMetadataURI = tokenMetadataURI.replace(`https://gateway.pinata.cloud/ipfs/`, ``);\n                tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI}${1}`;\n              }\n              var tokenMetadata = await fetch(tokenMetadataURI).then((response) => response.json());\n\n              (async function () {\n                const cardVault = document.createElement('div');\n                cardVault.className = \"vault_container\";\n                cardVault.id = contractAdress;\n                cardVault.value = _vaultId;\n\n                const cardVaultCard = document.createElement('div');\n                cardVaultCard.className = \"vault_card\";\n                if (isMobile) {\n                  cardVaultCard.className = \"vault_card-mobile\";\n                }\n\n                const cardVaultFront = document.createElement('div');\n                cardVaultFront.className = \"vault_front parent\";\n                if (isMobile) {\n                  cardVaultFront.className = \"vault_front-mobile parent\";\n                }\n\n                var imgNFT\n                if (tokenMetadata[\"image\"].includes(\"mp4\")) {\n                  imgNFT = document.createElement('video');\n\n                  const vid_source = document.createElement(\"source\");\n\n                  if (tokenMetadata[\"image\"].startsWith(\"ipfs://\")) {\n                    vid_source.setAttribute(\"src\", `https://ipfs.io/ipfs/${tokenMetadata[\"image\"].split(\"ipfs://\")[1]}`);\n                  }\n                  else {\n                    vid_source.setAttribute(\"src\", tokenMetadata[\"image\"]);\n                  }\n                  vid_source.setAttribute(\"type\", \"video/mp4\");\n                  imgNFT.appendChild(vid_source);\n                }\n                else {\n                  imgNFT = document.createElement('img');\n                  imgNFT.setAttribute(\"src\", '.\\loading.gif');\n\n                  var img_src = tokenMetadata[\"image\"];\n                  imgNFT.setAttribute(\"src\", img_src);\n                }\n                imgNFT.setAttribute(\"alt\", contractAdress);\n\n                const cardVaultDetails = document.createElement('div');\n                cardVaultDetails.className = \"vault_details\";\n\n                const cardH4 = document.createElement('h5');\n                cardH4.style.color = \"white\";\n                cardH4.className = \"VaultName\";\n                cardH4.innerHTML = (nftName.length > 15 ? nftName.substring(0, 10) + \"...\" : nftName) + \" Vault\";\n\n                const cardSpan = document.createElement('span');\n                cardSpan.className = \"spanX\"\n                cardSpan.id = \"Pending\" + contractAdress;\n                cardSpan.style.color = \"white\";\n                cardSpan.innerHTML = \"\";\n\n                cardVaultDetails.appendChild(cardH4);\n                cardVaultDetails.appendChild(cardSpan);\n\n                cardVaultFront.appendChild(imgNFT);\n                cardVaultFront.appendChild(cardVaultDetails);\n\n                const cardVaultBack = document.createElement('div');\n                cardVaultBack.className = \"vault_back\";\n\n                var _tbl = document.createElement('table');\n                var _tr = document.createElement('tr');\n                _tbl.appendChild(_tr);\n\n                var _attrdiv = document.createElement('div');\n                var nft_dtl = document.createElement('h6');\n                var _nftName = await nftcontract.methods.name().call();\n                var _symbl = await nftcontract.methods.symbol().call();\n                var _supply = await nftcontract.methods.totalSupply().call();\n                nft_dtl.innerHTML = \"Name: \" + _nftName + '</br>Symbol: ' + _symbl + '</br>Total Supply: ' + _supply;\n                _attrdiv.appendChild(nft_dtl);\n                _tbl.appendChild(_attrdiv);\n\n                var _tr2 = document.createElement('tr');\n                _tr2.className = \"vault_back_att\";\n\n                const cardButtonClaim = document.createElement('a');\n                cardButtonClaim.style.color = \"white\";\n                cardButtonClaim.innerHTML = \"Claim All \";\n                cardButtonClaim.className = \"back_attr\";\n                cardButtonClaim.onclick = function () { claimVault(cardVault.value); }\n\n                const cardButtonUnstake = document.createElement('a');\n                cardButtonUnstake.style.color = \"white\";\n                cardButtonUnstake.innerHTML = \"Unstake All \";\n                cardButtonUnstake.className = \"back_attr\";\n                cardButtonUnstake.onclick = function () { unstakeVault(cardVault.value); }\n\n                const cardButtonModify = document.createElement('a');\n                cardButtonModify.style.color = \"white\";\n                cardButtonModify.innerHTML = \"Modify\";\n                cardButtonModify.className = \"back_attr\";\n                cardButtonModify.onclick = function () { modifyVault(cardVault.value, cardVault.id); }\n\n                _tr2.appendChild(cardButtonClaim);\n                _tr2.appendChild(cardButtonUnstake);\n                _tr2.appendChild(cardButtonModify);\n\n                _tbl.appendChild(_tr2);\n                cardVaultBack.appendChild(_tbl);\n \n                cardVaultCard.appendChild(cardVaultFront);\n                cardVaultCard.appendChild(cardVaultBack);\n\n                cardVault.appendChild(cardVaultCard);\n\n                DivContainer.appendChild(cardVault);\n              })(); \n              break; \n            }\n          }\n        }\n      } \n      isRendering = false;\n      onGoingNotif(\"\"); \n    }\n \n    async function listNFT(_account, tab_container, jsonParsedContents, filterList) {\n      try {\n        var userNFTHold = 0;\n        var btnStakeAll = document.getElementById(\"btnStakeAll\");\n        var btnStakeSelected = document.getElementById(\"btnStakeSelected\");\n\n        document.getElementById(tab_container).innerHTML = \"\"; \n\n        if (filterList == \"All\" || filterList == \"All Owned NFT\") {\n          btnStakeAll.setAttribute('disabled', 'disabled');\n          btnStakeSelected.setAttribute('disabled', 'disabled');\n\n          //Populate List NFT \n          if (jsonParsedContents != null) {  \n            for (var key in CONFIGWhitelist.NFT) {\n              for (let i = 0; i < jsonParsedContents.result.length; i++) { \n\n                if (jsonParsedContents.result[i].type == \"ERC-721\") {\n                  if (CONFIGWhitelist.NFT[key].ADDRESS == jsonParsedContents.result[i].contractAddress) {\n                    nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, jsonParsedContents.result[i].contractAddress);\n                    userNFTHold = userNFTHold + (await renderNFT(tab_container, nftcontract, jsonParsedContents.result[i].contractAddress, _account));  //myHoldNFT\n                    break;\n                  }\n                }\n              }\n            }\n\n            //All other ERC-721\n            var ctr;\n            for (let i = 0; i < jsonParsedContents.result.length; i++) {\n                if (jsonParsedContents.result[i].type == \"ERC-721\" && nitroboost_address.toUpperCase() != jsonParsedContents.result[i].contractAddress.toUpperCase()) {\n                ctr = 0;\n                for (var key in CONFIGWhitelist.NFT) {\n                  if (CONFIGWhitelist.NFT[key].ADDRESS != jsonParsedContents.result[i].contractAddress) {\n                    ctr++;\n                  }\n                }\n                if (ctr >= CONFIGWhitelist.NFT.length) {\n                  nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, jsonParsedContents.result[i].contractAddress);  \n                  userNFTHold = userNFTHold + (await renderNFT(tab_container, nftcontract, jsonParsedContents.result[i].contractAddress, _account));  //myHoldNFT\n                }\n              }\n            }\n          }\n        }\n        else {\n          nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, filterList); \n          userNFTHold = userNFTHold + (await renderNFT(tab_container, nftcontract, filterList, _account));   \n          btnStakeAll.removeAttribute('disabled');\n          btnStakeSelected.removeAttribute('disabled');\n        }\n\n        if (userNFTHold == 0) {\n          ShowNFTError(\"NO NFT SCANNED.\");\n        }\n      }\n\n      catch (ex) {\n        console.log('listNFT - SeeError - ' + ex);\n        ShowNFTError(ex);\n      }\n    }\n\n    async function ABIFetch(web3, _abi, _address) {\n      var _contract;\n      var ABIResponse;\n\n      ABIResponse = await fetch(_abi, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      });\n      const ABIJSON = await ABIResponse.json();\n      _contract = new web3.eth.Contract(ABIJSON, _address);\n      return _contract;\n    }\n\n    async function listNFTFilter(jsonParsedContents) {\n      var lstNFT = document.getElementById(\"nftFilter\");\n      lstNFT.innerHTML = \"\";\n\n      for (let i = 0; i < jsonParsedContents.result.length; i++) {\n        if (i == 0) {\n          var z_1 = document.createElement(\"option\");\n          z_1.setAttribute(\"value\", \"All\");\n          var t_1 = document.createTextNode(\"All Owned NFT\");\n\n          z_1.appendChild(t_1);\n          lstNFT.appendChild(z_1);\n        }\n\n        if (jsonParsedContents.result[i].type == \"ERC-721\" && jsonParsedContents.result[i].balance > 0 && nitroboost_address.toUpperCase() != jsonParsedContents.result[i].contractAddress.toUpperCase()) {\n          var z = document.createElement(\"option\");\n          z.setAttribute(\"value\", jsonParsedContents.result[i].contractAddress);\n\n          var t = document.createTextNode(jsonParsedContents.result[i].name + \": \" + jsonParsedContents.result[i].balance);\n          z.appendChild(t);\n\n          lstNFT.appendChild(z);\n        } \n      }\n    }\n\n    async function fetchNFTImage(nftcontract, _account, tkID, _caller) {\n      var tokenMetadata = null;\n      var tokenMetadataURI;\n      try {\n        tokenMetadataURI = await nftcontract.methods.tokenURI(tkID).call();  \n\n        if (tokenMetadataURI.startsWith(\"ipfs://\")) {\n          tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI.split(\"ipfs://\")[1]}`;\n        }\n        else if (tokenMetadataURI.startsWith(\"https://gateway.pinata.cloud/ipfs/\")) {\n          tokenMetadataURI = tokenMetadataURI.replace(`https://gateway.pinata.cloud/ipfs/`, ``);\n          tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI}${tkID}`;\n        }\n \n \n        //tokenMetadata = await fetch(tokenMetadataURI).then((response) => response.json());\n        if (await isImgUrl(tokenMetadataURI)){ \n          tokenMetadata = await loadDefaultURI(); \n          tokenMetadata[\"image\"] = tokenMetadata[\"image\"].replace(tokenMetadata[\"image\"], tokenMetadataURI); \n        }\n        else{\n          tokenMetadata = await fetch(tokenMetadataURI).then((response) => response.json());\n        }\n\n      }\n      catch (ex) {\n        //var uri = \"https://raw.githubusercontent.com/cryptobugnft/nitro/main/tank/InvalidURI.json\";\n        tokenMetadata = await loadDefaultURI(); //fetch(uri).then((response) => response.json());\n        console.log('Caller - ' + _caller, ex);\n      } \n      return tokenMetadata; \n    }\n\n    async function loadDefaultURI(){\n      var uri = \"https://raw.githubusercontent.com/cryptobugnft/nitro/main/tank/InvalidURI.json\";\n      return await fetch(uri).then((response) => response.json());\n    }\n\n    async function isImgUrl(url) {\n      return fetch(url, {method: 'HEAD'}).then(res => {\n        return res.headers.get('Content-Type').startsWith('image')\n      })\n    }\n  \n    async function renderNFT(tab_container, nftcontract, contractAdress, _account, isStaked){\n      var nftName = await nftcontract.methods.name().call();\n      var balanceOfOwner;  \n\n      var tokenIds;\n      if (isStaked){        \n        var _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n        tokenIds = await getTokenIDs(_vaultId, _account); \n        balanceOfOwner = tokenIds.length;\n      }\n      else{\n        balanceOfOwner = await nftcontract.methods.balanceOf(_account).call();  \n      }\n\n      var nftContainer = document.getElementById(tab_container); \n      var nftCard;\n        var nftTable;\n      var nftMedia;\n        var nftTD;\n          var nftLvl;\n          var nftChk;\n          var nftLbl;\n          var nftImg;\n      var nftAtt;\n        var nftAttTD;\n          var nftTxt1;\n          var nftTxt2;\n          var nftBtn;\n          var nftTxt3;\n      try{\n\n        if (width>=400 && width<850){\n          nftContainer.className = \"nft_card_view2\";\n        }\n        else if (width>=850 && width<1000){\n          nftContainer.className = \"nft_card_view3\";\n        }\n        else if (width>=1000 && width<1300){\n          nftContainer.className = \"nft_card_view4\";\n        }\n        else if(width>=1300){\n          nftContainer.className = \"nft_card_view5\";\n        }\n\n        onGoingNotif(\"Loading...\");\n        for (let i = 0; i < balanceOfOwner; i++){\n          (async function (){\n            var tkID;\n\n            if (isStaked){\n              if (tokenIds[i]==0){\n                return;\n              }\n              tkID = tokenIds[i];\n            }\n            else{\n              tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, i).call();\n            }\n            \n            const tokenMetadata = await fetchNFTImage(nftcontract, _account, tkID, 'renderNFT');  \n            const _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n             \n\n            nftCard = document.createElement(\"div\");\n            nftCard.id = \"nft\" + _vaultId + \"|\" + tkID;\n            nftCard.className = \"nftCard\";\n\n            nftTable = document.createElement(\"TABLE\");\n            nftTable.setAttribute(\"id\", \"tbl\" + _vaultId + tkID);\n            nftCard.appendChild(nftTable);\n\n            nftMedia = document.createElement(\"TR\");\n            nftMedia.className = \"nftMedia\";\n            nftTable.appendChild(nftMedia);\n\n            nftTD = document.createElement(\"TD\");\n            nftTD.className = \"nftTD\";\n            nftMedia.appendChild(nftTD);\n\n            nftLvl = document.createElement('h6');\n            nftLvl.id = \"lvl\" + _vaultId + tkID;\n            nftLvl.className = \"nftLvl\";\n            nftLvl.innerHTML = \"\"\n            nftTD.appendChild(nftLvl);\n\n            nftChk = document.createElement(\"INPUT\");\n            nftChk.setAttribute(\"type\", \"checkbox\");\n            nftChk.id = contractAdress + \"_\" + tkID;\n            nftChk.className = \"nftChk\";\n            nftTD.appendChild(nftChk);\n \n            nftLbl = document.createElement(\"LABEL\");\n            nftLbl.className = \"parent\";\n            nftLbl.htmlFor = nftChk.id;\n            nftTD.appendChild(nftLbl);\n\n            if (tokenMetadata[\"image\"].includes(\"mp4\")) {\n              nftImg = document.createElement('video');\n              const vid_source = document.createElement(\"source\");\n              if (tokenMetadata[\"image\"].startsWith(\"ipfs://\")) {\n                vid_source.setAttribute(\"src\", `https://ipfs.io/ipfs/${tokenMetadata[\"image\"].split(\"ipfs://\")[1]}`);\n              }\n              else {\n                vid_source.setAttribute(\"src\", tokenMetadata[\"image\"]);\n              }\n              vid_source.setAttribute(\"type\", \"video/mp4\");\n              nftImg.appendChild(vid_source);\n            }\n            else {\n              try{\n                nftImg = document.createElement('img');\n                var _imgFix = tokenMetadata[\"image\"];\n                if (_imgFix.startsWith(\"ipfs://\")) {\n                  _imgFix = `https://ipfs.io/ipfs/${_imgFix.replace(\"ipfs://\", '')}`\n                }\n                else if (_imgFix.startsWith(\"https://cattos.mypinata.cloud/ipfs/\")) {\n                  _imgFix = _imgFix.replace(`https://cattos.mypinata.cloud/ipfs/`, `https://gateway.ipfs.io/ipfs/`);\n                }\n                nftImg.setAttribute(\"src\", _imgFix);\n              }\n              catch(img_er){\n                console.log(\"renderNFT:\", img_er);\n                nftImg.setAttribute(\"src\", \"hidden.jpg\");\n              }\n            }\n            nftImg.setAttribute(\"alt\", \"Error loading image\");\n            nftImg.className=\"nftImg\";\n            nftLbl.appendChild(nftImg);\n             \n            nftAtt = document.createElement(\"TR\");\n            nftAtt.className = \"nftAtt\";\n            nftTable.appendChild(nftAtt);\n\n            nftAttTD = document.createElement(\"TD\");\n            nftAttTD.className = \"nftAttTD\";\n            nftAtt.appendChild(nftAttTD);\n\n \n            nftTxt1 = document.createElement('h6');\n            nftTxt1.id = \"stk\" + _vaultId + tkID;\n            nftTxt1.className = \"nftTxt1\";\n            nftTxt1.innerHTML = (nftName.length > 20 ? nftName.substring(0, 20) : nftName) + ` #` + (tkID.length > 5 ? tkID.substring(1, 5) : tkID);\n            nftAttTD.appendChild(nftTxt1); \n\n            nftTxt2 = document.createElement('h6');\n            nftTxt2.id = \"att\" + _vaultId + tkID;\n            nftTxt2.className = \"nftTxt2\";\n            nftTxt2.innerHTML = \"\";\n            nftAttTD.appendChild(nftTxt2); \n\n            nftBtn = document.createElement('button');\n            nftBtn.type = \"button\";\n            nftBtn.className = \"nftBtn\";\n            nftBtn.style = \"{{ fontFamily: 'SF Pro Display' }}\";\n            nftBtn.innerHTML = \"+\";\n\n            if (isStaked){              \n              nftBtn.onclick = function () {\n                showPrompt(_vaultId + \"|\" + tkID, function (value) {\n                });\n              };\n            }\n            else{              \n              nftBtn.onclick = function () {\n                showPromptTransfer(_vaultId + \"|\" + tkID + \"|\" + contractAdress, function (value) {\n                });\n              };\n            }\n\n            nftAttTD.appendChild(nftBtn); \n \n            nftTxt3 = document.createElement('h6');\n            nftTxt3.id = \"att2\" + _vaultId + tkID;\n            nftTxt3.className = \"nftTxt3\";\n            nftTxt3.innerHTML = \"\";\n            nftAttTD.appendChild(nftTxt3); \n\n            nftContainer.appendChild(nftCard);\n\n          })();\n        }\n        onGoingNotif(\"\");\n        return balanceOfOwner;\n\n\n      }\n      catch(ex){\n        ShowNFTError(nftcontract + \" - Error on reading token URI\");\n        console.log(\"renderNFT\", ex);\n      }\n    }\n\n    async function ShowNFTCard(tab_container, nftcontract, contractAdress, _account, isStaked) {\n      var nftName = await nftcontract.methods.name().call();\n      var balanceOfOwner = await nftcontract.methods.balanceOf(_account).call();\n      var DivContainer = document.getElementById(tab_container);\n      var nftcontainer;\n      var objNFTPend;\n      var objNFTNitroEquip;\n      var btnPowerUp;\n      var imgNFT;\n\n      var mismatchNFT; \n\n      try {\n        for (let i = 0; i < balanceOfOwner; i++) {\n          (async function () {\n            try {\n              var tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, i).call();\n              const tokenMetadata = await fetchNFTImage(nftcontract, _account, tkID, 'ShowNFTCard');\n              var _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n              var _checkAdd = stakingnftcontract.methods.Vault(_vaultId).call();\n              \n              mismatchNFT = false;\n              if (_checkAdd.nftAddress != contractAdress) {\n                mismatchNFT = true;\n              }\n\n              var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, tkID).call();\n              if (isStaked) {\n                if (_nftStakeInfo.owner != account) {\n                  return;\n                }\n              }\n\n              nftcontainer = document.createElement(\"div\");\n              nftcontainer.id = \"nftcontainer_\" + _vaultId + \"_\" + tkID; \n              if (isMobile) {\n                nftcontainer.className = \"nftcontainer-mobile\";\n              }\n              else {\n                nftcontainer.className = \"nftcontainer\";\n              }\n\n              const nftdetail = document.createElement('div');\n              nftdetail.id = \"nftdetail_\" + _vaultId + \"_\" + tkID;\n              nftdetail.className = \"nftdetail\";\n\n              const chk = document.createElement(\"INPUT\");\n              chk.setAttribute(\"type\", \"checkbox\");\n              chk.id = contractAdress + \"_\" + tkID;\n              chk.className = \"unlisted\";\n\n              const lbl = document.createElement(\"LABEL\");\n              lbl.className = \"parent\";\n              lbl.htmlFor = chk.id;\n\n              if (tokenMetadata[\"image\"].includes(\"mp4\")) {\n                imgNFT = document.createElement('video');\n              }\n              else {\n                imgNFT = document.createElement('img');\n              }\n              if (isMobile) {\n                imgNFT.className = \"image-mobile\";\n              }\n              else {\n                imgNFT.className = \"image\";\n              }\n\n              if (tokenMetadata[\"image\"].includes(\"mp4\")) {\n\n                const vid_source = document.createElement(\"source\");\n                if (tokenMetadata[\"image\"].startsWith(\"ipfs://\")) {\n                  vid_source.setAttribute(\"src\", `https://ipfs.io/ipfs/${tokenMetadata[\"image\"].split(\"ipfs://\")[1]}`);\n                }\n                else {\n                  vid_source.setAttribute(\"src\", tokenMetadata[\"image\"]);\n                }\n\n                vid_source.setAttribute(\"type\", \"video/mp4\");\n                imgNFT.appendChild(vid_source);\n              }\n              else {\n                var _imgFix = tokenMetadata[\"image\"];\n                if (_imgFix.startsWith(\"ipfs://\")) {\n                  _imgFix = `https://ipfs.io/ipfs/${_imgFix.replace(\"ipfs://\", '')}`\n                }\n                imgNFT.setAttribute(\"src\", _imgFix);\n              } \n              imgNFT.setAttribute(\"alt\", \"Error loading image\");  \n \n              var _level = await nftlevelcontract.methods.getNFTLevel(_vaultId, tkID).call();\n              if(_level>0){\n                _level = \"(Lv\" + _level + \")\"; \n              }\n              else{\n                _level=\"\";\n              }\n\n              const objNFT = document.createElement('h6');\n              objNFT.id = \"stk\" + _vaultId + tkID;\n              objNFT.className = \"h6nftName\";\n              objNFT.innerHTML = (nftName.length > 20 ? nftName.substring(1, 20) : nftName) + ` #` + (tkID.length > 5 ? tkID.substring(1, 5) : tkID) + _level;\n\n              lbl.appendChild(imgNFT);\n              nftcontainer.appendChild(chk);\n              nftcontainer.appendChild(lbl);\n\n              nftdetail.appendChild(objNFT);\n              nftcontainer.appendChild(nftdetail);\n\n              /* Begin - For Staked NFT Only */\n              if (isStaked) {\n \n                objNFTPend = document.createElement('h6');\n                objNFTPend.className = \"h6pendingEarn\";\n                objNFTPend.id = \"pend\" + _vaultId + tkID;\n                objNFTPend.innerHTML = \"\";\n\n                objNFTNitroEquip = document.createElement('h6');\n                objNFTNitroEquip.className = \"h6nitroEquip\";\n                objNFTNitroEquip.id = \"nitro\" + _vaultId + tkID;\n                objNFTNitroEquip.innerHTML = \"\";\n\n                btnPowerUp = document.createElement('button');\n                btnPowerUp.type = \"button\";\n                btnPowerUp.className = \"powerUpButton\";\n                btnPowerUp.style = \"{{ fontFamily: 'SF Pro Display' }}\";\n                btnPowerUp.innerHTML = \"+\";\n\n                btnPowerUp.onclick = function () {\n                  showPrompt(_vaultId + \"|\" + tkID, function (value) {\n                  });\n                };\n                nftdetail.appendChild(objNFTNitroEquip);\n                nftcontainer.appendChild(objNFTPend);\n                nftcontainer.appendChild(btnPowerUp);\n              }\n              /* End - For Staked NFT Only */\n\n              /*Put Transfer NFT if Not Staked*/\n              else {\n\n                btnPowerUp = document.createElement('button');\n                btnPowerUp.type = \"button\";\n                btnPowerUp.className = \"transferButton\";\n                btnPowerUp.style = \"{{ fontFamily: 'SF Pro Display' }}\";\n                btnPowerUp.innerHTML = \"+\";\n\n                if (mismatchNFT) {\n                  btnPowerUp.onclick = function () {\n                    showPromptTransfer(\"-1|\" + tkID + \"|\" + contractAdress, function (value) {\n                    });\n                  };\n                }\n                else {\n                  btnPowerUp.onclick = function () {\n                    showPromptTransfer(_vaultId + \"|\" + tkID + \"|\" + contractAdress, function (value) {\n                    });\n                  };\n                } \n                nftcontainer.appendChild(btnPowerUp)\n              } \n              DivContainer.appendChild(nftcontainer); \n            }\n            catch (ex2) {\n              ShowNFTError(nftName + \" - Error on reading token URI\");\n              console.log('ShowNFTErrorCard', ex2);\n            }\n\n          })();\n        }\n\n        return balanceOfOwner;\n      }\n      catch (ex) {\n        console.log('Error on ShowNFTCard', ex);\n      }\n    }\n\n    async function UnstakeSelected() {\n      ClaimThem(true);\n    }\n\n    async function ClaimSelected() {\n      ClaimThem(false);\n    }\n\n    async function BackToCollection() { \n      await LoadVaults('staked-nft-container');\n    }\n\n    async function ClaimThem(unstake) {\n      try {        \n        if (account==null){\n          return;\n        }\n\n        isLoading = true; \n        await onGoingNotif(\"Pending...\");\n\n        const DivContainer = document.getElementById('staked-nft-container');\n        var children = DivContainer.getElementsByTagName('*');\n        var elements = [], child;\n        for (var i = 0; i < children.length; i++) {\n          child = children[i];\n          if (child.type == \"checkbox\" && child.checked == true) {\n            elements.push(child);\n          }\n        }\n\n        var tkIDs = [];\n        var _vaultId;\n\n        //loop for getting staked vault\n        for (var j = 0; j < elements.length; j++) {\n          var nft = [];\n          nft = elements[j].id.split(\"_\");\n          _vaultId = await stakingnftcontract.methods.getVaultId(nft[0]).call();\n\n          tkIDs.push(nft[1]);\n        }\n\n        if (unstake) {\n          await stakingnftcontract.methods.unstake(_vaultId, tkIDs).send({ from: account });\n        }\n        else {\n          await stakingnftcontract.methods.claim(_vaultId, tkIDs).send({ from: account });\n        }\n        BackToCollection();\n        isLoading = false;\n\n      }\n      catch (ex) {\n        console.log(\"ClaimThem - \" + ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function addToken(tokenAddress, tokenSymbol, tokenDecimals, tokenImage){\n      const wasAdded = await window.ethereum.request({\n        method: 'wallet_watchAsset',\n        params: {\n          type: 'ERC20', // Initially only supports ERC20, but eventually more!\n          options: {\n            address: tokenAddress, // The address that the token is at.\n            symbol: tokenSymbol, // A ticker symbol or shorthand, up to 5 chars.\n            decimals: tokenDecimals, // The number of decimals in the token\n            image: tokenImage, // A string url of the token logo\n          },\n        },\n      }); \n    }\n  \n    async function StakeAll() {      \n      if (account==null){\n        return;\n      }\n\n      const DivContainer = document.getElementById('unstaked-nft-container');\n      var children = DivContainer.getElementsByTagName('*');\n      var elements = [], child;\n  \n      for (var i = 0; i < children.length; i++) {\n        child = children[i];\n        if (child.type == \"checkbox\") {\n          elements.push(child);\n        }\n      }\n\n      if (elements.length == 0) {\n        return;\n      }\n\n      var _isNFTAppr = false;\n      var address;\n      var tkIDs = [];\n\n      var _reject = false;\n\n      for (var i = 0; i < elements.length; i++) {\n        var nft = [];\n        nft = elements[i].id.replace(\"chk\", \"\").split(\"_\");\n\n        if (_isNFTAppr == false) {\n          address = nft[0];\n          await onGoingNotif(\"Approve All\");\n          _isNFTAppr = await nftApproveAll(address);\n\n          if (_isNFTAppr == false) {\n            _reject = true;\n            await onGoingNotif(\"\");\n            return;\n          }\n          await onGoingNotif(\"Pending...\");\n        }\n\n        tkIDs.push(nft[1]);\n      }\n\n      if (await isWhitelist(address)) {\n        var _vaultId = await stakingnftcontract.methods.getVaultId(address).call();\n        await stakingnftcontract.methods.stake(_vaultId, tkIDs).send({ from: account });\n      }\n      else {\n        await stakingnftcontract.methods.stakeAny(address, tkIDs, true).send({ from: account });\n      }\n      await refreshDAppView();\n      await onGoingNotif(\"\");\n\n\n    }\n\n    async function StakeThem() {\n      try {        \n        if (account==null){\n          return;\n        }\n        await onGoingNotif(\"Pending...\");\n\n        const DivContainer = document.getElementById('unstaked-nft-container');\n        var children = DivContainer.getElementsByTagName('*');\n        var elements = [], child;\n        for (var i = 0; i < children.length; i++) {\n          child = children[i];\n          if (child.type == \"checkbox\" && child.checked == true) {\n            elements.push(child);\n          }\n        }\n\n        var _isNFTAppr = false;\n        var address;\n        var tkIDs = [];\n\n        var _reject = false;\n\n        for (var i = 0; i < elements.length; i++) {\n          var nft = [];\n          nft = elements[i].id.replace(\"chk\", \"\").split(\"_\");\n\n          if (_isNFTAppr == false) {\n            address = nft[0];\n              await onGoingNotif(\"\");\n              await onGoingNotif(\"Approve All\");\n            _isNFTAppr = await nftApproveAll(address);\n\n            if (_isNFTAppr == false) {\n              _reject = true;\n              await onGoingNotif(\"\");\n              return;\n            }\n            await onGoingNotif(\"Pending...\");\n          }\n          tkIDs.push(nft[1]);\n        }\n\n        if (await isWhitelist(address)) {\n          var _vaultId = await stakingnftcontract.methods.getVaultId(address).call();\n          await stakingnftcontract.methods.stake(_vaultId, tkIDs).send({ from: account });\n        }\n        else {\n          await stakingnftcontract.methods.stakeAny(address, tkIDs, true).send({ from: account });\n        }\n        await refreshDAppView();\n        await onGoingNotif(\"\");\n      }\n      catch (ex) {\n        console.log(\"StakeThem - \" + ex);\n      }\n      await onGoingNotif(\"\");\n\n    }\n\n    async function refreshDAppView() {\n      await RefreshCollection();\n      console.log(resultAPICall);\n      await listNFTFilter(resultAPICall);\n      //await stakeVaults('staked-nft-container');\n      await LoadVaults('staked-nft-container');\n      await onGoingNotif(\"\");\n    }\n\n    async function nftApproveAll(address) {\n      try {\n        var _nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, address);\n        var _isAppr = await _nftcontract.methods.isApprovedForAll(account, stakingnft_address).call();\n        if (_isAppr == false) {\n          await _nftcontract.methods.setApprovalForAll(stakingnft_address, true).send({ from: account })\n        }\n        return true;\n      }\n      catch (ex) {\n        console.log(address);\n        console.log(\"nftApproveAll - \" + ex);\n        return false;\n      }\n\n    }\n\n    async function isWhitelist(address) {\n      var _res = false;\n      try {\n        for (var key in CONFIGWhitelist.NFT) {\n          if (CONFIGWhitelist.NFT[key].ADDRESS == address) {\n            _res = true;\n            break;\n          }\n        }\n      }\n      catch (ex) {\n        console.log(\"isWhitelist - \" + ex);\n      }\n      return _res;\n    }\n\n    async function ShowNFTError(msgValue) {\n      const DivContainer = document.getElementById('unstaked-nft-container');\n\n      const curDiv = document.createElement('div');\n      curDiv.className = \"nftcontainer\";  // mt-3 ml-3\";\n\n      const chk = document.createElement(\"INPUT\");\n      chk.setAttribute(\"type\", \"checkbox\");\n      chk.id = \"chk\";\n      chk.className = \"unlisted\";\n\n      const lbl = document.createElement(\"LABEL\");\n      lbl.htmlFor = chk.id;\n\n      const objNFT = document.createElement('h6');\n      objNFT.innerHTML = msgValue;\n      objNFT.className = \"errorMessage\";\n\n      curDiv.appendChild(chk);\n      curDiv.appendChild(lbl);\n\n      curDiv.appendChild(objNFT);\n      DivContainer.appendChild(curDiv);\n    }\n\n    async function showCover() {\n      let coverDiv = document.createElement('div');\n      coverDiv.id = 'cover-div'; \n\n      // make the page unscrollable while the modal form is open\n      document.body.style.overflowY = 'hidden';\n      document.body.append(coverDiv);\n    }\n\n    async function SendNFT(nftAdd, destiAdd, tkID) {\n      try {\n        await onGoingNotif(\"Sending NFT...\");\n\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, nftAdd); \n\n        if (await nftcontract.methods.isApprovedForAll(account, stakingnft_address).call()==false){\n          await nftcontract.methods.setApprovalForAll(stakingnft_address, true).send({ from: account});\n        }\n\n        await nftcontract.methods.safeTransferFrom(account, destiAdd, tkID).send({ from: account });\n        await refreshDAppView();\n\n        await onGoingNotif(\"\");\n      }\n      catch (ex) {\n        console.log(ex);\n        await onGoingNotif(\"\");\n      }\n    }\n\n    async function NitroAdd() {\n      await onGoingNotif(\"Pending...\");\n      isLoading = true;\n      try {\n        let DivContainer = document.getElementById('prompt-message');\n        if (isMobile){\n          DivContainer = document.getElementById('prompt-message-mobile');\n        }\n        var children = DivContainer.getElementsByTagName('*');\n        var child;\n\n        if (children.length > 0) {\n\n          var _isAppr = await nitrocontract.methods.isApprovedForAll(account, stakingnft_address).call();\n          if (_isAppr == false) {\n            await nitrocontract.methods.setApprovalForAll(stakingnft_address, true)\n              .send({\n                from: account,\n                gasLimit: String(totalGasLimit)\n              })\n          }\n\n          for (var i = 0; i < children.length; i++) {\n            child = children[i];\n            if (child.type == \"radio\" && child.checked == true) {\n              var nft = [];\n              nft = child.id.split(\"|\");\n\n              var _vaultId = nft[0];\n              var _tkID = nft[1];\n              var _nitroId = nft[2]; \n\n              await stakingnftcontract.methods.stakeNitro(_vaultId, _tkID, _nitroId)\n                .send({\n                  from: account \n                });\n              break;\n            }\n          }\n        }\n      }\n      catch (ex) {\n        console.log(ex);\n      }\n      await onGoingNotif(\"\");\n      isLoading = false;\n    }\n\n    async function hideCover() {\n      try {\n        document.getElementById('cover-div').remove();\n        document.body.style.overflowY = '';\n      }\n      catch (ex) {\n      }\n    }\n\n    async function showPromptTransfer(text, callback) {\n      showCover();\n \n      var _nft = [];\n      _nft = text.split(\"|\");\n      var _vaultId = _nft[0];\n \n      //Highlight the selected NFT\n      document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard SelectedNFT\";\n\n      var _vault;\n      if (_vaultId == -1) {\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _nft[2]);\n      }\n      else {\n        _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _vault.nftAddress);\n      }\n\n      var _nftName = await nftcontract.methods.name().call();\n\n      \n      let form = document.getElementById('prompt-form');\n      if (isMobile){\n        form = document.getElementById('prompt-form-mobile');\n      }\n\n      let container = document.getElementById('prompt-form-container');\n      let msg = document.getElementById('prompt-message');\n      if (isMobile){\n        msg = document.getElementById('prompt-message-mobile');\n      }\n\n      var h6NFTAddy = document.createElement('h5');\n      h6NFTAddy.className = \"h6Nitro\";\n      form.className = \"transfer-width\";\n\n      var txAdd;\n      if (_vaultId == -1) {\n        h6NFTAddy.innerHTML = _nftName + \" #\" + _nft[1] + \"<br>\" + _nft[2] + \"<br>\";\n        txAdd = _nft[2];\n      }\n      else {\n        h6NFTAddy.innerHTML = _nftName + \" #\" + _nft[1] + \"<br>\" + _vault.nftAddress + \"<br>\";\n        txAdd = _vault.nftAddress;\n      }\n\n      var h6Caption = document.createElement('h6');\n      h6Caption.className = \"h6Nitro\";\n      h6Caption.innerHTML = \"Transfer NFT to (Input Wallet Address)\";\n\n      var x = document.createElement(\"INPUT\");\n      x.id = text;\n      x.placeholder = \"0x0000000000000000000000000000000000000000\";\n      x.setAttribute(\"type\", \"text\");\n\n      var curDiv = document.createElement('div');\n      curDiv.className = \"transfer-nft\";\n      msg.className = \"\";\n      msg.innerHTML = \"\";\n\n      var btnSubmit = document.getElementById('btnSubmit');\n      btnSubmit.value = \"Send\";\n\n      curDiv.appendChild(h6NFTAddy);\n      curDiv.appendChild(h6Caption);\n      curDiv.appendChild(x);\n\n      msg.appendChild(curDiv);\n\n\n      function complete(value) {\n        if (value == \"submit\") {\n          SendNFT(txAdd, x.value, _nft[1]);\n        }\n        hideCover();\n        container.style.display = 'none';\n        document.onkeydown = null;\n        callback(value);\n      }\n\n      form.onsubmit = function () {\n        let value = \"submit\";\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard\";\n        complete(value);\n        return false;\n      };\n\n      form.cancel.onclick = function () {\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard\";\n        complete(null);\n      };\n\n      document.onkeydown = function (e) {\n        if (e.key == 'Escape') {\n          document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard\";\n          complete(null);\n        }\n      };\n      container.style.display = 'block';\n    }\n\n    async function showLoading() {\n      let form = document.getElementById('prompt-form');\n      let container = document.getElementById('prompt-form-container');\n\n      let DivContainer = document.getElementById('prompt-message');\n\n      showCover(); \n      DivContainer.innerHTML = \"\";\n\n      const lbl = document.createElement(\"LABEL\");\n      lbl.className = \"parent\";\n\n      let img = document.createElement('img');\n      img.setAttribute(\"src\", 'loading.gif');\n\n      let curDiv = document.createElement('div');\n      curDiv.className = \"nitrocontainer\";\n\n      lbl.appendChild(img);\n      curDiv.appendChild(lbl);\n      DivContainer.appendChild(curDiv);\n\n      container.style.display = 'block'; \n    }\n\n    async function showPrompt(text, callback) {     \n      let container = document.getElementById('prompt-form-container');\n      let form;\n      let DivContainer; \n      if(isMobile){\n        form = document.getElementById('prompt-form-mobile');\n        DivContainer = document.getElementById('prompt-message-mobile'); \n      }\n      else{\n        form = document.getElementById('prompt-form');\n        DivContainer = document.getElementById('prompt-message'); \n      }\n\n      var curDiv;\n      var contractAdress;\n      var balanceOfOwner = await nitrocontract.methods.balanceOf(account).call(); \n\n      showCover();\n\n      var _nft = [];\n      _nft = text.split(\"|\");\n\n      var lastClass = document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className;\n      document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard SelectedNFT\"; \n      curDiv = document.createElement('div');\n      contractAdress = await nitrocontract.methods.symbol().call();   \n      DivContainer.innerHTML = \"\"; \n\n      for (let i = 0; i < balanceOfOwner; i++) {\n        (async function () {\n          try {\n            var tkID = await nitrocontract.methods.tokenOfOwnerByIndex(account, i).call();\n\n            var nitCard = document.createElement('div');            \n            nitCard.id = \"nit\" + tkID;\n            if(isMobile){\n              nitCard.className = \"nitCard-mobile\";\n            }\n            else{\n              nitCard.className = \"nitCard\";\n            }\n\n            var nitTable = document.createElement('TABLE');\n            nitTable = document.createElement(\"TABLE\");\n            nitTable.setAttribute(\"id\", \"tbl\" + tkID);\n            nitCard.appendChild(nitTable);\n\n            var nitTR = document.createElement('TR');\n            nitTR.className = \"nitTR\";\n            nitTable.appendChild(nitTR);\n\n            var nitTD1 = document.createElement('TD');\n            nitTD1.className = \"nitTD1\";\n            nitTR.appendChild(nitTD1);\n             \n            var nitchk = document.createElement(\"INPUT\");\n            nitchk.setAttribute(\"type\", \"radio\"); \n            nitchk.id = text + '|' + tkID;\n            nitchk.className = \"nitchk\";\n            nitchk.name = \"nitro\";\n            nitTD1.appendChild(nitchk);\n\n            var nitlbl = document.createElement(\"LABEL\");\n            nitlbl.htmlFor = nitchk.id;\n            nitTD1.appendChild(nitlbl);\n\n\n            let tokenMetadataURI = await nitrocontract.methods.tokenURI(tkID).call();\n            if (tokenMetadataURI.startsWith(\"ipfs://\")) {\n              tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI.split(\"ipfs://\")[1]}`;\n            }\n            else if (tokenMetadataURI.startsWith(\"https://gateway.pinata.cloud/ipfs/\")) {\n              tokenMetadataURI = tokenMetadataURI.replace(`https://gateway.pinata.cloud/ipfs/`, ``);\n              tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI}${1}`;\n            }\n            var tokenMetadata = await fetch(tokenMetadataURI).then((response) => response.json()); \n\n            var imgNFT = document.createElement('img');\n            imgNFT.setAttribute(\"src\", tokenMetadata[\"image\"]);  \n            imgNFT.setAttribute(\"alt\", contractAdress);\n            imgNFT.setAttribute(\"title\", \"Nitro #\" + tkID);\n            imgNFT.style.width = \"100px\";\n            nitlbl.appendChild(imgNFT);\n\n            \n\n            var nitTD2 = document.createElement('TD');\n            nitTD2.className = \"nitTD2\";\n            nitTR.appendChild(nitTD2);\n            \n            var nitAtt1 = document.createElement('h6');\n            nitAtt1.className = \"nitAtt\";\n            nitAtt1.innerHTML = tokenMetadata[\"attributes\"][0][\"trait_type\"] + ': <b> x' + tokenMetadata[\"attributes\"][0][\"value\"] + '</b>'; \n            nitTD2.appendChild(nitAtt1);\n\n            var nitAtt2 = document.createElement('h6');\n            nitAtt2.className = \"nitAtt\";\n            nitAtt2.innerHTML = tokenMetadata[\"attributes\"][1][\"trait_type\"] + ': ' + tokenMetadata[\"attributes\"][1][\"value\"]; \n            nitTD2.appendChild(nitAtt2);\n\n            var nitAtt3 = document.createElement('h6');\n            nitAtt3.className = \"nitAtt\";\n            nitAtt3.innerHTML = tokenMetadata[\"attributes\"][2][\"trait_type\"] + ': ' + tokenMetadata[\"attributes\"][2][\"value\"]; \n            nitTD2.appendChild(nitAtt3);\n \n            DivContainer.appendChild(nitCard);\n\n          }\n          catch (ex2) {\n            console.log(ex2);\n          }\n\n        })();\n      }\n\n      function complete(value) {\n        if (value == \"submit\") {\n          NitroAdd();\n        }\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=lastClass;\n        hideCover();\n        container.style.display = 'none';\n        document.onkeydown = null;\n        callback(value);\n      }\n\n      form.onsubmit = function () {\n        let value = \"submit\";\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=lastClass;\n        complete(value);\n        return false;\n      };\n\n      form.cancel.onclick = function () {\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=lastClass;\n        complete(null);\n      };\n\n      document.onkeydown = function (e) {\n        if (e.key == 'Escape') {\n          document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=lastClass;\n          complete(null);\n        }\n      };\n      container.style.display = 'block';\n    }\n\n    async function NitroMint(pID) {\n      try { \n        if (account==null){\n          return;\n        }\n        await onGoingNotif(\"Pending...\");\n\n        if (amtNitro > 0) {\n\n          if (pID != 5){ \n            var totalCost = await nitrocontract.methods.getNitroPrice(pID).call();\n            totalCost = Web3.utils.fromWei(totalCost) * amtNitro;\n            var totalCostWei = Web3.utils.toWei(String(totalCost));\n\n            var _token = await nitrocontract.methods.getCryptotoken(pID).call();\n            var _tokencontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, _token);\n            var _allow_int = await _tokencontract.methods.allowance(account, nitroboost_address).call();\n            var _allow = parseInt(_allow_int);\n\n            var _txRejected = false;\n\n            if (_allow < parseInt(totalCostWei)) {\n              await onGoingNotif(\"Approval...\");\n\n              var apprAmt = Web3.utils.toWei(String(Number.MAX_SAFE_INTEGER));\n\n              await _tokencontract.methods.approve(nitroboost_address, String(apprAmt))\n                .send({ from: account })\n                .on('error', function (error, receipt) {\n                  _txRejected = true;\n                })\n                .catch(() => {\n                  onGoingNotif(\"\");\n                });\n\n              await onGoingNotif(\"Pending...\");\n            }\n            if (_txRejected == false) {\n\n              await nitrocontract.methods\n                .mint(amtNitro, pID)\n                .send({\n                  gasLimit: String(totalGasLimit * amtNitro),\n                  to: nitroboost_address,\n                  from: account\n                })\n                .on('confirmation', (confirmationNumber, receipt) => {\n                  onGoingNotif(\"\");\n                });\n            }\n          }\n          else{\n\n            var _gasLimit = String(totalGasLimit * amtNitro);\n            var _cost = await nitroBCHcontract.methods.cost().call();\n            var _totalCost = String(Number(_cost) * amtNitro);\n            console.log(\"totalCost\", typeof(totalCost));\n            /* var totalCostWei = Web3.utils.toWei(String(totalCost)); */\n\n            nitroBCHcontract.methods.mint(amtNitro)\n            .send({\n              gasLimit: _gasLimit,\n              to: nitroBCH_address,\n              from: account,\n              value: _totalCost \n            })\n\n\n\n            /* let _nitroBCHPrice = Number(nitroBCH);\n\n            //totalCost = String(Web3.utils.fromWei(_nitroBCHPrice) * amtNitro);\n            totalCost = _nitroBCHPrice * amtNitro;\n            console.log(\"totalCost\", totalCost);\n\n            var totalCostWei = Web3.utils.toWei(String(totalCost)); \n            console.log(\"totalCostWei\", totalCostWei);\n\n            await nitrocontract.methods\n                .mint(amtNitro, pID)\n                .send({\n                  gasLimit: String(totalGasLimit * amtNitro),\n                  to: nitroboost_address,\n                  from: account,\n                  value: totalCostWei\n                });\n            */\n          }\n \n\n        }\n      }\n      catch (ex) {\n        console.log(ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function BtnSelected(amt) {\n      amtNitro = amt;\n    }\n \n    if (isMobile) { \n      return (\n        <div className=\"App nftapp\">\n          <nav class=\"navbar navbarfont navbar-expand-md navbar-dark bg-dark mb-1\" >\n            <div class=\"container-fluid\" style={{ fontFamily: \"SF Pro Display\" }}>\n              <a class=\"navbar-brand\" style={{ fontWeight: \"800\", fontSize: '15px' }} href=\"#\">\n                <img src=\"logo.png\" width=\"50\" />\n              </a>\n              <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n              </button>\n              <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n                <ul class=\"navbar-nav me-auto mb-2 px-3 mb-md-0\" style={{ fontSize: \"15px\" }}>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Dashboard</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Market Place</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\">Bridge NFTs</a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </nav>\n\n          <div className='container container-style-mobile mb-5'>\n            <div className='row'>\n              <body className='nftminter-mobile'>\n                <form>\n                  <div className='row p-2'>\n                    <h5 className='h5Nitro'>Mint Nitro NFT Here</h5>\n                  </div>\n                  <img src=\"./nitrocommon.gif\" width=\"100px\" />\n                  <h6 className='h6Nitro'>Select Nitro Quantity</h6>\n\n                  <ButtonGroup size=\"lg\"\n                    aria-label=\"First group\"\n                    name=\"amount\"\n                    style={{ boxShadow: \"1px 1px 5px #000000\" }}\n                    class=\"btn-group\"\n                  >\n                    <Button value=\"1\" onClick={function () { BtnSelected(1) }}>1</Button>\n                    <Button value=\"2\" onClick={function () { BtnSelected(2) }}>2</Button>\n                    <Button value=\"3\" onClick={function () { BtnSelected(3) }}>3</Button>\n                    <Button value=\"4\" onClick={function () { BtnSelected(4) }}>4</Button>\n                    <Button value=\"5\" onClick={function () { BtnSelected(5) }}>5</Button>\n                  </ButtonGroup>\n\n                  <h6 className='h6Nitro mt-3'>Pay with your preferred Crypto</h6>\n                  <div className=\"nitro-qty\" role=\"group\" id=\"btnNitroQty\" aria-label=\"Token Payment\" >\n                  <img src={\"./tokens/1.png\"} width=\"50\" alt=\"CrudeOil\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnCrudeOil\" onClick={function () { NitroMint(0) }} />\n                    <img src={\"./tokens/2.png\"} width=\"50\" alt=\"MartinB\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnMartinB\" onClick={function () { NitroMint(1) }} />\n                    <img src={\"./tokens/3.png\"} width=\"50\" alt=\"KTH\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnKTH\" onClick={function () { NitroMint(2) }} />\n                    <img src={\"./tokens/4.png\"} width=\"50\" alt=\"ARG\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnARG\" onClick={function () { NitroMint(3) }} />\n                    <img src={\"./tokens/5.png\"} width=\"50\" alt=\"Tango\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnTango\" onClick={function () { NitroMint(4) }} />\n                    <img src={\"./tokens/6.png\"} width=\"50\" alt=\"BCH\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnBCH\" onClick={function () { NitroMint(5) }} />\n                  </div>\n                </form>\n              </body>              \n            </div>\n            <div className='row'>\n              <body className='nftstaker'>\n                <form style={{ fontFamily: \"SF Pro Display\" }} >\n                  <Tabs defaultActiveKey=\"second\" className=\"nav-pills nav-fill\">\n                    <Tab eventKey=\"first\" title=\"Unstaked NFT\">\n                      <div className='row items' >\n                        <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                          <div class=\"hold-nft-menu buttonmenu\" role=\"group\" aria-label=\"Hold NFT Menu\">\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnStakeSelected\" onClick={StakeThem}>Stake Selected</button>\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnStakeAll\" onClick={StakeAll}>Stake All</button>\n                            <select id=\"nftFilter\" style={{ fontSize: \"9px\" }} className='drpFilter btn-secondary' onChange={RefreshCollection}>\n                              <option selected class=\"selected\">JeepneyRushNFT</option>\n                              <option>All Owned NFT</option>\n                            </select>\n                          </div>\n                        </div>\n                      </div>\n                      <div className='col'>\n                        <div className='row items'>\n                          <div id='unstaked-nft-container' className='nft_card_view-mobile' />\n                        </div>\n                      </div>\n                    </Tab>\n                    <Tab eventKey=\"second\" title=\"Staked NFT\">\n                      <div className='row items' >\n                        <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                          <div class=\"hold-nft-menu buttonmenu\" id=\"btnUnstakeMenu\" role=\"group\" aria-label=\"Stake NFT Menu\">\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnBack\" onClick={BackToCollection}>Back</button>\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnClaimSelected\" onClick={ClaimSelected}>Claim Selected</button>\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnUnstakeSelected\" onClick={UnstakeSelected}>Unstake Selected</button>\n                          </div>\n                        </div>\n                      </div>\n                      <div className='row items'>\n                        <div id='staked-nft-container' className='ml-3 mr-3 nft_card_view' />\n                      </div>\n                    </Tab>\n                  </Tabs>\n                </form>\n              </body>\n            </div>\n          </div>\n \n          <div className=\"row px-4 pt-2\">\n            <div className='header' style={{ fontSize: '11px' }}>\n              <div style={{ fontSize: '15px', borderRadius: '14px', color: \"#ffffff\", fontWeight: \"300\" }}>Staking Vault Rewards</div>\n              <table id=\"tblvaultInfo\" className='table px-15 table-bordered table-dark' />\n            </div>\n          </div>\n\n          <nav class=\"navbar navbarfont bg-dark\"/*navbar-expand-md navbar-dark  style={{ marginBottom: \"0px\", marginLeft: \"0px\", marginRight: \"0px\", clear: \"both\" }} */>\n            <div class=\"navbar-inner\">\n              <div class=\"d-flex flex-row accountInfo\" style={{marginLeft: \"10px\"}}>\n                <div id=\"wallBal\" className=\"walletBalance\" />\n                <div id=\"btnConnect\" onClick={connectwallet} className=\"connectbutton ml-2\" type=\"button\" style={{ fontFamily: \"SF Pro Display\" }}>\n                  Connect Your Wallet\n                </div>\n              </div>\n\n            </div>\n          </nav>\n\n          <div id=\"prompt-form-container\">\n            <form id=\"prompt-form-mobile\">\n              <div className='add-booster'>\n                <div id=\"prompt-message-mobile\"></div>\n                <input name=\"btnSubmit\" id=\"btnSubmit\" type=\"submit\" value=\"Equip\"></input>\n                <input name=\"cancel\" id=\"cancel\" type=\"button\" value=\"Cancel\" />\n              </div>\n            </form>\n          </div>\n\n        </div>\n      );\n    }\n    else { \n      return (\n        <div className=\"App nftapp\">\n          <nav class=\"navbar navbarfont navbar-expand-md navbar-dark bg-dark mb-4\">\n            <div class=\"container-fluid\" style={{ fontFamily: \"SF Pro Display\" }}>\n              <a class=\"navbar-brand px-5\" style={{ fontWeight: \"800\", fontSize: '15px' }} href=\"#\"></a><img src=\"logo.png\" width=\"7%\" />\n              <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n              </button>\n              <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n                <ul class=\"navbar-nav me-auto mb-2 px-3 mb-md-0\" style={{ fontSize: \"15px\" }}>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Dashboard</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Market Place</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\">Bridge NFTs</a>\n                  </li>\n                </ul>\n              </div>\n            </div> \n            <div className='px-5'>\n              <div class=\"d-flex flex-row accountInfo\">\n                <div id=\"wallBal\" className=\"walletBalance\" />\n                <div id=\"btnConnect\" onClick={connectwallet} className=\"connectbutton ml-2\" type=\"button\" style={{ fontFamily: \"SF Pro Display\" }}>\n                  Connect Your Wallet\n                </div>\n              </div>\n            </div>\n          </nav>\n\n          <div className='container container-style'>\n            <div className='col'>\n              <body className='nftminter'>\n                <form>\n                  <div className='row p-2'>\n                    <h5 className='h5Nitro'>Mint Nitro NFT Here</h5>\n                  </div>\n                  <img src=\"./nitrocommon.gif\" width=\"100px\" />\n                  <h6 className='h6Nitro'>Select Nitro Quantity</h6>\n\n                  <ButtonGroup size=\"lg\"\n                    aria-label=\"First group\"\n                    name=\"amount\"\n                    style={{ boxShadow: \"1px 1px 5px #000000\" }}\n                    class=\"btn-group\"\n                  >\n                    <Button value=\"1\" onClick={function () { BtnSelected(1) }}>1</Button>\n                    <Button value=\"2\" onClick={function () { BtnSelected(2) }}>2</Button>\n                    <Button value=\"3\" onClick={function () { BtnSelected(3) }}>3</Button>\n                    <Button value=\"4\" onClick={function () { BtnSelected(4) }}>4</Button>\n                    <Button value=\"5\" onClick={function () { BtnSelected(5) }}>5</Button>\n                  </ButtonGroup>\n\n                  <h6 className='h6Nitro mt-3'>Pay with your preferred Crypto</h6>\n                  <div class=\"nitro-qty\" role=\"group\" id=\"btnNitroQty\" aria-label=\"Token Payment\">\n                    <img src={\"./tokens/1.png\"} width=\"50\" alt=\"CrudeOil\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnCrudeOil\" onClick={function () { NitroMint(0) }} />\n                    <img src={\"./tokens/2.png\"} width=\"50\" alt=\"MartinB\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnMartinB\" onClick={function () { NitroMint(1) }} />\n                    <img src={\"./tokens/3.png\"} width=\"50\" alt=\"KTH\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnKTH\" onClick={function () { NitroMint(2) }} />\n                    <img src={\"./tokens/4.png\"} width=\"50\" alt=\"ARG\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnARG\" onClick={function () { NitroMint(3) }} />\n                    <img src={\"./tokens/5.png\"} width=\"50\" alt=\"Tango\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnTango\" onClick={function () { NitroMint(4) }} />\n                    <img src={\"./tokens/6.png\"} width=\"50\" alt=\"BCH\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnBCH\" onClick={function () { NitroMint(5) }} />\n                  </div>\n\n                  <br></br>\n                  <div className=\"row pt-2\">\n                    <div className='header' style={{ fontSize: '11px' }}>\n                      <div style={{ fontSize: '15px', borderRadius: '14px', color: \"#ffffff\", fontWeight: \"300\" }}>Nitro NFT Rates</div>\n                      <table id=\"tblnitroInfo\" className='table table-bordered table-dark' >\n                        <thead className='thead-light'>\n                          <tr>\n                            <th scope=\"col\">Type</th>\n                            <th scope=\"col\">Price</th>\n                            <th scope=\"col\">Reward Rate</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          <tr>\n                            <td>Nitro Crude</td>\n                            <td>700 OIL</td>\n                            <td>x2.0</td>\n                          </tr>\n                          <tr>\n                            <td>Nitro Martin</td>\n                            <td>8,181,050,000 Martin₿</td>\n                            <td>x2.1</td>\n                          </tr>\n                          <tr>\n                            <td>Nitro KTH</td>\n                            <td>58,821.8 KTH</td>\n                            <td>x2.2</td>\n                          </tr>\n                          <tr>\n                            <td>Nitro ARG</td>\n                            <td>112,126,000 ARG</td>\n                            <td>x2.2</td>\n                          </tr>\n                          <tr>\n                            <td>Nitro Tango</td>\n                            <td>133.277 Tango</td>\n                            <td>x2.3</td>\n                          </tr>\n                          <tr>\n                            <td>Nitro BCH</td>\n                            <td>0.007923 BCH</td>\n                            <td>x2.4</td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n\n                    <div className='header' style={{ fontSize: '11px' }}>\n                      <div style={{ fontSize: '15px', borderRadius: '14px', color: \"#ffffff\", fontWeight: \"300\" }}>Staking Vault Rewards</div>\n                      <table id=\"tblvaultInfo\" className='table px-5 table-bordered table-dark' />\n                    </div>\n                  </div>\n                  \n                </form>\n              </body>\n\n            </div>\n            <div className='col'>\n              <table className='nftstaker'>\n                <tr>\n                  <body className='nftstaker'>\n                    <form style={{ fontFamily: \"SF Pro Display\" }} >\n                      <Tabs defaultActiveKey=\"second\" className=\"nav-pills nav-fill\">\n                        <Tab eventKey=\"first\" title=\"Unstaked NFT\">\n                          <div className='row items' >\n                            <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                              <div class=\"hold-nft-menu buttonmenu\" role=\"group\" aria-label=\"Hold NFT Menu\">\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnStakeSelected\" onClick={StakeThem}>Stake Selected</button>\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnStakeAll\" onClick={StakeAll}>Stake All</button>\n                                <select id=\"nftFilter\" className='drpFilter btn-secondary' onChange={RefreshCollection}>\n                                  <option selected class=\"selected\">JeepneyRushNFT</option>\n                                  <option>All Owned NFT</option>\n                                </select>\n                              </div>\n                            </div>\n                          </div>\n                          <div className='col'>\n                            <div className='row items'>\n                              <div id='unstaked-nft-container' className='nft_card_view' />\n                            </div>\n                          </div>\n                        </Tab>\n                        <Tab eventKey=\"second\" title=\"Staked NFT\">\n                          <div className='row items' >\n                            <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                              <div class=\"hold-nft-menu buttonmenu\" id=\"btnUnstakeMenu\" role=\"group\" aria-label=\"Stake NFT Menu\">\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnBack\" onClick={BackToCollection}>Back</button>\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnClaimSelected\" onClick={ClaimSelected}>Claim Selected</button>\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnUnstakeSelected\" onClick={UnstakeSelected}>Unstake Selected</button>\n                              </div>\n                            </div>\n                          </div>\n                          <div className='row items'>\n                            <div id='staked-nft-container' className='ml-3 mr-3 nft_card_view' />\n                          </div>\n                        </Tab>\n                      </Tabs>\n                    </form>\n                  </body>\n                </tr>\n              </table>\n\n            </div>\n          </div>\n\n          <div id=\"prompt-form-container\"> \n            <form id=\"prompt-form\">\n              <div className='add-booster'>\n                <div id=\"prompt-message\" className='scroll'></div>\n                <input name=\"btnSubmit\" id=\"btnSubmit\" type=\"submit\" value=\"Equip\"></input>\n                <input name=\"cancel\" id=\"cancel\" type=\"button\" value=\"Cancel\" />\n              </div>\n            </form>\n          </div>\n\n          <footer>\n            <div class=\"container\">\n              <div class=\"row secondary\"></div>\n            </div>\n            <div class=\"row copyright\">\n              <p>Copyright &copy; 2022 RushDapp SmartBCH | All Rights Reserved\n              </p> \n            </div>\n\n          </footer>\n        </div>\n      );\n    }\n\n  };\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
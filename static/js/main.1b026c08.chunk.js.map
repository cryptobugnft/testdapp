{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["window","$","short_acct","tx_pending","CONFIG","ABI","account","nftcontract","defSymbol","totalGasLimit","walletBalanceAPI","scannerAPI","balanceAPI","resultAPICall","CONFIGWhitelist","stakingnftcontract","rewardcontract","nitrocontract","nftlevelcontract","stakingnft_address","nitroboost_address","scannercontract","web3","rewardInDetail","vaultSelected","amtNitro","isLoading","isRendering","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleWindowSizeChange","setState","width","innerWidth","state","addEventListener","removeEventListener","isMobile","connectwallet","_connectwallet","apply","arguments","asyncToGenerator","_regeneratorRuntime","mark","_callee","configResponse","accounts","networkId","abiResponse","abiWhitelist","sWallBal","wrap","_context","prev","next","ethereum","fetch","headers","Content-Type","Accept","sent","json","Web3","send","eth","getAccounts","request","method","MAINNET","ID","TESTNET","SYMBOL","GAS_LIMIT","API","BALANCE","WALLET","ABIFetch","TOKENREWARD","MAINDAPP","STAKING","NITROBOOST","RUSHLEVEL","LEVELING","SCANNER","TESTDAPP","onGoingNotif","document","getElementById","style","WalletBalance","innerHTML","APICall","listNFTFilter","LoadVaults","setInterval","CheckRewards","LoadVaultInfo","localStorage","setItem","confirm","t0","console","log","stop","_x","_LoadVaults","_callee3","tab_container","DivContainer","_vaultId","tokenIds","totalVaults","_stakeVaults","contractAdress","usrCurrVault","_vaultContract","i","_i","_vaultInfo","nftName","_tkID","j","tokenMetadataURI","tokenMetadata","_context3","abrupt","UnstakeMenuControl","className","methods","getTotalVault","Array","isAcctHasStakeOnVault","push","length","getVaultAddress","modifyVault","Vault","active","nftAddress","ERC721","vaultName","getTokenIDs","tokenURI","startsWith","concat","split","replace","then","response","_callee2","cardVault","cardVaultCard","cardVaultFront","imgNFT","vid_source","img_src","cardVaultDetails","cardH4","cardSpan","cardVaultBack","_tbl","_tr","_attrdiv","nft_dtl","_tr2","cardButtonClaim","cardButtonUnstake","cardButtonModify","_context2","createElement","id","value","includes","setAttribute","appendChild","color","substring","onclick","claimVault","unstakeVault","VaultRewardToken","_x2","_VaultRewardToken","_callee4","delegate","vaultrewarder","rewardToken","_rewardcontract","_context4","REWARDER","_LoadVaultInfo","_callee5","tbl","thd","_th1","_th2","counter_vault","_tbody","_vault","_rewardSymbol","_tbody_tr","_tbody_td1","short_vault","_tbody_td2","_span1","_span2","_context5","scope","tokenReward","symbol","class","reqBooster","utils","fromWei","rewardRate","RefreshCollection","_RefreshCollection","_callee6","nftCol","_context6","listNFT","_x3","_x4","_APICall","_callee7","theURL","apiResponse","jsonParsedContents","_context7","APIBalanceCall","_x5","_x6","_x7","_APIBalanceCall","_callee8","_account","_CA","_context8","_x8","_WalletBalance","_callee9","earnedrwd","rewards","_context9","result","Number","toFixed","_x9","_claimVault","_callee10","_tkIDs","balanceOfOwner","_context10","balanceOf","tokenOfOwnerByIndex","nftStake","owner","claim","from","refreshDAppView","_x10","_x11","_modifyVault","_callee11","_context11","renderNFT","_x12","_onGoingNotif","_callee12","msg","btnConnect","img","_context12","hideCover","ex","showCover","_x13","_unstakeVault","_callee13","_context13","unstake","GetNFTLevel","_x14","_x15","_GetNFTLevel","_callee14","nftLevel","_context14","getNFTLevel","_CheckRewards","_callee15","_symbol","_i2","_i3","divPend","_pendingRewards","_pend2","_stakeCount","earned","_pend","objNFTPend","objNFTLvl","_nitroStakeRemaining","_result","nitroID","remain","_nitroEquipped","_multipower","_powerFloat","nftLvlBonus","_lvlFloat","_glowNum","seconds","d","h","m","s","remainingBurn","_context15","pendingRewardByAccount","String","getVaultId","pendingReward","nitroStakeRemaining","getEquippedNitro","getNitroPower","parseFloat","getLevelBonus","getRareType","Math","floor","t1","t2","_x16","_x17","_x18","_UnstakeMenuControl","_callee16","btnBack","btnClaim","btnUnstake","_btnBack","_btnClaim","_btnUnstake","_context16","display","classList","add","removeAttribute","remove","_x19","_x20","_getTokenIDs","_callee17","tkns","_context17","getStakeInVaultAccount","_x21","_x22","_x23","_x24","_listNFT","_callee18","filterList","userNFTHold","btnStakeAll","btnStakeSelected","key","ctr","_i4","_context18","keys","NFT","done","type","ADDRESS","contractAddress","t3","toUpperCase","t4","t5","t6","t7","ShowNFTError","t8","_x25","_x26","_x27","_ABIFetch","_callee19","_abi","_address","_contract","ABIResponse","ABIJSON","_context19","Contract","_x28","_listNFTFilter","_callee20","lstNFT","z_1","t_1","z","t","_context20","createTextNode","balance","name","fetchNFTImage","_x29","_x30","_x31","_x32","_fetchNFTImage","_callee21","tkID","_caller","_context21","_x33","_x34","_x35","_x36","_x37","_renderNFT","_callee23","isStaked","nftContainer","nftCard","nftTable","nftMedia","nftTD","nftLvl","nftChk","nftLbl","nftImg","nftAtt","nftAttTD","nftTxt1","nftTxt2","nftBtn","nftTxt3","_loop","_context23","_callee22","_imgFix","_context22","htmlFor","img_er","showPrompt","showPromptTransfer","UnstakeSelected","_UnstakeSelected","_callee26","_context26","ClaimThem","ClaimSelected","_ClaimSelected","_callee27","_context27","BackToCollection","_BackToCollection","_callee28","_context28","_x43","_ClaimThem","_callee29","_DivContainer","children","elements","child","tkIDs","nft","_context29","getElementsByTagName","checked","StakeAll","_StakeAll","_callee31","_isNFTAppr","address","_context31","nftApproveAll","isWhitelist","stake","stakeAny","StakeThem","_StakeThem","_callee32","_DivContainer2","_context32","_refreshDAppView","_callee33","_context33","_x48","_nftApproveAll","_callee34","_nftcontract","_context34","isApprovedForAll","setApprovalForAll","_x49","_isWhitelist","_callee35","_res","_context35","_x50","_ShowNFTError","_callee36","msgValue","curDiv","chk","lbl","objNFT","_context36","_showCover","_callee37","coverDiv","_context37","body","overflowY","append","SendNFT","_x51","_x52","_x53","_SendNFT","_callee38","nftAdd","destiAdd","_context38","safeTransferFrom","NitroAdd","_NitroAdd","_callee39","_DivContainer3","_nitroId","_context39","gasLimit","stakeNitro","_hideCover","_callee40","_context40","_x54","_x55","_showPromptTransfer","_callee41","text","callback","_nft","_nftName","form","container","h6NFTAddy","txAdd","h6Caption","x","complete","_context41","onkeydown","placeholder","onsubmit","cancel","e","_x56","_x57","_showPrompt","_callee44","lastClass","_loop3","_context44","_callee43","nitCard","nitTable","nitTR","nitTD1","nitchk","nitlbl","nitTD2","nitAtt1","nitAtt2","nitAtt3","_context43","NitroMint","_x58","_NitroMint","_callee45","pID","totalCost","totalCostWei","_token","_tokencontract","_allow_int","_allow","_txRejected","apprAmt","_context45","getNitroPrice","toWei","getCryptotoken","allowance","parseInt","MAX_SAFE_INTEGER","approve","on","error","receipt","catch","mint","to","confirmationNumber","BtnSelected","_x59","_BtnSelected","_callee46","amt","_context46","react_default","a","fontFamily","fontWeight","fontSize","href","src","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","ButtonGroup","size","boxShadow","Button","onClick","role","alt","Tabs","defaultActiveKey","Tab","eventKey","title","onChange","selected","borderRadius","marginLeft","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App_0"],"mappings":"q4NAWUA,OAAOC,EAAjB,IA+BIC,EA7BAC,GAAa,EAEbC,EAAS,KACTC,EAAM,KACNC,EAAU,KACVC,EAAc,KAEdC,EAAY,KACZC,EAAgB,KAEhBC,EAAmB,KACnBC,EAAa,KACbC,EAAa,KACbC,EAAgB,KAChBC,EAAkB,KAIlBC,EAAqB,KACrBC,EAAiB,KACjBC,EAAgB,KAChBC,EAAmB,KAEnBC,EAAqB,KACrBC,EAAqB,KAErBC,EAAkB,KAKlBC,EAAO,KAEPC,GAAiB,EACjBC,EAAgB,KAEhBC,EAAW,EAEXC,GAAY,EACZC,GAAc,EA4xEHC,cAzxEb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAaFI,uBAAyB,WACvBP,EAAKQ,SAAS,CAAEC,MAAOtC,OAAOuC,cAb9BV,EAAKW,MAAQ,CACXF,MAAOtC,OAAOuC,YAHJV,oFASZ7B,OAAOyC,iBAAiB,SAAUT,KAAKI,uEAGvCpC,OAAO0C,oBAAoB,SAAUV,KAAKI,uGAWnC,IACCE,EAAUN,KAAKQ,MAAfF,MACFK,EAAWL,GAAS,IAFnB,SAcQM,IAdR,OAAAC,EAAAC,MAAAd,KAAAe,WAAA,SAAAF,IAAA,OAAAA,EAAAf,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KAcP,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAR,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAF,EAAAC,KAAA,GAEQ5D,OAAO8D,SAFf,CAAAH,EAAAE,KAAA,iBAAAF,EAAAE,KAAA,EAImCE,MAAM,sBAAuB,CACxDC,QAAS,CACPC,eAAgB,mBAChBC,OAAQ,sBAPlB,cAIYd,EAJZO,EAAAQ,KAAAR,EAAAE,KAAA,EAUqBT,EAAegB,OAVpC,cAUMhE,EAVNuD,EAAAQ,KAYM7C,EAAO,IAAI+C,IAAKrE,OAAO8D,UAZ7BH,EAAAE,KAAA,GAeY7D,OAAO8D,SAASQ,KAAK,uBAfjC,eAAAX,EAAAE,KAAA,GAgB2BvC,EAAKiD,IAAIC,cAhBpC,eAgBUnB,EAhBVM,EAAAQ,KAiBM7D,EAAU+C,EAAS,GAjBzBM,EAAAE,KAAA,GAmB8B7D,OAAO8D,SAASW,QAAQ,CAC9CC,OAAQ,gBApBhB,YAmBYpB,EAnBZK,EAAAQ,OAuBwB/D,EAAOuE,QAAQC,IAAQtB,GAAalD,EAAOyE,QAAQD,GAvB3E,CAAAjB,EAAAE,KAAA,iBAAAF,EAAAE,KAAA,GAyBkCE,MAAM,mBAAoB,CAClDC,QAAS,CACPC,eAAgB,mBAChBC,OAAQ,sBA5BpB,eAyBcX,EAzBdI,EAAAQ,KAAAR,EAAAE,KAAA,GA+BoBN,EAAYa,OA/BhC,WA+BQ/D,EA/BRsD,EAAAQ,KAiCYX,EAAe,KAEfF,GAAalD,EAAOuE,QAAQC,GAnCxC,CAAAjB,EAAAE,KAAA,gBAoCUrD,EAAYJ,EAAOuE,QAAQG,OAC3BrE,EAAgBL,EAAOuE,QAAQI,UAC/BpE,EAAaP,EAAOuE,QAAQK,IAC5BpE,EAAaR,EAAOuE,QAAQM,QAC5BvE,EAAmBN,EAAOuE,QAAQO,OAxC5CvB,EAAAE,KAAA,GAyCiCsB,GAAS7D,EAAMjB,EAAI+E,YAAY/E,IAAKD,EAAOiF,SAASD,aAzCrF,eAyCUpE,EAzCV2C,EAAAQ,KAAAR,EAAAE,KAAA,GA0CqCsB,GAAS7D,EAAMjB,EAAIiF,QAAQjF,IAAKD,EAAOiF,SAASC,SA1CrF,eA0CUvE,EA1CV4C,EAAAQ,KAAAR,EAAAE,KAAA,GA2CgCsB,GAAS7D,EAAMjB,EAAIkF,WAAWlF,IAAKD,EAAOiF,SAASE,YA3CnF,eA2CUtE,EA3CV0C,EAAAQ,KAAAR,EAAAE,KAAA,GA4CmCsB,GAAS7D,EAAMjB,EAAImF,UAAUnF,IAAKD,EAAOiF,SAASI,UA5CrF,eA4CUvE,EA5CVyC,EAAAQ,KAAAR,EAAAE,KAAA,GA6CmCsB,GAAS7D,EAAMjB,EAAIqF,QAAQrF,IAAKD,EAAOiF,SAASK,SA7CnF,eA6CUrE,EA7CVsC,EAAAQ,KAgDUhD,EAAqBf,EAAOiF,SAASC,QACrClE,EAAqBhB,EAAOiF,SAASE,WACpBnF,EAAOiF,SAASK,QAlD3C/B,EAAAE,KAAA,GAoD+BE,MAAM,2BAA4B,CACrDC,QAAS,CACPC,eAAgB,mBAChBC,OAAQ,sBAvDtB,eAoDUV,EApDVG,EAAAQ,KAAAR,EAAAE,KAAA,GA0DkCL,EAAaY,OA1D/C,QA0DUtD,EA1DV6C,EAAAQ,KAAAR,EAAAE,KAAA,oBA6DiBP,GAAalD,EAAOyE,QAAQD,GA7D7C,CAAAjB,EAAAE,KAAA,gBA8DUrD,EAAYJ,EAAOyE,QAAQC,OAC3BrE,EAAgBL,EAAOyE,QAAQE,UAC/BpE,EAAaP,EAAOyE,QAAQG,IAC5BpE,EAAaR,EAAOyE,QAAQI,QAC5BvE,EAAmBN,EAAOyE,QAAQK,OAlE5CvB,EAAAE,KAAA,GAmEiCsB,GAAS7D,EAAMjB,EAAI+E,YAAY/E,IAAKD,EAAOuF,SAASP,aAnErF,eAmEUpE,EAnEV2C,EAAAQ,KAAAR,EAAAE,KAAA,GAoEqCsB,GAAS7D,EAAMjB,EAAIiF,QAAQjF,IAAKD,EAAOuF,SAASL,SApErF,eAoEUvE,EApEV4C,EAAAQ,KAAAR,EAAAE,KAAA,GAqEgCsB,GAAS7D,EAAMjB,EAAIkF,WAAWlF,IAAKD,EAAOuF,SAASJ,YArEnF,eAqEUtE,EArEV0C,EAAAQ,KAAAR,EAAAE,KAAA,GAsEmCsB,GAAS7D,EAAMjB,EAAImF,UAAUnF,IAAKD,EAAOuF,SAASF,UAtErF,eAsEUvE,EAtEVyC,EAAAQ,KAAAR,EAAAE,KAAA,GAuEmCsB,GAAS7D,EAAMjB,EAAIqF,QAAQrF,IAAKD,EAAOuF,SAASD,SAvEnF,eAuEUrE,EAvEVsC,EAAAQ,KAyEUhD,EAAqBf,EAAOuF,SAASL,QACrClE,EAAqBhB,EAAOuF,SAASJ,WACpBnF,EAAOuF,SAASD,QA3E3C/B,EAAAE,KAAA,GA6E+BE,MAAM,+BAAgC,CACzDC,QAAS,CACPC,eAAgB,mBAChBC,OAAQ,sBAhFtB,eA6EUV,EA7EVG,EAAAQ,KAAAR,EAAAE,KAAA,GAmFkCL,EAAaY,OAnF/C,QAmFUtD,EAnFV6C,EAAAQ,KAAA,eAuFQyB,GAAa,KAETnC,EAAWoC,SAASC,eAAe,YAC9BC,MAAMzD,MAAQ,QA1F/BqB,EAAAE,KAAA,GA2FmCmC,EAAc1F,GA3FjD,eA2FQmD,EAASwC,UA3FjBtC,EAAAQ,KAAAR,EAAAE,KAAA,GA6F8BqC,EAAQ5F,EAASK,GA7F/C,eA6FQE,EA7FR8C,EAAAQ,KAAAR,EAAAE,KAAA,GA+FcsC,GAActF,GA/F5B,eAiGQgF,SAASC,eAAe,0BAA0BG,UAAU,GACvCJ,SAASC,eAAe,wBAChCG,UAAY,GAnGjCtC,EAAAE,KAAA,IAoGcuC,EAAW,wBApGzB,gBAqGoBC,YAAY,WACN,GAAZlG,GACFmG,MAED,KAzGX3C,EAAAE,KAAA,IA0Gc0C,IA1Gd,SA4GQC,aAAaC,QAAQ,qBAAqB,GA5GlD9C,EAAAE,KAAA,mBAgHgB7D,OAAO0G,QAAQ,kBAhH/B,SAAA/C,EAAAE,KAAA,mBAAAF,EAAAC,KAAA,IAAAD,EAAAgD,GAAAhD,EAAA,SAsHIiD,QAAQC,IAAI,8BAAAlD,EAAAgD,IAtHhB,0BAAAhD,EAAAmD,SAAA3D,EAAA,oBAdOL,MAAAd,KAAAe,WAAA,SAwIQqD,EAxIRW,GAAA,OAAAC,EAAAlE,MAAAd,KAAAe,WAAA,SAAAiE,IAAA,OAAAA,EAAAlF,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KAwIP,SAAA+D,EAA0BC,GAA1B,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAjF,IAAAS,KAAA,SAAAyE,GAAA,cAAAA,EAAAvE,KAAAuE,EAAAtE,MAAA,UACiB,MAAXvD,EADN,CAAA6H,EAAAtE,KAAA,eAAAsE,EAAAC,OAAA,qBAIKzG,EAJL,CAAAwG,EAAAtE,KAAA,eAAAsE,EAAAC,OAAA,wBAOEzG,GAAc,EACdiE,GAAa,qBARfuC,EAAAtE,KAAA,EAUQwE,IAAmB,GAAO,GAAO,GAVzC,cAYQlB,EAAetB,SAASC,eAAeoB,IAChCjB,UAAY,GAErB3D,EAAQ,IACV6E,EAAamB,UAAY,iBAElBhG,GAAO,KAAOA,EAAM,IAC3B6E,EAAamB,UAAY,iBAElBhG,GAAO,KAAQA,EAAM,KAC5B6E,EAAamB,UAAY,iBAEnBhG,GAAO,OACb6E,EAAamB,UAAY,kBAzB7BH,EAAAtE,KAAA,GA8B0BxC,EAAgBkH,QAAQC,gBAAgBrG,OA9BlE,QA8BMmF,EA9BNa,EAAAhE,KAgCMoD,EAAe,IAAIkB,MAKdd,EAAE,EArCb,aAqCgBA,EAAEL,GArClB,CAAAa,EAAAtE,KAAA,gBAAAsE,EAAAtE,KAAA,GAsCkCxC,EAAgBkH,QAAQG,sBAAsBpI,EAASqH,GAAGxF,OAtC5F,QAAAgG,EAAAhE,OAwCMoD,EAAaoB,KAAKhB,GAClBF,EAAeE,GAzCrB,QAqC+BA,IArC/BQ,EAAAtE,KAAA,oBA4CE+C,QAAQC,IAAI,eAAgBU,GAEH,GAArBA,EAAaqB,OA9CnB,CAAAT,EAAAtE,KAAA,gBA+CItC,GAAiB,EA/CrB4G,EAAAtE,KAAA,GAgD2BxC,EAAgBkH,QAAQM,gBAAgBpB,GAActF,OAhDjF,eAgDIuF,EAhDJS,EAAAhE,KAAAgE,EAAAtE,KAAA,GAiDUiF,GAAYrB,EAAcC,GAjDpC,QAAAS,EAAAtE,KAAA,iBAoDa8D,EAAE,EApDf,aAoDkBA,EAAEJ,EAAaqB,QApDjC,CAAAT,EAAAtE,KAAA,gBAqDMuD,EAAWG,EAAaI,GArD9BQ,EAAAtE,KAAA,GAsD6B9C,EAAmBwH,QAAQQ,MAAM3B,GAAUjF,OAtDxE,aAsDU0F,EAtDVM,EAAAhE,MAuDqB6E,OAvDrB,CAAAb,EAAAtE,KAAA,gBAwDQ2D,EAAiBK,EAAWoB,WAxDpCd,EAAAtE,KAAA,GAyD4BsB,GAAS7D,EAAMjB,EAAI6I,OAAO7I,IAAKmH,GAzD3D,eAyDQjH,EAzDR4H,EAAAhE,KA0DY2D,EAAUD,EAAWsB,UA1DjChB,EAAAtE,KAAA,GA4DyBuF,GAAYhC,EAAU9G,GA5D/C,QA4DQ+G,EA5DRc,EAAAhE,KA6DQyC,QAAQC,IAAI,kBAAmBQ,EAASuB,QAEpCb,EAAQ,EACHC,EAAI,EAhErB,aAgEwBA,EAAIX,EAASuB,QAhErC,CAAAT,EAAAtE,KAAA,YAkEuB,IADbkE,EAAQV,EAASW,IAjE3B,CAAAG,EAAAtE,KAAA,gBAAAsE,EAAAC,OAAA,8BAAAD,EAAAtE,KAAA,GAsEuCtD,EAAYgI,QAAQc,SAAStB,GAAO5F,OAtE3E,eAsEc8F,EAtEdE,EAAAhE,MAuE+BmF,WAAW,WAC9BrB,EAAgB,wBAAAsB,OAA2BtB,EAAiBuB,MAAM,WAAW,IAGtEvB,EAAiBqB,WAAW,uCACnCrB,EAAmBA,EAAiBwB,QAAjB,uEAGZxB,EAAiBqB,WAAW,wCACnCrB,EAAmBA,EAAiBwB,QAAjB,yCACnBxB,EAAgB,wBAAAsB,OAA2BtB,EAAmB,IAjF1EE,EAAAvE,KAAA,GAAAuE,EAAAtE,KAAA,GAsFkCE,MAAMkE,GAAkByB,KAAK,SAACC,GAAD,OAAcA,EAASvF,SAtFtF,QAsFY8D,EAtFZC,EAAAhE,KAAAgE,EAAAtE,KAAA,wBAAAsE,EAAAvE,KAAA,GAAAuE,EAAAxB,GAAAwB,EAAA,UAyFsB,iFAzFtBA,EAAAtE,KAAA,GA0FkCE,MADZ,kFACuB2F,KAAK,SAACC,GAAD,OAAcA,EAASvF,SA1FzE,QA0FY8D,EA1FZC,EAAAhE,KAAA,eA6FUrC,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KAAC,SAAA0G,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA7H,IAAAS,KAAA,SAAAqH,GAAA,cAAAA,EAAAnH,KAAAmH,EAAAlH,MAAA,QACOgG,EAAYhE,SAASmF,cAAc,QAC/B1C,UAAY,kBACtBuB,EAAUoB,GAAKzD,EACfqC,EAAUqB,MAAQ9D,GAEZ0C,EAAgBjE,SAASmF,cAAc,QAC/B1C,UAAY,aACtB3F,IACFmH,EAAcxB,UAAY,sBAGtByB,EAAiBlE,SAASmF,cAAc,QAC/B1C,UAAY,qBACvB3F,IACFoH,EAAezB,UAAY,6BAIzBJ,EAAa,MAAUiD,SAAS,QAClCnB,EAASnE,SAASmF,cAAc,SAE1Bf,EAAapE,SAASmF,cAAc,UAEtC9C,EAAa,MAAUoB,WAAW,WACpCW,EAAWmB,aAAa,MAAxB,wBAAA7B,OAAuDrB,EAAa,MAAUsB,MAAM,WAAW,KAG/FS,EAAWmB,aAAa,MAAOlD,EAAa,OAE9C+B,EAAWmB,aAAa,OAAQ,aAChCpB,EAAOqB,YAAYpB,KAGnBD,EAASnE,SAASmF,cAAc,OAG5Bd,EAAUhC,EAAa,MAC3B8B,EAAOoB,aAAa,MAAOlB,IAE7BF,EAAOoB,aAAa,MAAO5D,IAErB2C,EAAmBtE,SAASmF,cAAc,QAC/B1C,UAAY,iBAEvB8B,EAASvE,SAASmF,cAAc,OAC/BjF,MAAMuF,MAAQ,QACrBlB,EAAO9B,UAAY,YACnB8B,EAAOnE,WAAa6B,EAAQc,OAAS,GAAKd,EAAQyD,UAAU,EAAG,IAAM,MAAQzD,GAAW,UAElFuC,EAAWxE,SAASmF,cAAc,SAC/B1C,UAAY,QACrB+B,EAASY,GAAK,UAAYzD,EAC1B6C,EAAStE,MAAMuF,MAAQ,QACvBjB,EAASpE,UAAY,GAErBkE,EAAiBkB,YAAYjB,GAC7BD,EAAiBkB,YAAYhB,GAE7BN,EAAesB,YAAYrB,GAC3BD,EAAesB,YAAYlB,IAErBG,EAAgBzE,SAASmF,cAAc,QAC/B1C,UAAY,aAEtBiC,EAAO1E,SAASmF,cAAc,SAC9BR,EAAM3E,SAASmF,cAAc,MACjCT,EAAKc,YAAYb,GAEbC,EAAW5E,SAASmF,cAAc,OAClCN,EAAU7E,SAASmF,cAAc,MAIxB,GACC,GAEdN,EAAQzE,UAAY,SAAW6B,EAAU,mCACzC2C,EAASY,YAAYX,GACrBH,EAAKc,YAAYZ,IAEbE,EAAO9E,SAASmF,cAAc,OAC7B1C,UAAY,kBAEXsC,EAAkB/E,SAASmF,cAAc,MAC/BjF,MAAMuF,MAAQ,QAC9BV,EAAgB3E,UAAY,aAC5B2E,EAAgBtC,UAAY,YAC5BsC,EAAgBY,QAAU,WAAcC,EAAW5B,EAAUqB,SAEvDL,EAAoBhF,SAASmF,cAAc,MAC/BjF,MAAMuF,MAAQ,QAChCT,EAAkB5E,UAAY,eAC9B4E,EAAkBvC,UAAY,YAC9BuC,EAAkBW,QAAU,WAAcE,GAAa7B,EAAUqB,SAE3DJ,EAAmBjF,SAASmF,cAAc,MAC/BjF,MAAMuF,MAAQ,QAC/BR,EAAiB7E,UAAY,SAC7B6E,EAAiBxC,UAAY,YAC7BwC,EAAiBU,QAAU,WAAc1C,GAAYe,EAAUqB,MAAOrB,EAAUoB,KAEhFN,EAAKU,YAAYT,GACjBD,EAAKU,YAAYR,GACjBF,EAAKU,YAAYP,GAEjBP,EAAKc,YAAYV,GACjBL,EAAce,YAAYd,GAE1BT,EAAcuB,YAAYtB,GAC1BD,EAAcuB,YAAYf,GAE1BT,EAAUwB,YAAYvB,GAEtB3C,EAAakE,YAAYxB,GAlH1B,yBAAAkB,EAAAjE,SAAA8C,KAAD9H,GA7FVqG,EAAAC,OAAA,oBAgE6CJ,IAhE7CG,EAAAtE,KAAA,iBAoDyC8D,IApDzCQ,EAAAtE,KAAA,iBAsNElC,GAAc,EACdiE,GAAa,IAvNf,yBAAAuC,EAAArB,SAAAG,EAAA,oBAxIOnE,MAAAd,KAAAe,WAAA,SAmWQ4I,EAnWRC,GAAA,OAAAC,EAAA/I,MAAAd,KAAAe,WAAA,SAAA8I,IAAA,OAAAA,EAAA/J,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KAmWP,SAAA4I,EAAgCC,GAAhC,IAAAC,EAAAC,EAAAC,EAAA,OAAAjJ,IAAAS,KAAA,SAAAyI,GAAA,cAAAA,EAAAvI,KAAAuI,EAAAtI,MAAA,cAAAsI,EAAAtI,KAAA,EAC4BsB,GAAS7D,EAAMjB,EAAI+L,SAAS/L,IAAK0L,GAD7D,cACMC,EADNG,EAAAhI,KAAAgI,EAAAtI,KAAA,EAE0BmI,EAAczD,QAAQ0D,cAAc9J,OAF9D,cAEM8J,EAFNE,EAAAhI,KAAAgI,EAAAtI,KAAA,EAG8BsB,GAAS7D,EAAMjB,EAAI+E,YAAY/E,IAAK4L,GAHlE,cAGMC,EAHNC,EAAAhI,KAAAgI,EAAA/D,OAAA,SAIS8D,GAJT,yBAAAC,EAAArF,SAAAgF,OAnWOhJ,MAAAd,KAAAe,WAAA,SA0WQwD,IA1WR,OAAA8F,EAAAvJ,MAAAd,KAAAe,WAAA,SAAAsJ,IAAA,OAAAA,EAAAvK,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KA0WP,SAAAoJ,IAAA,IAAAC,EAAAC,EAAAhC,EAAAiC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAX,EAAAY,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAnK,IAAAS,KAAA,SAAA2J,GAAA,cAAAA,EAAAzJ,KAAAyJ,EAAAxJ,MAAA,cAAAwJ,EAAAzJ,KAAA,GAEQ2I,EAAM1G,SAASC,eAAe,iBAC9BG,UAAU,IAEVuG,EAAM3G,SAASmF,cAAc,UAC7B1C,UAAY,cAChBiE,EAAIlB,YAAYmB,GAEZhC,EAAM3E,SAASmF,cAAc,OAC7ByB,EAAO5G,SAASmF,cAAc,OAC7BsC,MAAQ,MACbb,EAAKxG,UAAY,aACjBuE,EAAIa,YAAYoB,IAEZC,EAAO7G,SAASmF,cAAc,OAC7BsC,MAAQ,MACbZ,EAAKzG,UAAY,kBACjBuE,EAAIa,YAAYqB,GAEhBF,EAAInB,YAAYb,GAEZmC,EAAgB,EAEhBC,EAAS/G,SAASmF,cAAc,SAxBxCqC,EAAAxJ,KAAA,GAyBuB9C,EAAmBwH,QAAQQ,MAAM4D,GAAexK,OAzBvE,QAyBQ0K,EAzBRQ,EAAAlJ,KAAA,YA0BW0I,EAAO7D,OA1BlB,CAAAqE,EAAAxJ,KAAA,YA4BUgJ,EAAOd,UAAY5K,EA5B7B,CAAAkM,EAAAxJ,KAAA,gBAAAwJ,EAAAxJ,KAAA,GA6BgC8H,EAAiBkB,EAAOd,UA7BxD,QA6BQG,EA7BRmB,EAAAlJ,KAAAkJ,EAAAxJ,KAAA,wBAAAwJ,EAAAxJ,KAAA,GAgCgCsB,GAAS7D,EAAMjB,EAAI+E,YAAY/E,IAAKwM,EAAOU,aAhC3E,QAgCQrB,EAhCRmB,EAAAlJ,KAAA,eAAAkJ,EAAAxJ,KAAA,GAkCgCqI,EAAgB3D,QAAQiF,SAASrL,OAlCjE,eAkCU2K,EAlCVO,EAAAlJ,KAoCU4I,EAAYlH,SAASmF,cAAc,MAEnCgC,EAAanH,SAASmF,cAAc,MAEpCiC,EAAeJ,EAAO1D,UAAUP,OAAS,GAAKiE,EAAO1D,UAAUoC,UAAU,EAAG,IAAM,MAAQsB,EAAO1D,UACrG6D,EAAW/G,UAAYgH,EACvBF,EAAU1B,YAAY2B,IAElBE,EAAarH,SAASmF,cAAc,OAC7ByC,MAAM,SAEQ,GAArBZ,EAAOa,aACTV,EAAW1E,UAAU,WACrB4E,EAAW5E,UAAU,aAGnB6E,EAAStH,SAASmF,cAAc,SAC7ByC,MAAQ,SACfN,EAAOlH,UAAU5B,IAAKsJ,MAAMC,QAAQf,EAAOgB,YAAc,KAErDT,EAASvH,SAASmF,cAAc,SAC7ByC,MAAQ,WACfL,EAAOnH,UAAY6G,EAEnBI,EAAW7B,YAAY8B,GACvBD,EAAW7B,YAAY+B,GAEvBL,EAAU1B,YAAY6B,GAEtBN,EAAOvB,YAAY0B,GAEnBJ,GAAiB,EAnEvBU,EAAAxJ,KAAA,GAoEyB9C,EAAmBwH,QAAQQ,MAAM4D,GAAexK,OApEzE,QAoEU0K,EApEVQ,EAAAlJ,KAAAkJ,EAAAxJ,KAAA,iBAuEI0I,EAAIlB,YAAYuB,GAvEpBS,EAAAxJ,KAAA,iBAAAwJ,EAAAzJ,KAAA,GAAAyJ,EAAA1G,GAAA0G,EAAA,SA0EIzG,QAAQC,IAARwG,EAAA1G,IA1EJ,yBAAA0G,EAAAvG,SAAAwF,EAAA,mBA1WOxJ,MAAAd,KAAAe,WAAA,SAybQ+K,IAzbR,OAAAC,EAAAjL,MAAAd,KAAAe,WAAA,SAAAgL,IAAA,OAAAA,EAAAjM,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KAybP,SAAA8K,IAAA,IAAAC,EAAA,OAAAhL,IAAAS,KAAA,SAAAwK,GAAA,cAAAA,EAAAtK,KAAAsK,EAAArK,MAAA,UACe,MAATvD,EADN,CAAA4N,EAAArK,KAAA,eAAAqK,EAAA9F,OAAA,wBAIM6F,EAASpI,SAASC,eAAe,aAAaoF,MAJpDgD,EAAArK,KAAA,EAKwBqC,EAAQ5F,EAASK,GALzC,cAKEE,EALFqN,EAAA/J,KAAA+J,EAAArK,KAAA,EAMQsK,GAAQ7N,EAAS,yBAA0BO,EAAeoN,GANlE,wBAAAC,EAAApH,SAAAkH,OAzbOlL,MAAAd,KAAAe,WAAA,SAkcQmD,EAlcRkI,EAAAC,GAAA,OAAAC,EAAAxL,MAAAd,KAAAe,WAAA,SAAAuL,IAAA,OAAAA,EAAAxM,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KAkcP,SAAAqL,EAAuBjO,EAAS0E,GAAhC,IAAAwJ,EAAAC,EAAAC,EAAA,OAAAzL,IAAAS,KAAA,SAAAiL,GAAA,cAAAA,EAAA/K,KAAA+K,EAAA9K,MAAA,cACM2K,EAASxJ,EAAM,IAAM1E,EAD3BqO,EAAA9K,KAAA,EAE0BE,MAAMyK,GAFhC,cAEMC,EAFNE,EAAAxK,KAAAwK,EAAA9K,KAAA,EAGiC4K,EAAYrK,OAH7C,cAGMsK,EAHNC,EAAAxK,KAAAwK,EAAAvG,OAAA,SAKSsG,GALT,wBAAAC,EAAA7H,SAAAyH,OAlcOzL,MAAAd,KAAAe,WAAA,SA0cQ6L,EA1cRC,EAAAC,EAAAC,GAAA,OAAAC,EAAAlM,MAAAd,KAAAe,WAAA,SAAAiM,IAAA,OAAAA,EAAAlN,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KA0cP,SAAA+L,EAA8BC,EAAUC,EAAKnK,GAA7C,IAAAwJ,EAAAC,EAAAC,EAAA,OAAAzL,IAAAS,KAAA,SAAA0L,GAAA,cAAAA,EAAAxL,KAAAwL,EAAAvL,MAAA,cACM2K,EAASxJ,EAAIyE,QAAQ,mBAAoB0F,GAAK1F,QAAQ,WAAYyF,GADxEE,EAAAvL,KAAA,EAE0BE,MAAMyK,GAFhC,cAEMC,EAFNW,EAAAjL,KAAAiL,EAAAvL,KAAA,EAGiC4K,EAAYrK,OAH7C,cAGMsK,EAHNU,EAAAjL,KAAAiL,EAAAhH,OAAA,SAKSsG,GALT,wBAAAU,EAAAtI,SAAAmI,OA1cOnM,MAAAd,KAAAe,WAAA,SAkdQiD,EAldRqJ,GAAA,OAAAC,EAAAxM,MAAAd,KAAAe,WAAA,SAAAuM,IAAA,OAAAA,EAAAxN,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KAkdP,SAAAqM,EAA6BL,GAA7B,IAAAV,EAAAC,EAAAC,EAAAc,EAAAC,EAAA,OAAAxM,IAAAS,KAAA,SAAAgM,GAAA,cAAAA,EAAA9L,KAAA8L,EAAA7L,MAAA,cACM2K,EAAS9N,EAAiB+I,QAAQ,WAAYyF,GADpDQ,EAAA7L,KAAA,EAE0BE,MAAMyK,GAFhC,cAEMC,EAFNiB,EAAAvL,KAAAuL,EAAA7L,KAAA,EAGiC4K,EAAYrK,OAH7C,cAGMsK,EAHNgB,EAAAvL,KAKMqL,EAAYnL,IAAKsJ,MAAMC,QAAQc,EAAmBiB,QAClDF,EAAUG,OAAOJ,GAAWK,QAAQ,GAN1CH,EAAAtH,OAAA,SAQS,KAAOqH,EAAU,IAAMjP,GARhC,yBAAAkP,EAAA5I,SAAAyI,OAldOzM,MAAAd,KAAAe,WAAA,SA6dQ0I,EA7dRqE,GAAA,OAAAC,EAAAjN,MAAAd,KAAAe,WAAA,SAAAgN,IAAA,OAAAA,EAAAjO,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KA6dP,SAAA8M,EAA0B5I,GAA1B,IAAAyF,EAAAoD,EAAA1P,EAAA2P,EAAAlI,EAAAD,EAAA,OAAA9E,IAAAS,KAAA,SAAAyM,GAAA,cAAAA,EAAAvM,KAAAuM,EAAAtM,MAAA,cAAAsM,EAAAvM,KAAA,EAAAuM,EAAAtM,KAAA,EAEU+B,GAAa,cAFvB,cAAAuK,EAAAtM,KAAA,EAGuB9C,EAAmBwH,QAAQQ,MAAM3B,GAAUjF,OAHlE,cAGQ0K,EAHRsD,EAAAhM,KAKQ8L,EAAS,GALjBE,EAAAtM,KAAA,EAO4BsB,GAAS7D,EAAMjB,EAAI6I,OAAO7I,IAAKwM,EAAO5D,YAPlE,cAOQ1I,EAPR4P,EAAAhM,KAAAgM,EAAAtM,KAAA,GAQ+BtD,EAAYgI,QAAQ6H,UAAUjP,GAAoBgB,OARjF,QAQQ+N,EARRC,EAAAhM,KAUa6D,EAAI,EAVjB,aAUoBA,EAAIkI,GAVxB,CAAAC,EAAAtM,KAAA,gBAAAsM,EAAAtM,KAAA,GAWwBtD,EAAYgI,QAAQ8H,oBAAoBlP,EAAoB6G,GAAG7F,OAXvF,eAWU4F,EAXVoI,EAAAhM,KAAAgM,EAAAtM,KAAA,GAYgC9C,EAAmBwH,QAAQ+H,SAASlJ,EAAUW,GAAO5F,OAZrF,QAAAgO,EAAAhM,KAawBoM,OAASjQ,GACzB2P,EAAOtH,KAAKZ,GAdpB,QAUwCC,IAVxCmI,EAAAtM,KAAA,wBAAAsM,EAAAtM,KAAA,GAkBU9C,EAAmBwH,QAAQiI,MAAMpJ,EAAU6I,GAAQ3L,KAAK,CAAEmM,KAAMnQ,IAlB1E,eAAA6P,EAAAtM,KAAA,GAmBU6M,KAnBV,QAAAP,EAAAtM,KAAA,iBAAAsM,EAAAvM,KAAA,GAAAuM,EAAAxJ,GAAAwJ,EAAA,SAuBIvJ,QAAQC,IAAI,cACZD,QAAQC,IAARsJ,EAAAxJ,IAxBJ,eAAAwJ,EAAAtM,KAAA,GA0BQ+B,GAAa,IA1BrB,yBAAAuK,EAAArJ,SAAAkJ,EAAA,mBA7dOlN,MAAAd,KAAAe,WAAA,SA0fQ+F,GA1fR6H,EAAAC,GAAA,OAAAC,GAAA/N,MAAAd,KAAAe,WAAA,SAAA8N,KAAA,OAAAA,GAAA/O,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KA0fP,SAAA4N,EAA2B1J,EAAUM,GAArC,IAAAR,EAAA,OAAAjE,IAAAS,KAAA,SAAAqN,GAAA,cAAAA,EAAAnN,KAAAmN,EAAAlN,MAAA,cAAAkN,EAAAnN,KAAA,EAAAmN,EAAAlN,KAAA,EAEUwE,IAAmB,GAAM,GAAM,GAFzC,cAIQnB,EAAgB,uBACpBrB,SAASC,eAAe,wBAAwBG,UAAY,GAE5D1E,GAAiB,EAPrBwP,EAAAlN,KAAA,EAS0BxC,EAAgBkH,QAAQM,gBAAgBzB,GAAUjF,OAT5E,cASIX,EATJuP,EAAA5M,KAAA4M,EAAAlN,KAAA,GAUwBsB,GAAS7D,EAAMjB,EAAI6I,OAAO7I,IAAKmB,GAVvD,eAUIjB,EAVJwQ,EAAA5M,KAAA4M,EAAAlN,KAAA,GAWUmN,GAAU9J,EAAe3G,EAAaiB,EAAelB,GAAS,GAXxE,QAAAyQ,EAAAlN,KAAA,iBAAAkN,EAAAnN,KAAA,GAAAmN,EAAApK,GAAAoK,EAAA,SAeInK,QAAQC,IAARkK,EAAApK,IAfJ,yBAAAoK,EAAAjK,SAAAgK,EAAA,mBA1fOhO,MAAAd,KAAAe,WAAA,SA8gBQ6C,GA9gBRqL,GAAA,OAAAC,GAAApO,MAAAd,KAAAe,WAAA,SAAAmO,KAAA,OAAAA,GAAApP,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KA8gBP,SAAAiO,EAA4BC,GAA5B,IAAAC,EAAAC,EAAA,OAAArO,IAAAS,KAAA,SAAA6N,GAAA,cAAAA,EAAA3N,KAAA2N,EAAA1N,MAAA,OAEE,GADIwN,EAAaxL,SAASC,eAAe,cAC9B,IAAPsL,EAAW,CACb,IACEI,KACArR,GAAW,EAEb,MAAOsR,IAGPvR,EAAaI,EAAQiL,UAAU,EAAG,GAAK,OAASjL,EAAQiL,UAAUjL,EAAQsI,OAAS,EAAGtI,EAAQsI,SAC1F0I,EAAMzL,SAASmF,cAAc,QAC7B1C,UAAY,OAChBgJ,EAAIlG,aAAa,MAAO,YACxBiG,EAAWpL,UAAY/F,EACvBmR,EAAWhG,YAAYiG,QAGvBI,KACAL,EAAWpL,UAAY,GACvBoL,EAAWpL,UAAYmL,EApB3B,wBAAAG,EAAAzK,SAAAqK,OA9gBOrO,MAAAd,KAAAe,WAAA,SAsiBQ2I,GAtiBRiG,GAAA,OAAAC,GAAA9O,MAAAd,KAAAe,WAAA,SAAA6O,KAAA,OAAAA,GAAA9P,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KAsiBP,SAAA2O,EAA4BzK,GAA5B,IAAAyF,EAAAoD,EAAAtI,EAAAI,EAAA,OAAA9E,IAAAS,KAAA,SAAAoO,GAAA,cAAAA,EAAAlO,KAAAkO,EAAAjO,MAAA,cAAAiO,EAAAlO,KAAA,EAAAkO,EAAAjO,KAAA,EAEU+B,GAAa,cAFvB,cAAAkM,EAAAjO,KAAA,EAIuB9C,EAAmBwH,QAAQQ,MAAM3B,GAAUjF,OAJlE,cAIQ0K,EAJRiF,EAAA3N,KAMQ8L,EAAS,GANjB6B,EAAAjO,KAAA,EAO0B+K,EAAezN,EAAoB0L,EAAO5D,WAAYrI,GAPhF,cAOIC,EAPJiR,EAAA3N,KAAA2N,EAAAjO,KAAA,GAQwBsB,GAAS7D,EAAMjB,EAAI6I,OAAO7I,IAAKwM,EAAO5D,YAR9D,QAQI1I,EARJuR,EAAA3N,KAUawD,EAAI,EAVjB,aAUoBA,EAAI9G,EAAc8O,QAVtC,CAAAmC,EAAAjO,KAAA,gBAAAiO,EAAAjO,KAAA,GAWwBtD,EAAYgI,QAAQ8H,oBAAoBlP,EAAoBwG,GAAGxF,OAXvF,eAWU4F,EAXV+J,EAAA3N,KAAA2N,EAAAjO,KAAA,GAYgC9C,EAAmBwH,QAAQ+H,SAASlJ,EAAUW,GAAO5F,OAZrF,QAAA2P,EAAA3N,KAawBoM,OAASjQ,GACzB2P,EAAOtH,KAAKZ,GAdpB,QAU8CJ,IAV9CmK,EAAAjO,KAAA,wBAAAiO,EAAAjO,KAAA,GAiBU9C,EAAmBwH,QAAQwJ,QAAQ3K,EAAU6I,GAAQ3L,KAAK,CAAEmM,KAAMnQ,IAjB5E,eAAAwR,EAAAjO,KAAA,GAkBU6M,KAlBV,QAAAoB,EAAAjO,KAAA,iBAAAiO,EAAAlO,KAAA,GAAAkO,EAAAnL,GAAAmL,EAAA,SAqBIlL,QAAQC,IAAI,gBACZD,QAAQC,IAARiL,EAAAnL,IAtBJ,eAAAmL,EAAAjO,KAAA,GAwBQ+B,GAAa,IAxBrB,yBAAAkM,EAAAhL,SAAA+K,EAAA,mBAtiBO/O,MAAAd,KAAAe,WAAA,SAikBQiP,GAjkBRC,EAAAC,GAAA,OAAAC,GAAArP,MAAAd,KAAAe,WAAA,SAAAoP,KAAA,OAAAA,GAAArQ,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KAikBP,SAAAkP,EAA2BhL,EAAUW,GAArC,IAAAsK,EAAA,OAAApP,IAAAS,KAAA,SAAA4O,GAAA,cAAAA,EAAA1O,KAAA0O,EAAAzO,MAAA,cAAAyO,EAAA1O,KAAA,EAAA0O,EAAAzO,KAAA,EAEyB3C,EAAiBqH,QAAQgK,YAAYnL,EAAUW,GAAO5F,OAF/E,UAGoB,cADZkQ,EAFRC,EAAAnO,MAAA,CAAAmO,EAAAzO,KAAA,eAAAyO,EAAAlK,OAAA,eAAAmB,OAImB8I,IAJnB,OAAAC,EAAAzO,KAAA,uBAAAyO,EAAA1O,KAAA,EAAA0O,EAAA3L,GAAA2L,EAAA,SAAAA,EAAAlK,OAAA,SAQW,IARX,yBAAAkK,EAAAxL,SAAAsL,EAAA,kBAjkBOtP,MAAAd,KAAAe,WAAA,SA6kBQuD,KA7kBR,OAAAkM,GAAA1P,MAAAd,KAAAe,WAAA,SAAAyP,KAAA,OAAAA,GAAA1Q,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KA6kBP,SAAAuP,IAAA,IAAAlL,EAAAH,EAAAsL,EAAAjP,EAAA6D,EAAAqL,EAAAC,EAAApL,EAAAqL,EAAAC,EAAAnD,EAAAoD,EAAAC,EAAAC,EAAAzD,EAAA3C,EAAAX,EAAA7E,EAAAM,EAAAI,EAAAmL,EAAAzD,EAAA0D,EAAAd,EAAAe,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAAC,GAAAC,GAAAC,GAAA,OAAAnR,IAAAS,KAAA,SAAA2Q,GAAA,cAAAA,EAAAzQ,KAAAyQ,EAAAxQ,MAAA,WACMnC,IAAaC,EADnB,CAAA0S,EAAAxQ,KAAA,eAEI+C,QAAQC,IAAInF,EAAUC,GAF1B0S,EAAAjM,OAAA,wBAKE1G,GAAY,EAER6F,EAAe,IAAIkB,MAPzB4L,EAAAxQ,KAAA,EASsB7C,EAAeuH,QAAQiF,SAASrL,OATtD,UASMuQ,EATN2B,EAAAlQ,KAAAkQ,EAAAzQ,KAAA,EAYqBiC,SAASC,eAAe,cACzBG,UAAUkF,SAASjL,GAbvC,CAAAmU,EAAAxQ,KAAA,gBAAAwQ,EAAAjM,OAAA,yBAgBQ3E,EAAWoC,SAASC,eAAe,WAhB3CuO,EAAAxQ,KAAA,GAiB+BmC,EAAc1F,GAjB7C,eAiBImD,EAASwC,UAjBboO,EAAAlQ,KAAAkQ,EAAAxQ,KAAA,GAmB4BxC,EAAgBkH,QAAQC,gBAAgBrG,OAnBpE,WAmBQmF,EAnBR+M,EAAAlQ,KAqB0B,GAAlB5C,EArBR,CAAA8S,EAAAxQ,KAAA,SAuBe8D,EAAI,EAvBnB,aAuBsBA,EAAIL,GAvB1B,CAAA+M,EAAAxQ,KAAA,gBAAAwQ,EAAAxQ,KAAA,GAwB0CxC,EAAgBkH,QAAQG,sBAAsBpI,EAASqH,GAAGxF,OAxBpG,QAAAkS,EAAAlQ,MA0BUoD,EAAaoB,KAAKhB,GA1B5B,QAuBuCA,IAvBvC0M,EAAAxQ,KAAA,iBA8Be8D,EAAI,EA9BnB,aA8BsBA,EAAIJ,EAAaqB,QA9BvC,CAAAyL,EAAAxQ,KAAA,gBA+BQuD,EAAWG,EAAaI,GA/BhC0M,EAAAxQ,KAAA,GAgCmCxC,EAAgBkH,QAAQM,gBAAgBzB,GAAUjF,OAhCrF,WAgCYqF,EAhCZ6M,EAAAlQ,KAkCY0O,EAAUhN,SAASC,eAAe,UAAY0B,GAC9CsL,EAAkB,EAEP,MAAXD,EArCZ,CAAAwB,EAAAxQ,KAAA,gBAAAwQ,EAAAxQ,KAAA,GAsC6B9C,EAAmBwH,QAAQ+L,uBAAuBlN,EAAU9G,GAAS6B,OAtClG,eAsCcwN,EAtCd0E,EAAAlQ,KAuCqB+O,EAA0BvD,EAA7B,GAAaqD,EAAgBrD,EAAnB,GAEdsD,EAASsB,OAAOrB,GAAO1J,MAAM,KAAK,GAClCgG,EAAYnL,IAAKsJ,MAAMC,QAAQqF,GACnCH,EAAkBlD,OAAOJ,GAAWK,QAAQ,GA3CtDwE,EAAAxQ,KAAA,GA8C6B9C,EAAmBwH,QAAQQ,MAAM3B,GAAUjF,OA9CxE,YA8Cc0K,EA9CdwH,EAAAlQ,MA+CqB4H,UAAY5K,EA/CjC,CAAAkT,EAAAxQ,KAAA,gBAAAwQ,EAAAxQ,KAAA,GAgDwC8H,EAAiBkB,EAAOd,UAhDhE,eAgDgBG,EAhDhBmI,EAAAlQ,KAAAkQ,EAAAxQ,KAAA,GAiD4BqI,EAAgB3D,QAAQiF,SAASrL,OAjD7D,QAiDYuQ,EAjDZ2B,EAAAlQ,KAAA,QAmDU0O,EAAQ5M,UAAR,UAAAsD,OAA8ByJ,EAA9B,yCAAAzJ,OAAiFuJ,EAAjF,KAAAvJ,OAAoGmJ,EAApG,UAnDV,QA8B+C/K,IA9B/C0M,EAAAxQ,KAAA,iBAAAwQ,EAAAxQ,KAAA,qBAuD+B,GAAlBtC,EAvDb,CAAA8S,EAAAxQ,KAAA,iBAAAwQ,EAAAzQ,KAAA,GAAAyQ,EAAAxQ,KAAA,GAyDyB9C,EAAmBwH,QAAQiM,WAAWhT,GAAeW,OAzD9E,eAyDQiF,EAzDRiN,EAAAlQ,KA0DQ2O,EAAkB,EA1D1BuB,EAAAxQ,KAAA,GA6D2B9C,EAAmBwH,QAAQQ,MAAM3B,GAAUjF,OA7DtE,YA6DY0K,EA7DZwH,EAAAlQ,MA8DmB4H,UAAY5K,EA9D/B,CAAAkT,EAAAxQ,KAAA,gBAAAwQ,EAAAxQ,KAAA,GA+DsC8H,EAAiBkB,EAAOd,UA/D9D,eA+DcG,EA/DdmI,EAAAlQ,KAAAkQ,EAAAxQ,KAAA,GAgE0BqI,EAAgB3D,QAAQiF,SAASrL,OAhE3D,QAgEUuQ,EAhEV2B,EAAAlQ,KAAA,eAAAkQ,EAAAxQ,KAAA,GAmE6BuF,GAAYhC,EAAU9G,GAnEnD,QAmEY+G,EAnEZgN,EAAAlQ,KAoEiBwD,EAAI,EApErB,aAoEwBA,EAAIN,EAASuB,QApErC,CAAAyL,EAAAxQ,KAAA,iBAqEckE,EAAQV,EAASM,GArE/B0M,EAAAxQ,KAAA,GAsE4B9C,EAAmBwH,QAAQkM,cAAcrN,EAAUW,GAAO5F,OAtEtF,eAsEc+Q,EAtEdmB,EAAAlQ,KAuEc8O,EAASsB,OAAOrB,GAAO1J,MAAM,KAAK,GAClCgG,EAAYnL,IAAKsJ,MAAMC,QAAQqF,GAC/BxD,EAAUG,OAAOJ,GAAWK,QAAQ,GACxCiD,EAAkBlD,OAAOH,GAASI,QAAQ,IAEpCsD,EAAatN,SAASC,eAAe,MAAQsB,EAAWW,IACnD9B,UAAY,GACvBkN,EAAWlN,UAAY,SAAW6M,EAAkB,IAAMJ,EA9EpE2B,EAAAxQ,KAAA,GAiF+BmO,GAAY5K,EAAUW,GAjFrD,eAiFcsK,EAjFdgC,EAAAlQ,MAkFgBiP,EAAYvN,SAASC,eAAe,MAAQsB,EAAWW,IACnD9B,UAAY,GACtBmN,EAAUnN,UAAYoM,EApFhCgC,EAAAzQ,KAAA,GAAAyQ,EAAAxQ,KAAA,IAwFiC9C,EAAmBwH,QAAQmM,oBAAoBtN,EAAUW,GAAO5F,OAxFjG,gBAwFkBwN,EAxFlB0E,EAAAlQ,KA0FuBoP,EAAiC5D,EAApC,GAAoCA,EAAxB,GAAa6D,EAAW7D,EAAd,GAC9B0D,EAAuBG,EA3FnCa,EAAAxQ,KAAA,IAmGmC9C,EAAmBwH,QAAQoM,iBAAiBvN,EAAUW,GAAO5F,OAnGhG,eAmGYsR,EAnGZY,EAAAlQ,MAoGiC,GApGjC,CAAAkQ,EAAAxQ,KAAA,iBAAAwQ,EAAAxQ,KAAA,IAqGkC9C,EAAmBwH,QAAQqM,cAAcxN,EAAUqM,GAAgBtR,OArGrG,gBAqGcuR,EArGdW,EAAAlQ,KAsGcwP,EAAckB,WAAWnB,EAAc,OAAS,IAtG9DW,EAAAxQ,KAAA,IAuGkC3C,EAAiBqH,QAAQuM,cAAc1N,EAAUW,GAAO5F,OAvG1F,YAuGcyR,EAvGdS,EAAAlQ,KAwGc0P,EAAYgB,WAAWjB,EAAc,OAAS,IAC9CD,GAA4BE,IAExBR,EAAuB,GA3GzC,CAAAgB,EAAAxQ,KAAA,iBAAAwQ,EAAAxQ,KAAA,IA4GqC5C,EAAcsH,QAAQwM,YAAYxB,GAASpR,OA5GhF,SA4GoB2R,EA5GpBO,EAAAlQ,KAgHoB4P,EAAUnE,OAFDyD,EAAuB,MAAS,GAAK,GAAK,IAGnDW,EAAIgB,KAAKC,MAAMlB,EAAO,OACtBE,GAAIe,KAAKC,MAAMlB,EAAO,MAAiB,MACvCG,GAAIc,KAAKC,MAAMlB,EAAU,KAAO,IAChCI,GAAIa,KAAKC,MAAMlB,EAAU,IAMzBK,IAJWJ,EAAI,EAAIA,GAAU,GAALA,EAAS,SAAW,WAAa,KAC9CC,GAAI,EAAIA,GAAc,IAAa,KACnCC,GAAI,EAAIA,GAAc,IAAa,KACnCC,GAAI,EAAIA,GAAc,GAAW,IAGhDtO,SAASC,eAAe,OAASsB,EAAWW,GAAO9B,UAAY,mDAAqDmO,GAAgB,eACpHT,EAAY9D,QAAQ,GACpChK,SAASC,eAAe,MAAQsB,EAAW,IAAMW,GAAOO,UAAY,mBAAqBwL,EA9HzGO,EAAAxQ,KAAA,mBAkIgBgC,SAASC,eAAe,OAASsB,EAAWW,GAAO9B,UAAY,IAAM0N,EAAY9D,QAAQ,GAlIzG,SAAAwE,EAAAxQ,KAAA,mBAAAwQ,EAAAzQ,KAAA,IAAAyQ,EAAA1N,GAAA0N,EAAA,UAuIYzN,QAAQC,IAAI,mBAAZwN,EAAA1N,IAvIZ,SAoE6CgB,IApE7C0M,EAAAxQ,KAAA,kBAAAwQ,EAAAxQ,KAAA,mBAAAwQ,EAAAzQ,KAAA,IAAAyQ,EAAAa,GAAAb,EAAA,UA4IQzN,QAAQC,IAAI,mBAAZwN,EAAAa,IA5IR,SAAAb,EAAAxQ,KAAA,mBAAAwQ,EAAAzQ,KAAA,IAAAyQ,EAAAc,GAAAd,EAAA,SAiJIzN,QAAQC,IAAI,mBAAZwN,EAAAc,IAjJJ,SAmJEzT,GAAY,EAnJd,0BAAA2S,EAAAvN,SAAA2L,EAAA,sCA7kBO3P,MAAAd,KAAAe,WAAA,SAmuBQsF,GAnuBR+M,EAAAC,EAAAC,GAAA,OAAAC,GAAAzS,MAAAd,KAAAe,WAAA,SAAAwS,KAAA,OAAAA,GAAAzT,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KAmuBP,SAAAsS,EAAkCC,EAASC,EAAUC,GAArD,IAAAC,EAAAC,EAAAC,EAAA,OAAA7S,IAAAS,KAAA,SAAAqS,GAAA,cAAAA,EAAAnS,KAAAmS,EAAAlS,MAAA,OACM+R,EAAW/P,SAASC,eAAe,WACnC+P,EAAYhQ,SAASC,eAAe,oBACpCgQ,EAAcjQ,SAASC,eAAe,sBAGxCD,SAASC,eAAe,kBAAkBC,MAAMiQ,QADlC,GAAXP,GAAkC,GAAZC,GAAqC,GAAdC,EACU,OAGA,GAG7C,GAAXF,GACFG,EAASxK,aAAa,WAAY,YAClCwK,EAASK,UAAUC,IAAI,cAGvBN,EAASO,gBAAgB,YACzBP,EAASK,UAAUG,OAAO,aAGZ,GAAZV,GACFG,EAAUzK,aAAa,WAAY,YACnCyK,EAAUI,UAAUC,IAAI,cAGxBL,EAAUM,gBAAgB,YAC1BN,EAAUI,UAAUG,OAAO,aAGX,GAAdT,GACFG,EAAY1K,aAAa,WAAY,YACrC0K,EAAYG,UAAUC,IAAI,cAG1BJ,EAAYK,gBAAgB,YAC5BL,EAAYG,UAAUG,OAAO,aApCjC,wBAAAL,EAAAjP,SAAA0O,OAnuBO1S,MAAAd,KAAAe,WAAA,SA2wBQqG,GA3wBRiN,EAAAC,GAAA,OAAAC,GAAAzT,MAAAd,KAAAe,WAAA,SAAAwT,KAAA,OAAAA,GAAAzU,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KA2wBP,SAAAsT,EAA2BpP,EAAU8H,GAArC,IAAA7H,EAAAoP,EAAAzO,EAAA,OAAA/E,IAAAS,KAAA,SAAAgT,GAAA,cAAAA,EAAA9S,KAAA8S,EAAA7S,MAAA,cAAA6S,EAAA7S,KAAA,EACuBxC,EAAgBkH,QAAQoO,uBAAuBvP,EAAU8H,GAAU/M,OAD1F,OAGE,IAFIkF,EADNqP,EAAAvS,KAEMsS,EAAO,IAAIhO,MACNT,EAAI,EAAGA,EAAIX,EAASuB,OAAQZ,IAC/BX,EAASW,GAAK,GAChByO,EAAK9N,KAAKtB,EAASW,IALzB,OAAA0O,EAAAtO,OAAA,SAQSqO,GART,wBAAAC,EAAA5P,SAAA0P,OA3wBO1T,MAAAd,KAAAe,WAAA,SAsxBQoL,GAtxBRyI,EAAAC,EAAAC,EAAAC,GAAA,OAAAC,GAAAlU,MAAAd,KAAAe,WAAA,SAAAiU,KAAA,OAAAA,GAAAlV,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KAsxBP,SAAA+T,EAAuB/H,EAAUhI,EAAewH,EAAoBwI,GAApE,IAAAC,EAAAC,EAAAC,EAAAC,EAAA3P,EAAA4P,EAAAC,EAAA,OAAAvU,IAAAS,KAAA,SAAA+T,GAAA,cAAAA,EAAA7T,KAAA6T,EAAA5T,MAAA,UAAA4T,EAAA7T,KAAA,EAEQuT,EAAc,EACdC,EAAcvR,SAASC,eAAe,eACtCuR,EAAmBxR,SAASC,eAAe,oBAE/CD,SAASC,eAAeoB,GAAejB,UAAY,GAEjC,OAAdiR,GAAqC,iBAAdA,EAR/B,CAAAO,EAAA5T,KAAA,YASMuT,EAAYhM,aAAa,WAAY,YACrCiM,EAAiBjM,aAAa,WAAY,YAGhB,MAAtBsD,EAbV,CAAA+I,EAAA5T,KAAA,SAAA4T,EAAA9Q,GAAA1D,IAAAyU,KAcwB5W,EAAgB6W,KAdxC,YAAAF,EAAAvC,GAAAuC,EAAA9Q,MAAAiR,KAAA,CAAAH,EAAA5T,KAAA,SAciByT,EAdjBG,EAAAvC,GAAAhK,MAemBvD,EAAI,EAfvB,aAe0BA,EAAI+G,EAAmBiB,OAAO/G,QAfxD,CAAA6O,EAAA5T,KAAA,YAiBqD,WAArC6K,EAAmBiB,OAAOhI,GAAGkQ,KAjB7C,CAAAJ,EAAA5T,KAAA,YAkBkB/C,EAAgB6W,IAAIL,GAAKQ,SAAWpJ,EAAmBiB,OAAOhI,GAAGoQ,gBAlBnF,CAAAN,EAAA5T,KAAA,gBAAA4T,EAAA5T,KAAA,GAmBoCsB,GAAS7D,EAAMjB,EAAI6I,OAAO7I,IAAKqO,EAAmBiB,OAAOhI,GAAGoQ,iBAnBhG,eAmBgBxX,EAnBhBkX,EAAAtT,KAAAsT,EAAAtC,GAoB8BgC,EApB9BM,EAAA5T,KAAA,GAoBmDmN,GAAU9J,EAAe3G,EAAamO,EAAmBiB,OAAOhI,GAAGoQ,gBAAiB7I,GApBvI,eAAAuI,EAAAO,GAAAP,EAAAtT,KAoBgBgT,EApBhBM,EAAAtC,GAAAsC,EAAAO,GAAAP,EAAArP,OAAA,oBAegET,IAfhE8P,EAAA5T,KAAA,iBAAA4T,EAAA5T,KAAA,iBA6BiB8D,EAAI,EA7BrB,aA6BwBA,EAAI+G,EAAmBiB,OAAO/G,QA7BtD,CAAA6O,EAAA5T,KAAA,YA8BqD,WAArC6K,EAAmBiB,OAAOhI,GAAGkQ,MAAqBzW,EAAmB6W,eAAiBvJ,EAAmBiB,OAAOhI,GAAGoQ,gBAAgBE,cA9BnJ,CAAAR,EAAA5T,KAAA,SAgCY,IAASyT,KADTC,EAAM,EACUzW,EAAgB6W,IAC1B7W,EAAgB6W,IAAIL,GAAKQ,SAAWpJ,EAAmBiB,OAAOhI,GAAGoQ,iBACnER,IAlChB,KAqCgBA,GAAOzW,EAAgB6W,IAAI/O,QArC3C,CAAA6O,EAAA5T,KAAA,gBAAA4T,EAAA5T,KAAA,GAsCkCsB,GAAS7D,EAAMjB,EAAI6I,OAAO7I,IAAKqO,EAAmBiB,OAAOhI,GAAGoQ,iBAtC9F,eAsCcxX,EAtCdkX,EAAAtT,KAAAsT,EAAAS,GAuC4Bf,EAvC5BM,EAAA5T,KAAA,GAuCiDmN,GAAU9J,EAAe3G,EAAamO,EAAmBiB,OAAOhI,GAAGoQ,gBAAiB7I,GAvCrI,QAAAuI,EAAAU,GAAAV,EAAAtT,KAuCcgT,EAvCdM,EAAAS,GAAAT,EAAAU,GAAA,QA6B8DxQ,IA7B9D8P,EAAA5T,KAAA,iBAAA4T,EAAA5T,KAAA,wBAAA4T,EAAA5T,KAAA,GA8C0BsB,GAAS7D,EAAMjB,EAAI6I,OAAO7I,IAAK6W,GA9CzD,eA8CM3W,EA9CNkX,EAAAtT,KAAAsT,EAAAW,GA+CoBjB,EA/CpBM,EAAA5T,KAAA,GA+CyCmN,GAAU9J,EAAe3G,EAAa2W,EAAYhI,GA/C3F,QAAAuI,EAAAY,GAAAZ,EAAAtT,KA+CMgT,EA/CNM,EAAAW,GAAAX,EAAAY,GAgDMjB,EAAYjB,gBAAgB,YAC5BkB,EAAiBlB,gBAAgB,YAjDvC,QAoDuB,GAAfgB,GACFmB,GAAa,mBArDnBb,EAAA5T,KAAA,iBAAA4T,EAAA7T,KAAA,GAAA6T,EAAAc,GAAAd,EAAA,SA0DI7Q,QAAQC,IAAI,wBAAA4Q,EAAAc,IACZD,GAAYb,EAAAc,IA3DhB,yBAAAd,EAAA3Q,SAAAmQ,EAAA,mBAtxBOnU,MAAAd,KAAAe,WAAA,SAq1BQoC,GAr1BRqT,EAAAC,EAAAC,GAAA,OAAAC,GAAA7V,MAAAd,KAAAe,WAAA,SAAA4V,KAAA,OAAAA,GAAA7W,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KAq1BP,SAAA0V,EAAwBtX,EAAMuX,EAAMC,GAApC,IAAAC,EAAAC,EAAAC,EAAA,OAAAhW,IAAAS,KAAA,SAAAwV,GAAA,cAAAA,EAAAtV,KAAAsV,EAAArV,MAAA,cAAAqV,EAAArV,KAAA,EAIsBE,MAAM8U,EAAM,CAC9B7U,QAAS,CACPC,eAAgB,mBAChBC,OAAQ,sBAPd,cAIE8U,EAJFE,EAAA/U,KAAA+U,EAAArV,KAAA,EAUwBmV,EAAY5U,OAVpC,cAUQ6U,EAVRC,EAAA/U,KAWE4U,EAAY,IAAIzX,EAAKiD,IAAI4U,SAASF,EAASH,GAX7CI,EAAA9Q,OAAA,SAYS2Q,GAZT,wBAAAG,EAAApS,SAAA8R,OAr1BO9V,MAAAd,KAAAe,WAAA,SAo2BQoD,GAp2BRiT,GAAA,OAAAC,GAAAvW,MAAAd,KAAAe,WAAA,SAAAsW,KAAA,OAAAA,GAAAvX,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KAo2BP,SAAAoW,EAA6B5K,GAA7B,IAAA6K,EAAA5R,EAAA6R,EAAAC,EAAAC,EAAAC,EAAA,OAAA1W,IAAAS,KAAA,SAAAkW,GAAA,cAAAA,EAAAhW,KAAAgW,EAAA/V,MAAA,OAIE,KAHI0V,EAAS1T,SAASC,eAAe,cAC9BG,UAAY,GAEV0B,EAAI,EAAGA,EAAI+G,EAAmBiB,OAAO/G,OAAQjB,IAC3C,GAALA,KACE6R,EAAM3T,SAASmF,cAAc,WAC7BI,aAAa,QAAS,OACtBqO,EAAM5T,SAASgU,eAAe,iBAElCL,EAAInO,YAAYoO,GAChBF,EAAOlO,YAAYmO,IAGoB,WAArC9K,EAAmBiB,OAAOhI,GAAGkQ,MAAqBnJ,EAAmBiB,OAAOhI,GAAGmS,QAAU,GAAK1Y,EAAmB6W,eAAiBvJ,EAAmBiB,OAAOhI,GAAGoQ,gBAAgBE,iBAC7KyB,EAAI7T,SAASmF,cAAc,WAC7BI,aAAa,QAASsD,EAAmBiB,OAAOhI,GAAGoQ,iBAEjD4B,EAAI9T,SAASgU,eAAenL,EAAmBiB,OAAOhI,GAAGoS,KAAO,KAAOrL,EAAmBiB,OAAOhI,GAAGmS,SACxGJ,EAAErO,YAAYsO,GAEdJ,EAAOlO,YAAYqO,IArBzB,wBAAAE,EAAA9S,SAAAwS,OAp2BOxW,MAAAd,KAAAe,WAAA,SA83BQiX,GA93BRC,EAAAC,EAAAC,EAAAC,GAAA,OAAAC,GAAAvX,MAAAd,KAAAe,WAAA,SAAAsX,KAAA,OAAAA,GAAAvY,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KA83BP,SAAAoX,EAA6B/Z,EAAa2O,EAAUqL,EAAMC,GAA1D,IAAAtS,EAAAD,EAAA,OAAAhF,IAAAS,KAAA,SAAA+W,GAAA,cAAAA,EAAA7W,KAAA6W,EAAA5W,MAAA,cACMqE,EAAgB,KADtBuS,EAAA7W,KAAA,EAAA6W,EAAA5W,KAAA,EAGiCtD,EAAYgI,QAAQc,SAASkR,GAAMpY,OAHpE,cAGQ8F,EAHRwS,EAAAtW,MAKyBmF,WAAW,WAC9BrB,EAAgB,wBAAAsB,OAA2BtB,EAAiBuB,MAAM,WAAW,IAEtEvB,EAAiBqB,WAAW,wCACnCrB,EAAmBA,EAAiBwB,QAAjB,yCACnBxB,EAAgB,wBAAAsB,OAA2BtB,GAA3BsB,OAA8CgR,IAVpEE,EAAA5W,KAAA,EAY0BE,MAAMkE,GAAkByB,KAAK,SAACC,GAAD,OAAcA,EAASvF,SAZ9E,OAYI8D,EAZJuS,EAAAtW,KAAAsW,EAAA5W,KAAA,wBAAA4W,EAAA7W,KAAA,GAAA6W,EAAA9T,GAAA8T,EAAA,SAgBc,iFAhBdA,EAAA5W,KAAA,GAiB0BE,MADZ,kFACuB2F,KAAK,SAACC,GAAD,OAAcA,EAASvF,SAjBjE,QAiBI8D,EAjBJuS,EAAAtW,KAkBIyC,QAAQC,IAAI,YAAc2T,EAA1BC,EAAA9T,IAlBJ,eAAA8T,EAAArS,OAAA,SAoBSF,GApBT,yBAAAuS,EAAA3T,SAAAwT,EAAA,mBA93BOxX,MAAAd,KAAAe,WAAA,SAq5BQiO,GAr5BR0J,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAC,GAAAjY,MAAAd,KAAAe,WAAA,SAAAgY,KAAA,OAAAA,GAAAjZ,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KAq5BP,SAAA8X,EAAyB9T,EAAe3G,EAAaiH,EAAgB0H,EAAU+L,GAA/E,IAAAnT,EAAAoI,EAAA7I,EAAAD,EAAA8T,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtU,EAAA,OAAA1E,IAAAS,KAAA,SAAAwY,GAAA,cAAAA,EAAAtY,KAAAsY,EAAArY,MAAA,cAAAqY,EAAArY,KAAA,EACsBtD,EAAYgI,QAAQwR,OAAO5X,OADjD,UACM2F,EADNoU,EAAA/X,MAKM8W,EALN,CAAAiB,EAAArY,KAAA,gBAAAqY,EAAArY,KAAA,EAMyB9C,EAAmBwH,QAAQiM,WAAWhN,GAAgBrF,OAN/E,cAMQiF,EANR8U,EAAA/X,KAAA+X,EAAArY,KAAA,EAOqBuF,GAAYhC,EAAU8H,GAP3C,OAOI7H,EAPJ6U,EAAA/X,KAQI+L,EAAiB7I,EAASuB,OAR9BsT,EAAArY,KAAA,wBAAAqY,EAAArY,KAAA,GAW2BtD,EAAYgI,QAAQ6H,UAAUlB,GAAU/M,OAXnE,QAWI+N,EAXJgM,EAAA/X,KAAA,QA6CI,IA/BE+W,EAAerV,SAASC,eAAeoB,GAd7CgV,EAAAtY,KAAA,GA+BQtB,GAAO,KAAOA,EAAM,IACtB4Y,EAAa5S,UAAY,iBAElBhG,GAAO,KAAOA,EAAM,IAC3B4Y,EAAa5S,UAAY,iBAElBhG,GAAO,KAAQA,EAAM,KAC5B4Y,EAAa5S,UAAY,iBAEnBhG,GAAO,OACb4Y,EAAa5S,UAAY,kBAG3B1C,GAAa,cA5CjBqW,EAAA,SA6CatU,GACP7F,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KAAC,SAAAiZ,IAAA,IAAA5B,EAAArS,EAAAd,EAAA6C,EAAAmS,EAAA,OAAAnZ,IAAAS,KAAA,SAAA2Y,GAAA,cAAAA,EAAAzY,KAAAyY,EAAAxY,MAAA,WAGKoX,EAHL,CAAAoB,EAAAxY,KAAA,WAIoB,GAAbwD,EAASM,GAJhB,CAAA0U,EAAAxY,KAAA,eAAAwY,EAAAjU,OAAA,iBAOGmS,EAAOlT,EAASM,GAPnB0U,EAAAxY,KAAA,sBAAAwY,EAAAxY,KAAA,EAUgBtD,EAAYgI,QAAQ8H,oBAAoBnB,EAAUvH,GAAGxF,OAVrE,OAUGoY,EAVH8B,EAAAlY,KAAA,cAAAkY,EAAAxY,KAAA,GAa6BmW,GAAczZ,EAAa2O,EAAUqL,EAAM,aAbxE,eAaOrS,EAbPmU,EAAAlY,KAAAkY,EAAAxY,KAAA,GAcwB9C,EAAmBwH,QAAQiM,WAAWhN,GAAgBrF,OAd9E,QAkDC,GApCMiF,EAdPiV,EAAAlY,MAiBCgX,EAAUtV,SAASmF,cAAc,QACzBC,GAAK,MAAQ7D,EAAW,IAAMmT,EACtCY,EAAQ7S,UAAY,WAEpB8S,EAAWvV,SAASmF,cAAc,UACzBI,aAAa,KAAM,MAAQhE,EAAWmT,GAC/CY,EAAQ9P,YAAY+P,IAEpBC,EAAWxV,SAASmF,cAAc,OACzB1C,UAAY,WACrB8S,EAAS/P,YAAYgQ,IAErBC,EAAQzV,SAASmF,cAAc,OACzB1C,UAAY,QAClB+S,EAAShQ,YAAYiQ,IAErBC,EAAS1V,SAASmF,cAAc,OACzBC,GAAK,MAAQ7D,EAAWmT,EAC/BgB,EAAOjT,UAAY,SACnBiT,EAAOtV,UAAY,GACnBqV,EAAMjQ,YAAYkQ,IAElBC,EAAS3V,SAASmF,cAAc,UACzBI,aAAa,OAAQ,YAC5BoQ,EAAOvQ,GAAKzD,EAAiB,IAAM+S,EACnCiB,EAAOlT,UAAY,SACnBgT,EAAMjQ,YAAYmQ,IAElBC,EAAS5V,SAASmF,cAAc,UACzB1C,UAAY,SACnBmT,EAAOa,QAAUd,EAAOvQ,GACxBqQ,EAAMjQ,YAAYoQ,GAEdvT,EAAa,MAAUiD,SAAS,OAClCuQ,EAAS7V,SAASmF,cAAc,SAC1Bf,EAAapE,SAASmF,cAAc,UACtC9C,EAAa,MAAUoB,WAAW,WACpCW,EAAWmB,aAAa,MAAxB,wBAAA7B,OAAuDrB,EAAa,MAAUsB,MAAM,WAAW,KAG/FS,EAAWmB,aAAa,MAAOlD,EAAa,OAE9C+B,EAAWmB,aAAa,OAAQ,aAChCsQ,EAAOrQ,YAAYpB,QAGnB,IACEyR,EAAS7V,SAASmF,cAAc,QAC5BoR,EAAUlU,EAAa,OACfoB,WAAW,WACrB8S,EAAO,wBAAA7S,OAA2B6S,EAAQ3S,QAAQ,UAAW,KAEtD2S,EAAQ9S,WAAW,yCAC1B8S,EAAUA,EAAQ3S,QAAR,wEAEZiS,EAAOtQ,aAAa,MAAOgR,GAE7B,MAAMG,GACJ3V,QAAQC,IAAI,aAAc0V,GAC1Bb,EAAOtQ,aAAa,MAAO,cAG/BsQ,EAAOtQ,aAAa,MAAO,uBAC3BsQ,EAAOpT,UAAU,SACjBmT,EAAOpQ,YAAYqQ,IAEnBC,EAAS9V,SAASmF,cAAc,OACzB1C,UAAY,SACnB8S,EAAS/P,YAAYsQ,IAErBC,EAAW/V,SAASmF,cAAc,OACzB1C,UAAY,WACrBqT,EAAOtQ,YAAYuQ,IAGnBC,EAAUhW,SAASmF,cAAc,OACzBC,GAAK,MAAQ7D,EAAWmT,EAChCsB,EAAQvT,UAAY,UACpBuT,EAAQ5V,WAAa6B,EAAQc,OAAS,GAAKd,EAAQyD,UAAU,EAAG,IAAMzD,GAAlD,MAAqEyS,EAAK3R,OAAS,EAAI2R,EAAKhP,UAAU,EAAG,GAAKgP,GAClIqB,EAASvQ,YAAYwQ,IAErBC,EAAUjW,SAASmF,cAAc,OACzBC,GAAK,MAAQ7D,EAAWmT,EAChCuB,EAAQxT,UAAY,UACpBwT,EAAQ7V,UAAY,GACpB2V,EAASvQ,YAAYyQ,IAErBC,EAASlW,SAASmF,cAAc,WACzB6M,KAAO,SACdkE,EAAOzT,UAAY,SACnByT,EAAOhW,MAAQ,qCACfgW,EAAO9V,UAAY,IAGjB8V,EAAOvQ,QADLyP,EACe,WACfuB,GAAWpV,EAAW,IAAMmT,EAAM,SAAUrP,OAK7B,WACfuR,GAAmBrV,EAAW,IAAMmT,EAAO,IAAM/S,EAAgB,SAAU0D,OAK/E0Q,EAASvQ,YAAY0Q,IAErBC,EAAUnW,SAASmF,cAAc,OACzBC,GAAK,OAAS7D,EAAWmT,EACjCyB,EAAQ1T,UAAY,UACpB0T,EAAQ/V,UAAY,GACpB2V,EAASvQ,YAAY2Q,GAErBd,EAAa7P,YAAY8P,GAnI1B,yBAAAkB,EAAAvV,SAAAqV,KAADra,IADO6F,EAAI,EAAGA,EAAIuI,EAAgBvI,IAAIsU,EAA/BtU,GA7Cb,OAqLI/B,GAAa,IArLjBsW,EAAA9T,OAAA,SAsLW8H,GAtLX,QAAAgM,EAAAtY,KAAA,GAAAsY,EAAAvV,GAAAuV,EAAA,UA2LI5D,GAAa/X,EAAc,iCAC3BqG,QAAQC,IAAI,YAAZqV,EAAAvV,IA5LJ,yBAAAuV,EAAApV,SAAAkU,EAAA,oBAr5BOlY,MAAAd,KAAAe,WAAA,SAwwCQ2Z,KAxwCR,OAAAC,GAAA7Z,MAAAd,KAAAe,WAAA,SAAA4Z,KAAA,OAAAA,GAAA7a,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KAwwCP,SAAA0Z,IAAA,OAAA3Z,IAAAS,KAAA,SAAAmZ,GAAA,cAAAA,EAAAjZ,KAAAiZ,EAAAhZ,MAAA,OACEiZ,IAAU,GADZ,wBAAAD,EAAA/V,SAAA8V,OAxwCO9Z,MAAAd,KAAAe,WAAA,SA4wCQga,KA5wCR,OAAAC,GAAAla,MAAAd,KAAAe,WAAA,SAAAia,KAAA,OAAAA,GAAAlb,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KA4wCP,SAAA+Z,IAAA,OAAAha,IAAAS,KAAA,SAAAwZ,GAAA,cAAAA,EAAAtZ,KAAAsZ,EAAArZ,MAAA,OACEiZ,IAAU,GADZ,wBAAAI,EAAApW,SAAAmW,OA5wCOna,MAAAd,KAAAe,WAAA,SAgxCQoa,KAhxCR,OAAAC,GAAAta,MAAAd,KAAAe,WAAA,SAAAqa,KAAA,OAAAA,GAAAtb,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KAgxCP,SAAAma,IAAA,OAAApa,IAAAS,KAAA,SAAA4Z,GAAA,cAAAA,EAAA1Z,KAAA0Z,EAAAzZ,MAAA,cAAAyZ,EAAAzZ,KAAA,EACQuC,EAAW,wBADnB,wBAAAkX,EAAAxW,SAAAuW,OAhxCOva,MAAAd,KAAAe,WAAA,SAoxCQ+Z,GApxCRS,GAAA,OAAAC,GAAA1a,MAAAd,KAAAe,WAAA,SAAAya,KAAA,OAAAA,GAAA1b,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KAoxCP,SAAAua,EAAyB1L,GAAzB,IAAA2L,EAAAC,EAAAC,EAAAC,EAAAlW,EAAAmW,EAAA1W,EAAAY,EAAA+V,EAAA,OAAA9a,IAAAS,KAAA,SAAAsa,GAAA,cAAAA,EAAApa,KAAAoa,EAAAna,MAAA,UAAAma,EAAApa,KAAA,EAEiB,MAATtD,EAFR,CAAA0d,EAAAna,KAAA,eAAAma,EAAA5V,OAAA,wBAMI1G,GAAY,EANhBsc,EAAAna,KAAA,EAOU+B,GAAa,cAPvB,OAYI,IAHMuB,EAAetB,SAASC,eAAe,wBACzC6X,EAAWxW,EAAa8W,qBAAqB,KAC7CL,EAAW,GACNjW,EAAI,EAAGA,EAAIgW,EAAS/U,OAAQjB,IAEjB,aADlBkW,EAAQF,EAAShW,IACPkQ,MAAuC,GAAjBgG,EAAMK,SACpCN,EAASjV,KAAKkV,GAIdC,EAAQ,GAIH9V,EAAI,EAvBjB,aAuBoBA,EAAI4V,EAAShV,QAvBjC,CAAAoV,EAAAna,KAAA,gBAwBUka,EAAM,GACVA,EAAMH,EAAS5V,GAAGiD,GAAGzB,MAAM,KAzBjCwU,EAAAna,KAAA,GA0BuB9C,EAAmBwH,QAAQiM,WAAWuJ,EAAI,IAAI5b,OA1BrE,QA0BMiF,EA1BN4W,EAAA7Z,KA4BM2Z,EAAMnV,KAAKoV,EAAI,IA5BrB,QAuByC/V,IAvBzCgW,EAAAna,KAAA,qBA+BQkO,EA/BR,CAAAiM,EAAAna,KAAA,gBAAAma,EAAAna,KAAA,GAgCY9C,EAAmBwH,QAAQwJ,QAAQ3K,EAAU0W,GAAOxZ,KAAK,CAAEmM,KAAMnQ,IAhC7E,QAAA0d,EAAAna,KAAA,wBAAAma,EAAAna,KAAA,GAmCY9C,EAAmBwH,QAAQiI,MAAMpJ,EAAU0W,GAAOxZ,KAAK,CAAEmM,KAAMnQ,IAnC3E,QAqCI6c,KACAzb,GAAY,EAtChBsc,EAAAna,KAAA,iBAAAma,EAAApa,KAAA,GAAAoa,EAAArX,GAAAqX,EAAA,SA0CIpX,QAAQC,IAAI,eAAAmX,EAAArX,IA1ChB,eAAAqX,EAAAna,KAAA,GA4CQ+B,GAAa,IA5CrB,yBAAAoY,EAAAlX,SAAA2W,EAAA,mBApxCO3a,MAAAd,KAAAe,WAAA,SAk1CQob,KAl1CR,OAAAC,GAAAtb,MAAAd,KAAAe,WAAA,SAAAqb,KAAA,OAAAA,GAAAtc,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KAk1CP,SAAAmb,IAAA,IAAAlX,EAAAwW,EAAAC,EAAAC,EAAAlW,EAAA2W,EAAAC,EAAAT,EAAAC,EAAA3W,EAAA,OAAAnE,IAAAS,KAAA,SAAA8a,GAAA,cAAAA,EAAA5a,KAAA4a,EAAA3a,MAAA,UACe,MAATvD,EADN,CAAAke,EAAA3a,KAAA,eAAA2a,EAAApW,OAAA,iBASE,IAJMjB,EAAetB,SAASC,eAAe,0BACzC6X,EAAWxW,EAAa8W,qBAAqB,KAC7CL,EAAW,GAENjW,EAAI,EAAGA,EAAIgW,EAAS/U,OAAQjB,IAEjB,aADlBkW,EAAQF,EAAShW,IACPkQ,MACR+F,EAASjV,KAAKkV,GAZpB,GAgByB,GAAnBD,EAAShV,OAhBf,CAAA4V,EAAA3a,KAAA,eAAA2a,EAAApW,OAAA,iBAoBMkW,GAAa,EAEbR,EAAQ,IAEE,EAELnW,EAAI,EA1Bf,aA0BkBA,EAAIiW,EAAShV,QA1B/B,CAAA4V,EAAA3a,KAAA,YA2BQka,EAAM,GACVA,EAAMH,EAASjW,GAAGsD,GAAGxB,QAAQ,MAAO,IAAID,MAAM,KAE5B,GAAd8U,EA9BR,CAAAE,EAAA3a,KAAA,gBA+BM0a,EAAUR,EAAI,GA/BpBS,EAAA3a,KAAA,GAgCY+B,GAAa,eAhCzB,eAAA4Y,EAAA3a,KAAA,GAiCyB4a,GAAcF,GAjCvC,WAmCwB,IAFlBD,EAjCNE,EAAAra,MAAA,CAAAqa,EAAA3a,KAAA,gBAoCkB,EApClB2a,EAAA3a,KAAA,GAqCc+B,GAAa,IArC3B,eAAA4Y,EAAApW,OAAA,yBAAAoW,EAAA3a,KAAA,GAwCY+B,GAAa,cAxCzB,QA2CIkY,EAAMnV,KAAKoV,EAAI,IA3CnB,QA0BuCpW,IA1BvC6W,EAAA3a,KAAA,wBAAA2a,EAAA3a,KAAA,GA8CY6a,GAAYH,GA9CxB,YAAAC,EAAAra,KAAA,CAAAqa,EAAA3a,KAAA,gBAAA2a,EAAA3a,KAAA,GA+CyB9C,EAAmBwH,QAAQiM,WAAW+J,GAASpc,OA/CxE,eA+CQiF,EA/CRoX,EAAAra,KAAAqa,EAAA3a,KAAA,GAgDU9C,EAAmBwH,QAAQoW,MAAMvX,EAAU0W,GAAOxZ,KAAK,CAAEmM,KAAMnQ,IAhDzE,QAAAke,EAAA3a,KAAA,wBAAA2a,EAAA3a,KAAA,GAmDU9C,EAAmBwH,QAAQqW,SAASL,EAAST,GAAO,GAAMxZ,KAAK,CAAEmM,KAAMnQ,IAnDjF,eAAAke,EAAA3a,KAAA,GAqDQ6M,KArDR,eAAA8N,EAAA3a,KAAA,GAsDQ+B,GAAa,IAtDrB,yBAAA4Y,EAAA1X,SAAAuX,OAl1COvb,MAAAd,KAAAe,WAAA,SA64CQ8b,KA74CR,OAAAC,GAAAhc,MAAAd,KAAAe,WAAA,SAAA+b,KAAA,OAAAA,GAAAhd,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KA64CP,SAAA6b,IAAA,IAAAC,EAAArB,EAAAC,EAAAC,EAAAlW,EAAA2W,EAAAC,EAAAT,EAAAC,EAAA3W,EAAA,OAAAnE,IAAAS,KAAA,SAAAub,GAAA,cAAAA,EAAArb,KAAAqb,EAAApb,MAAA,UAAAob,EAAArb,KAAA,EAEiB,MAATtD,EAFR,CAAA2e,EAAApb,KAAA,eAAAob,EAAA7W,OAAA,wBAAA6W,EAAApb,KAAA,EAKU+B,GAAa,cALvB,OAUI,IAHMuB,EAAetB,SAASC,eAAe,0BACzC6X,EAAWxW,EAAa8W,qBAAqB,KAC7CL,EAAW,GACNjW,EAAI,EAAGA,EAAIgW,EAAS/U,OAAQjB,IAEjB,aADlBkW,EAAQF,EAAShW,IACPkQ,MAAuC,GAAjBgG,EAAMK,SACpCN,EAASjV,KAAKkV,GAIdS,GAAa,EAEbR,EAAQ,IAEE,EAELnW,EAAI,EAvBjB,aAuBoBA,EAAIiW,EAAShV,QAvBjC,CAAAqW,EAAApb,KAAA,YAwBUka,EAAM,GACVA,EAAMH,EAASjW,GAAGsD,GAAGxB,QAAQ,MAAO,IAAID,MAAM,KAE5B,GAAd8U,EA3BV,CAAAW,EAAApb,KAAA,gBA4BQ0a,EAAUR,EAAI,GA5BtBkB,EAAApb,KAAA,GA6BgB+B,GAAa,IA7B7B,eAAAqZ,EAAApb,KAAA,GA8BgB+B,GAAa,eA9B7B,eAAAqZ,EAAApb,KAAA,GA+B2B4a,GAAcF,GA/BzC,WAiC0B,IAFlBD,EA/BRW,EAAA9a,MAAA,CAAA8a,EAAApb,KAAA,gBAkCoB,EAlCpBob,EAAApb,KAAA,GAmCgB+B,GAAa,IAnC7B,eAAAqZ,EAAA7W,OAAA,yBAAA6W,EAAApb,KAAA,GAsCc+B,GAAa,cAtC3B,QAwCMkY,EAAMnV,KAAKoV,EAAI,IAxCrB,QAuByCpW,IAvBzCsX,EAAApb,KAAA,wBAAAob,EAAApb,KAAA,GA2Cc6a,GAAYH,GA3C1B,YAAAU,EAAA9a,KAAA,CAAA8a,EAAApb,KAAA,gBAAAob,EAAApb,KAAA,GA4C2B9C,EAAmBwH,QAAQiM,WAAW+J,GAASpc,OA5C1E,eA4CUiF,EA5CV6X,EAAA9a,KAAA8a,EAAApb,KAAA,GA6CY9C,EAAmBwH,QAAQoW,MAAMvX,EAAU0W,GAAOxZ,KAAK,CAAEmM,KAAMnQ,IA7C3E,QAAA2e,EAAApb,KAAA,wBAAAob,EAAApb,KAAA,GAgDY9C,EAAmBwH,QAAQqW,SAASL,EAAST,GAAO,GAAMxZ,KAAK,CAAEmM,KAAMnQ,IAhDnF,eAAA2e,EAAApb,KAAA,GAkDU6M,KAlDV,eAAAuO,EAAApb,KAAA,GAmDU+B,GAAa,IAnDvB,QAAAqZ,EAAApb,KAAA,iBAAAob,EAAArb,KAAA,GAAAqb,EAAAtY,GAAAsY,EAAA,SAsDIrY,QAAQC,IAAI,eAAAoY,EAAAtY,IAtDhB,eAAAsY,EAAApb,KAAA,GAwDQ+B,GAAa,IAxDrB,yBAAAqZ,EAAAnY,SAAAiY,EAAA,mBA74COjc,MAAAd,KAAAe,WAAA,SAy8CQ2N,KAz8CR,OAAAwO,GAAApc,MAAAd,KAAAe,WAAA,SAAAmc,KAAA,OAAAA,GAAApd,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KAy8CP,SAAAic,IAAA,OAAAlc,IAAAS,KAAA,SAAA0b,GAAA,cAAAA,EAAAxb,KAAAwb,EAAAvb,MAAA,cAAAub,EAAAvb,KAAA,EACQiK,IADR,cAEElH,QAAQC,IAAIhG,GAFdue,EAAAvb,KAAA,EAGQsC,GAActF,GAHtB,cAAAue,EAAAvb,KAAA,EAKQuC,EAAW,wBALnB,cAAAgZ,EAAAvb,KAAA,EAMQ+B,GAAa,IANrB,wBAAAwZ,EAAAtY,SAAAqY,OAz8COrc,MAAAd,KAAAe,WAAA,SAk9CQ0b,GAl9CRY,GAAA,OAAAC,GAAAxc,MAAAd,KAAAe,WAAA,SAAAuc,KAAA,OAAAA,GAAAxd,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KAk9CP,SAAAqc,EAA6BhB,GAA7B,IAAAiB,EAAA,OAAAvc,IAAAS,KAAA,SAAA+b,GAAA,cAAAA,EAAA7b,KAAA6b,EAAA5b,MAAA,cAAA4b,EAAA7b,KAAA,EAAA6b,EAAA5b,KAAA,EAE6BsB,GAAS7D,EAAMjB,EAAI6I,OAAO7I,IAAKke,GAF5D,cAEQiB,EAFRC,EAAAtb,KAAAsb,EAAA5b,KAAA,EAGwB2b,EAAajX,QAAQmX,iBAAiBpf,EAASa,GAAoBgB,OAH3F,UAImB,GAJnBsd,EAAAtb,KAAA,CAAAsb,EAAA5b,KAAA,gBAAA4b,EAAA5b,KAAA,GAKY2b,EAAajX,QAAQoX,kBAAkBxe,GAAoB,GAAMmD,KAAK,CAAEmM,KAAMnQ,IAL1F,eAAAmf,EAAArX,OAAA,UAOW,GAPX,eAAAqX,EAAA7b,KAAA,GAAA6b,EAAA9Y,GAAA8Y,EAAA,SAUI7Y,QAAQC,IAAI0X,GACZ3X,QAAQC,IAAI,mBAAA4Y,EAAA9Y,IAXhB8Y,EAAArX,OAAA,UAYW,GAZX,yBAAAqX,EAAA3Y,SAAAyY,EAAA,mBAl9COzc,MAAAd,KAAAe,WAAA,SAm+CQ2b,GAn+CRkB,GAAA,OAAAC,GAAA/c,MAAAd,KAAAe,WAAA,SAAA8c,KAAA,OAAAA,GAAA/d,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KAm+CP,SAAA4c,EAA2BvB,GAA3B,IAAAwB,EAAAzI,EAAA,OAAArU,IAAAS,KAAA,SAAAsc,GAAA,cAAAA,EAAApc,KAAAoc,EAAAnc,MAAA,OACMkc,GAAO,EADbC,EAAApc,KAAA,EAAAoc,EAAArZ,GAAA1D,IAAAyU,KAGoB5W,EAAgB6W,KAHpC,WAAAqI,EAAA9K,GAAA8K,EAAArZ,MAAAiR,KAAA,CAAAoI,EAAAnc,KAAA,YAGayT,EAHb0I,EAAA9K,GAAAhK,MAIUpK,EAAgB6W,IAAIL,GAAKQ,SAAWyG,EAJ9C,CAAAyB,EAAAnc,KAAA,eAKQkc,GAAO,EALfC,EAAA5X,OAAA,mBAAA4X,EAAAnc,KAAA,gBAAAmc,EAAAnc,KAAA,iBAAAmc,EAAApc,KAAA,GAAAoc,EAAA7K,GAAA6K,EAAA,SAWIpZ,QAAQC,IAAI,iBAAAmZ,EAAA7K,IAXhB,eAAA6K,EAAA5X,OAAA,SAaS2X,GAbT,yBAAAC,EAAAlZ,SAAAgZ,EAAA,mBAn+COhd,MAAAd,KAAAe,WAAA,SAm/CQuV,GAn/CR2H,GAAA,OAAAC,GAAApd,MAAAd,KAAAe,WAAA,SAAAmd,KAAA,OAAAA,GAAApe,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KAm/CP,SAAAid,EAA4BC,GAA5B,IAAAjZ,EAAAkZ,EAAAC,EAAAC,EAAAC,EAAA,OAAAvd,IAAAS,KAAA,SAAA+c,GAAA,cAAAA,EAAA7c,KAAA6c,EAAA5c,MAAA,OACQsD,EAAetB,SAASC,eAAe,2BAEvCua,EAASxa,SAASmF,cAAc,QAC/B1C,UAAY,gBAEbgY,EAAMza,SAASmF,cAAc,UAC/BI,aAAa,OAAQ,YACzBkV,EAAIrV,GAAK,MACTqV,EAAIhY,UAAY,YAEViY,EAAM1a,SAASmF,cAAc,UAC/BsR,QAAUgE,EAAIrV,IAEZuV,EAAS3a,SAASmF,cAAc,OAC/B/E,UAAYma,EACnBI,EAAOlY,UAAY,eAEnB+X,EAAOhV,YAAYiV,GACnBD,EAAOhV,YAAYkV,GAEnBF,EAAOhV,YAAYmV,GACnBrZ,EAAakE,YAAYgV,GAtB3B,yBAAAI,EAAA3Z,SAAAqZ,OAn/COrd,MAAAd,KAAAe,WAAA,SA4gDQ2O,KA5gDR,OAAAgP,GAAA5d,MAAAd,KAAAe,WAAA,SAAA2d,KAAA,OAAAA,GAAA5e,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KA4gDP,SAAAyd,IAAA,IAAAC,EAAA,OAAA3d,IAAAS,KAAA,SAAAmd,GAAA,cAAAA,EAAAjd,KAAAid,EAAAhd,MAAA,QACM+c,EAAW/a,SAASmF,cAAc,QAC7BC,GAAK,YAGdpF,SAASib,KAAK/a,MAAMgb,UAAY,SAChClb,SAASib,KAAKE,OAAOJ,GANvB,wBAAAC,EAAA/Z,SAAA6Z,OA5gDO7d,MAAAd,KAAAe,WAAA,SAqhDQke,GArhDRC,EAAAC,EAAAC,GAAA,OAAAC,GAAAve,MAAAd,KAAAe,WAAA,SAAAse,KAAA,OAAAA,GAAAvf,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KAqhDP,SAAAoe,EAAuBC,EAAQC,EAAUjH,GAAzC,OAAAtX,IAAAS,KAAA,SAAA+d,GAAA,cAAAA,EAAA7d,KAAA6d,EAAA5d,MAAA,cAAA4d,EAAA7d,KAAA,EAAA6d,EAAA5d,KAAA,EAEU+B,GAAa,kBAFvB,cAAA6b,EAAA5d,KAAA,EAIwBsB,GAAS7D,EAAMjB,EAAI6I,OAAO7I,IAAKkhB,GAJvD,cAIIhhB,EAJJkhB,EAAAtd,KAAAsd,EAAA5d,KAAA,EAMctD,EAAYgI,QAAQmX,iBAAiBpf,EAASa,GAAoBgB,OANhF,UAAAsf,EAAA9a,GAAA8a,EAAAtd,KAMwF,GANxFsd,EAAA9a,GAAA,CAAA8a,EAAA5d,KAAA,gBAAA4d,EAAA5d,KAAA,GAOYtD,EAAYgI,QAAQoX,kBAAkBxe,GAAoB,GAAMmD,KAAK,CAAEmM,KAAMnQ,IAPzF,eAAAmhB,EAAA5d,KAAA,GAUUtD,EAAYgI,QAAQmZ,iBAAiBphB,EAASkhB,EAAUjH,GAAMjW,KAAK,CAAEmM,KAAMnQ,IAVrF,eAAAmhB,EAAA5d,KAAA,GAWU6M,KAXV,eAAA+Q,EAAA5d,KAAA,GAaU+B,GAAa,IAbvB,QAAA6b,EAAA5d,KAAA,wBAAA4d,EAAA7d,KAAA,GAAA6d,EAAAvM,GAAAuM,EAAA,SAgBI7a,QAAQC,IAAR4a,EAAAvM,IAhBJuM,EAAA5d,KAAA,GAiBU+B,GAAa,IAjBvB,yBAAA6b,EAAA3a,SAAAwa,EAAA,mBArhDOxe,MAAAd,KAAAe,WAAA,SA0iDQ4e,KA1iDR,OAAAC,GAAA9e,MAAAd,KAAAe,WAAA,SAAA6e,KAAA,OAAAA,GAAA9f,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KA0iDP,SAAA2e,IAAA,IAAAC,EAAAnE,EAAAE,EAAAlW,EAAAoW,EAAA3W,EAAAW,EAAAga,EAAA,OAAA9e,IAAAS,KAAA,SAAAse,GAAA,cAAAA,EAAApe,KAAAoe,EAAAne,MAAA,cAAAme,EAAAne,KAAA,EACQ+B,GAAa,cADrB,UAAAoc,EAAApe,KAAA,EAGQuD,EAAetB,SAASC,eAAe,kBACvCnD,IACFwE,EAAetB,SAASC,eAAe,6BAErC6X,EAAWxW,EAAa8W,qBAAqB,MAGpCrV,OAAS,GAV1B,CAAAoZ,EAAAne,KAAA,gBAAAme,EAAAne,KAAA,EAY0B5C,EAAcsH,QAAQmX,iBAAiBpf,EAASa,GAAoBgB,OAZ9F,UAaqB,GAbrB6f,EAAA7d,KAAA,CAAA6d,EAAAne,KAAA,gBAAAme,EAAAne,KAAA,GAcc5C,EAAcsH,QAAQoX,kBAAkBxe,GAAoB,GAC/DmD,KAAK,CACJmM,KAAMnQ,EACN2hB,SAAU1N,OAAO9T,KAjB7B,QAqBekH,EAAI,EArBnB,aAqBsBA,EAAIgW,EAAS/U,QArBnC,CAAAoZ,EAAAne,KAAA,YAuB0B,UADlBga,EAAQF,EAAShW,IACPkQ,MAAoC,GAAjBgG,EAAMK,QAvB3C,CAAA8D,EAAAne,KAAA,eAwBoB,GACVka,EAAMF,EAAM5S,GAAGzB,MAAM,KAEjBpC,EAAW2W,EAAI,GACfhW,EAAQgW,EAAI,GACZgE,EAAWhE,EAAI,GA7B7BiE,EAAAne,KAAA,GA+BgB9C,EAAmBwH,QAAQ2Z,WAAW9a,EAAUW,EAAOga,GAC1Dzd,KAAK,CACJmM,KAAMnQ,IAjCpB,eAAA0hB,EAAA5Z,OAAA,oBAqB2CT,IArB3Cqa,EAAAne,KAAA,iBAAAme,EAAAne,KAAA,iBAAAme,EAAApe,KAAA,GAAAoe,EAAArb,GAAAqb,EAAA,SAyCIpb,QAAQC,IAARmb,EAAArb,IAzCJ,eAAAqb,EAAAne,KAAA,GA2CQ+B,GAAa,IA3CrB,yBAAAoc,EAAAlb,SAAA+a,EAAA,mBA1iDO/e,MAAAd,KAAAe,WAAA,SAwlDQyO,KAxlDR,OAAA2Q,GAAArf,MAAAd,KAAAe,WAAA,SAAAof,KAAA,OAAAA,GAAArgB,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KAwlDP,SAAAkf,IAAA,OAAAnf,IAAAS,KAAA,SAAA2e,GAAA,cAAAA,EAAAze,KAAAye,EAAAxe,MAAA,OACE,IACEgC,SAASC,eAAe,aAAasQ,SACrCvQ,SAASib,KAAK/a,MAAMgb,UAAY,GAElC,MAAOtP,IALT,wBAAA4Q,EAAAvb,SAAAsb,OAxlDOtf,MAAAd,KAAAe,WAAA,SAimDQ0Z,GAjmDR6F,EAAAC,GAAA,OAAAC,GAAA1f,MAAAd,KAAAe,WAAA,SAAAyf,KAAA,OAAAA,GAAA1gB,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KAimDP,SAAAuf,EAAkCC,EAAMC,GAAxC,IAAAC,EAAAxb,EAAAyF,EAAAgW,EAAAC,EAAAC,EAAA3R,EAAA4R,EAAAC,EAAAC,EAAAC,EAAA9C,EAuEW+C,EAvEX,OAAAngB,IAAAS,KAAA,SAAA2f,GAAA,cAAAA,EAAAzf,KAAAyf,EAAAxf,MAAA,UAuEWuf,EAvEX,SAuEoBlY,GACH,UAATA,GACF+V,GAAQgC,EAAOE,EAAEjY,MAAO0X,EAAK,IAE/BpR,KACAuR,EAAUhd,MAAMiQ,QAAU,OAC1BnQ,SAASyd,UAAY,KACrBX,EAASzX,IA7EXwG,KAEIkR,EAAO,GACXA,EAAOF,EAAKlZ,MAAM,KACdpC,EAAWwb,EAAK,GAGpB/c,SAASC,eAAe,MAAQ8c,EAAK,GAAK,IAAMA,EAAK,IAAIta,UAAU,uBAGlD,GAAblB,EAXN,CAAAic,EAAAxf,KAAA,gBAAAwf,EAAAxf,KAAA,EAYwBsB,GAAS7D,EAAMjB,EAAI6I,OAAO7I,IAAKuiB,EAAK,IAZ5D,OAYIriB,EAZJ8iB,EAAAlf,KAAAkf,EAAAxf,KAAA,wBAAAwf,EAAAxf,KAAA,GAemB9C,EAAmBwH,QAAQQ,MAAM3B,GAAUjF,OAf9D,eAeI0K,EAfJwW,EAAAlf,KAAAkf,EAAAxf,KAAA,GAgBwBsB,GAAS7D,EAAMjB,EAAI6I,OAAO7I,IAAKwM,EAAO5D,YAhB9D,QAgBI1I,EAhBJ8iB,EAAAlf,KAAA,eAAAkf,EAAAxf,KAAA,GAmBuBtD,EAAYgI,QAAQwR,OAAO5X,OAnBlD,QAmBM0gB,EAnBNQ,EAAAlf,KAsBM2e,EAAOjd,SAASC,eAAe,eAC/BnD,IACFmgB,EAAOjd,SAASC,eAAe,uBAG7Bid,EAAYld,SAASC,eAAe,yBACpCsL,EAAMvL,SAASC,eAAe,kBAC9BnD,IACFyO,EAAMvL,SAASC,eAAe,2BAG5Bkd,EAAYnd,SAASmF,cAAc,OAC7B1C,UAAY,UACtBwa,EAAKxa,UAAY,kBAGA,GAAblB,GACF4b,EAAU/c,UAAY4c,EAAW,KAAOD,EAAK,GAAK,OAASA,EAAK,GAAK,OACrEK,EAAQL,EAAK,KAGbI,EAAU/c,UAAY4c,EAAW,KAAOD,EAAK,GAAK,OAAS/V,EAAO5D,WAAa,OAC/Ega,EAAQpW,EAAO5D,aAGbia,EAAYrd,SAASmF,cAAc,OAC7B1C,UAAY,UACtB4a,EAAUjd,UAAY,0CAElBkd,EAAItd,SAASmF,cAAc,UAC7BC,GAAKyX,EACPS,EAAEI,YAAc,6CAChBJ,EAAE/X,aAAa,OAAQ,SAEnBiV,EAASxa,SAASmF,cAAc,QAC7B1C,UAAY,eACnB8I,EAAI9I,UAAY,GAChB8I,EAAInL,UAAY,GAEAJ,SAASC,eAAe,aAC9BoF,MAAQ,OAElBmV,EAAOhV,YAAY2X,GACnB3C,EAAOhV,YAAY6X,GACnB7C,EAAOhV,YAAY8X,GAEnB/R,EAAI/F,YAAYgV,GAahByC,EAAKU,SAAW,WAId,OAFA3d,SAASC,eAAe,MAAQ8c,EAAK,GAAK,IAAMA,EAAK,IAAIta,UAAU,UACnE8a,EAFY,WAGL,GAGTN,EAAKW,OAAOjY,QAAU,WACpB3F,SAASC,eAAe,MAAQ8c,EAAK,GAAK,IAAMA,EAAK,IAAIta,UAAU,UACnE8a,EAAS,OAGXvd,SAASyd,UAAY,SAAUI,GAChB,UAATA,EAAEpM,MACJzR,SAASC,eAAe,MAAQ8c,EAAK,GAAK,IAAMA,EAAK,IAAIta,UAAU,UACnE8a,EAAS,QAGbL,EAAUhd,MAAMiQ,QAAU,QAnG5B,yBAAAqN,EAAAvc,SAAA2b,OAjmDO3f,MAAAd,KAAAe,WAAA,SAguDQyZ,GAhuDRmH,EAAAC,GAAA,OAAAC,GAAA/gB,MAAAd,KAAAe,WAAA,SAAA8gB,KAAA,OAAAA,GAAA/hB,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KAguDP,SAAA4gB,EAA0BpB,EAAMC,GAAhC,IAAAI,EAAAD,EAAA3b,EAAAK,EAAA0I,EAAA0S,EAAAmB,EAAAC,EAAArc,EAmHWyb,EAnHX,OAAAngB,IAAAS,KAAA,SAAAugB,GAAA,cAAAA,EAAArgB,KAAAqgB,EAAApgB,MAAA,cAmHWuf,EAnHX,SAmHoBlY,GACH,UAATA,GACFyW,KAEF9b,SAASC,eAAe,MAAQ8c,EAAK,GAAK,IAAMA,EAAK,IAAIta,UAAUyb,EACnEvS,KACAuR,EAAUhd,MAAMiQ,QAAU,OAC1BnQ,SAASyd,UAAY,KACrBX,EAASzX,IA1HP6X,EAAYld,SAASC,eAAe,yBAGrCnD,GACDmgB,EAAOjd,SAASC,eAAe,sBAC/BqB,EAAetB,SAASC,eAAe,2BAGvCgd,EAAOjd,SAASC,eAAe,eAC/BqB,EAAetB,SAASC,eAAe,mBAV3Cme,EAAApgB,KAAA,EAe6B5C,EAAcsH,QAAQ6H,UAAU9P,GAAS6B,OAftE,cAeM+N,EAfN+T,EAAA9f,KAiBEuN,KAEIkR,EAAO,GACXA,EAAOF,EAAKlZ,MAAM,KAEdua,EAAYle,SAASC,eAAe,MAAQ8c,EAAK,GAAK,IAAMA,EAAK,IAAIta,UACzEzC,SAASC,eAAe,MAAQ8c,EAAK,GAAK,IAAMA,EAAK,IAAIta,UAAU,sBAC1DzC,SAASmF,cAAc,OAxBlCiZ,EAAApgB,KAAA,GAyByB5C,EAAcsH,QAAQiF,SAASrL,OAzBxD,QA4BE,IAHAqF,EAzBFyc,EAAA9f,KA0BEgD,EAAalB,UAAY,GA1B3B+d,EAAA,SA4BWrc,GACP7F,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KAAC,SAAAghB,IAAA,IAAA3J,EAAA4J,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAvc,EAAAC,EAAA8B,EAAAya,EAAAC,EAAAC,EAAAC,EAAA,OAAA3hB,IAAAS,KAAA,SAAAmhB,GAAA,cAAAA,EAAAjhB,KAAAihB,EAAAhhB,MAAA,cAAAghB,EAAAjhB,KAAA,EAAAihB,EAAAhhB,KAAA,EAEoB5C,EAAcsH,QAAQ8H,oBAAoB/P,EAASqH,GAAGxF,OAF1E,cAEOoY,EAFPsK,EAAA1gB,MAIOggB,EAAUte,SAASmF,cAAc,QAC7BC,GAAK,MAAQsP,EAEnB4J,EAAQ7b,UADP3F,EACmB,iBAGA,UAGlByhB,EAAWve,SAASmF,cAAc,UACtCoZ,EAAWve,SAASmF,cAAc,UACzBI,aAAa,KAAM,MAAQmP,GACpC4J,EAAQ9Y,YAAY+Y,IAEhBC,EAAQxe,SAASmF,cAAc,OAC7B1C,UAAY,QAClB8b,EAAS/Y,YAAYgZ,IAEjBC,EAASze,SAASmF,cAAc,OAC7B1C,UAAY,SACnB+b,EAAMhZ,YAAYiZ,IAEdC,EAAS1e,SAASmF,cAAc,UAC7BI,aAAa,OAAQ,SAC5BmZ,EAAOtZ,GAAKyX,EAAO,IAAMnI,EACzBgK,EAAOjc,UAAY,SACnBic,EAAOxK,KAAO,QACduK,EAAOjZ,YAAYkZ,IAEfC,EAAS3e,SAASmF,cAAc,UAC7BsR,QAAUiI,EAAOtZ,GACxBqZ,EAAOjZ,YAAYmZ,GAnCtBK,EAAAhhB,KAAA,GAsCgC5C,EAAcsH,QAAQc,SAASkR,GAAMpY,OAtCrE,eAsCO8F,EAtCP4c,EAAA1gB,MAuCwBmF,WAAW,WAC9BrB,EAAgB,wBAAAsB,OAA2BtB,EAAiBuB,MAAM,WAAW,IAEtEvB,EAAiBqB,WAAW,wCACnCrB,EAAmBA,EAAiBwB,QAAjB,yCACnBxB,EAAgB,wBAAAsB,OAA2BtB,EAAmB,IA5CnE4c,EAAAhhB,KAAA,GA8C6BE,MAAMkE,GAAkByB,KAAK,SAACC,GAAD,OAAcA,EAASvF,SA9CjF,QA8CO8D,EA9CP2c,EAAA1gB,MAgDO6F,EAASnE,SAASmF,cAAc,QAC7BI,aAAa,MAAOlD,EAAa,OACxC8B,EAAOoB,aAAa,MAAO5D,GAC3BwC,EAAOoB,aAAa,QAAS,UAAYmP,GACzCvQ,EAAOjE,MAAMzD,MAAQ,QACrBkiB,EAAOnZ,YAAYrB,IAIfya,EAAS5e,SAASmF,cAAc,OAC7B1C,UAAY,SACnB+b,EAAMhZ,YAAYoZ,IAEdC,EAAU7e,SAASmF,cAAc,OAC7B1C,UAAY,SACpBoc,EAAQze,UAAYiC,EAAa,WAAe,GAA5B,WAA+C,UAAYA,EAAa,WAAe,GAA5B,MAA0C,OACzHuc,EAAOpZ,YAAYqZ,IAEfC,EAAU9e,SAASmF,cAAc,OAC7B1C,UAAY,SACpBqc,EAAQ1e,UAAYiC,EAAa,WAAe,GAA5B,WAA+C,KAAOA,EAAa,WAAe,GAA5B,MAC1Euc,EAAOpZ,YAAYsZ,IAEfC,EAAU/e,SAASmF,cAAc,OAC7B1C,UAAY,SACpBsc,EAAQ3e,UAAYiC,EAAa,WAAe,GAA5B,WAA+C,KAAOA,EAAa,WAAe,GAA5B,MAC1Euc,EAAOpZ,YAAYuZ,GAEnBzd,EAAakE,YAAY8Y,GA5E5BU,EAAAhhB,KAAA,iBAAAghB,EAAAjhB,KAAA,GAAAihB,EAAAle,GAAAke,EAAA,SAgFGje,QAAQC,IAARge,EAAAle,IAhFH,yBAAAke,EAAA/d,SAAAod,EAAA,iBAADpiB,IADO6F,EAAI,EAAGA,EAAIuI,EAAgBvI,IAAKqc,EAAhCrc,GAkGTmb,EAAKU,SAAW,WAId,OAFA3d,SAASC,eAAe,MAAQ8c,EAAK,GAAK,IAAMA,EAAK,IAAIta,UAAUyb,EACnEX,EAFY,WAGL,GAGTN,EAAKW,OAAOjY,QAAU,WACpB3F,SAASC,eAAe,MAAQ8c,EAAK,GAAK,IAAMA,EAAK,IAAIta,UAAUyb,EACnEX,EAAS,OAGXvd,SAASyd,UAAY,SAAUI,GAChB,UAATA,EAAEpM,MACJzR,SAASC,eAAe,MAAQ8c,EAAK,GAAK,IAAMA,EAAK,IAAIta,UAAUyb,EACnEX,EAAS,QAGbL,EAAUhd,MAAMiQ,QAAU,QAhJ5B,yBAAAiO,EAAAnd,SAAAgd,OAhuDOhhB,MAAAd,KAAAe,WAAA,SAm3DQ+hB,GAn3DRC,GAAA,OAAAC,GAAAliB,MAAAd,KAAAe,WAAA,SAAAiiB,KAAA,OAAAA,GAAAljB,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KAm3DP,SAAA+hB,EAAyBC,GAAzB,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAziB,IAAAS,KAAA,SAAAiiB,GAAA,cAAAA,EAAA/hB,KAAA+hB,EAAA9hB,MAAA,UAAA8hB,EAAA/hB,KAAA,EAEiB,MAATtD,EAFR,CAAAqlB,EAAA9hB,KAAA,eAAA8hB,EAAAvd,OAAA,wBAAAud,EAAA9hB,KAAA,EAKU+B,GAAa,cALvB,YAOQnE,EAAW,GAPnB,CAAAkkB,EAAA9hB,KAAA,gBAAA8hB,EAAA9hB,KAAA,EAS4B5C,EAAcsH,QAAQqd,cAAcV,GAAK/iB,OATrE,cASUgjB,EATVQ,EAAAxhB,KAUMghB,EAAY9gB,IAAKsJ,MAAMC,QAAQuX,GAAa1jB,EACxC2jB,EAAe/gB,IAAKsJ,MAAMkY,MAAMtR,OAAO4Q,IAXjDQ,EAAA9hB,KAAA,GAayB5C,EAAcsH,QAAQud,eAAeZ,GAAK/iB,OAbnE,eAaUkjB,EAbVM,EAAAxhB,KAAAwhB,EAAA9hB,KAAA,GAciCsB,GAAS7D,EAAMjB,EAAI+E,YAAY/E,IAAKglB,GAdrE,eAcUC,EAdVK,EAAAxhB,KAAAwhB,EAAA9hB,KAAA,GAe6ByhB,EAAe/c,QAAQwd,UAAUzlB,EAASc,GAAoBe,OAf3F,WAeUojB,EAfVI,EAAAxhB,KAgBUqhB,EAASQ,SAAST,GAElBE,GAAc,IAEdD,EAASQ,SAASZ,IApB5B,CAAAO,EAAA9hB,KAAA,gBAAA8hB,EAAA9hB,KAAA,GAqBc+B,GAAa,eArB3B,eAuBY8f,EAAUrhB,IAAKsJ,MAAMkY,MAAOtR,OAAQ3E,OAAOqW,mBAvBvDN,EAAA9hB,KAAA,GAyBcyhB,EAAe/c,QAAQ2d,QAAQ9kB,EAAoBmT,OAAOmR,IAC7DphB,KAAK,CAAEmM,KAAMnQ,IACb6lB,GAAG,QAAS,SAASC,EAAOC,GAC3BZ,GAAY,IAEba,MAAM,WACL1gB,GAAa,MA/BzB,eAAA+f,EAAA9hB,KAAA,GAkCc+B,GAAa,cAlC3B,WAoCuB,GAAb6f,EApCV,CAAAE,EAAA9hB,KAAA,gBAAA8hB,EAAA9hB,KAAA,GAsCc5C,EAAcsH,QACjBge,KAAK9kB,EAAUyjB,GACf5gB,KAAK,CACJ2d,SAAU1N,OAAO9T,EAAgBgB,GACjC+kB,GAAIplB,EACJqP,KAAMnQ,IAEP6lB,GAAG,eAAgB,SAACM,EAAoBJ,GACvCzgB,GAAa,MA9CzB,QAAA+f,EAAA9hB,KAAA,iBAAA8hB,EAAA/hB,KAAA,GAAA+hB,EAAAhf,GAAAgf,EAAA,SAqDI/e,QAAQC,IAAR8e,EAAAhf,IArDJ,eAAAgf,EAAA9hB,KAAA,GAuDQ+B,GAAa,IAvDrB,yBAAA+f,EAAA7e,SAAAme,EAAA,mBAn3DOniB,MAAAd,KAAAe,WAAA,SA66DQ2jB,GA76DRC,GAAA,OAAAC,GAAA9jB,MAAAd,KAAAe,WAAA,SAAA6jB,KAAA,OAAAA,GAAA9kB,OAAAkB,EAAA,EAAAlB,CAAAmB,IAAAC,KA66DP,SAAA2jB,EAA2BC,GAA3B,OAAA7jB,IAAAS,KAAA,SAAAqjB,GAAA,cAAAA,EAAAnjB,KAAAmjB,EAAAljB,MAAA,OACEpC,EAAWqlB,EADb,wBAAAC,EAAAjgB,SAAA+f,OA76DO/jB,MAAAd,KAAAe,WAi7DP,OAAIJ,EAEAqkB,EAAAC,EAAAjc,cAAA,OAAK1C,UAAU,cACb0e,EAAAC,EAAAjc,cAAA,OAAKyC,MAAM,+DACTuZ,EAAAC,EAAAjc,cAAA,OAAKyC,MAAM,kBAAkB1H,MAAO,CAAEmhB,WAAY,mBAChDF,EAAAC,EAAAjc,cAAA,KAAGyC,MAAM,eAAe1H,MAAO,CAAEohB,WAAY,MAAOC,SAAU,QAAUC,KAAK,KAC3EL,EAAAC,EAAAjc,cAAA,OAAKsc,IAAI,WAAWhlB,MAAM,QAE5B0kB,EAAAC,EAAAjc,cAAA,UAAQyC,MAAM,iBAAiBoK,KAAK,SAAS0P,iBAAe,WAAWC,iBAAe,kBAAkBC,gBAAc,iBAAiBC,gBAAc,QAAQC,aAAW,qBACtKX,EAAAC,EAAAjc,cAAA,QAAMyC,MAAM,yBAEduZ,EAAAC,EAAAjc,cAAA,OAAKyC,MAAM,2BAA2BxC,GAAG,kBACvC+b,EAAAC,EAAAjc,cAAA,MAAIyC,MAAM,uCAAuC1H,MAAO,CAAEqhB,SAAU,SAClEJ,EAAAC,EAAAjc,cAAA,MAAIyC,MAAM,YACRuZ,EAAAC,EAAAjc,cAAA,KAAGyC,MAAM,kBAAkBma,eAAa,OAAOP,KAAK,KAApD,cAEFL,EAAAC,EAAAjc,cAAA,MAAIyC,MAAM,YACRuZ,EAAAC,EAAAjc,cAAA,KAAGyC,MAAM,WAAW4Z,KAAK,KAAzB,iBAEFL,EAAAC,EAAAjc,cAAA,MAAIyC,MAAM,YACRuZ,EAAAC,EAAAjc,cAAA,KAAGyC,MAAM,YAAT,oBAOVuZ,EAAAC,EAAAjc,cAAA,OAAK1C,UAAU,oCACb0e,EAAAC,EAAAjc,cAAA,OAAK1C,UAAU,OACb0e,EAAAC,EAAAjc,cAAA,QAAM1C,UAAU,oBACd0e,EAAAC,EAAAjc,cAAA,YACEgc,EAAAC,EAAAjc,cAAA,OAAK1C,UAAU,WACb0e,EAAAC,EAAAjc,cAAA,MAAI1C,UAAU,WAAd,wBAEF0e,EAAAC,EAAAjc,cAAA,OAAKsc,IAAI,oBAAoBhlB,MAAM,UACnC0kB,EAAAC,EAAAjc,cAAA,MAAI1C,UAAU,WAAd,yBAEA0e,EAAAC,EAAAjc,cAAC6c,EAAA,EAAD,CAAaC,KAAK,KAChBH,aAAW,cACX5N,KAAK,SACLhU,MAAO,CAAEgiB,UAAW,uBACpBta,MAAM,aAENuZ,EAAAC,EAAAjc,cAACgd,EAAA,EAAD,CAAQ9c,MAAM,IAAI+c,QAAS,WAAcvB,GAAY,KAArD,KACAM,EAAAC,EAAAjc,cAACgd,EAAA,EAAD,CAAQ9c,MAAM,IAAI+c,QAAS,WAAcvB,GAAY,KAArD,KACAM,EAAAC,EAAAjc,cAACgd,EAAA,EAAD,CAAQ9c,MAAM,IAAI+c,QAAS,WAAcvB,GAAY,KAArD,KACAM,EAAAC,EAAAjc,cAACgd,EAAA,EAAD,CAAQ9c,MAAM,IAAI+c,QAAS,WAAcvB,GAAY,KAArD,KACAM,EAAAC,EAAAjc,cAACgd,EAAA,EAAD,CAAQ9c,MAAM,IAAI+c,QAAS,WAAcvB,GAAY,KAArD,MAGFM,EAAAC,EAAAjc,cAAA,MAAI1C,UAAU,gBAAd,kCACA0e,EAAAC,EAAAjc,cAAA,OAAK1C,UAAU,YAAY4f,KAAK,QAAQjd,GAAG,cAAc0c,aAAW,iBACpEX,EAAAC,EAAAjc,cAAA,OAAKsc,IAAK,iBAAkBhlB,MAAM,KAAK6lB,IAAI,WAAW1a,MAAM,kBAAkBnF,UAAU,kBAAkB2C,GAAG,cAAcgd,QAAS,WAAcnD,GAAU,MAC1JkC,EAAAC,EAAAjc,cAAA,OAAKsc,IAAK,iBAAkBhlB,MAAM,KAAK6lB,IAAI,UAAU1a,MAAM,kBAAkBnF,UAAU,kBAAkB2C,GAAG,aAAagd,QAAS,WAAcnD,GAAU,MAC1JkC,EAAAC,EAAAjc,cAAA,OAAKsc,IAAK,iBAAkBhlB,MAAM,KAAK6lB,IAAI,MAAM1a,MAAM,kBAAkBnF,UAAU,kBAAkB2C,GAAG,SAASgd,QAAS,WAAcnD,GAAU,MAClJkC,EAAAC,EAAAjc,cAAA,OAAKsc,IAAK,iBAAkBhlB,MAAM,KAAK6lB,IAAI,MAAM1a,MAAM,kBAAkBnF,UAAU,kBAAkB2C,GAAG,SAASgd,QAAS,WAAcnD,GAAU,MAClJkC,EAAAC,EAAAjc,cAAA,OAAKsc,IAAK,iBAAkBhlB,MAAM,KAAK6lB,IAAI,QAAQ1a,MAAM,kBAAkBnF,UAAU,kBAAkB2C,GAAG,WAAWgd,QAAS,WAAcnD,GAAU,UAK9JkC,EAAAC,EAAAjc,cAAA,OAAK1C,UAAU,OACb0e,EAAAC,EAAAjc,cAAA,QAAM1C,UAAU,aACd0e,EAAAC,EAAAjc,cAAA,QAAMjF,MAAO,CAAEmhB,WAAY,mBACzBF,EAAAC,EAAAjc,cAACod,EAAA,EAAD,CAAMC,iBAAiB,SAAS/f,UAAU,sBACxC0e,EAAAC,EAAAjc,cAACsd,EAAA,EAAD,CAAKC,SAAS,QAAQC,MAAM,gBAC1BxB,EAAAC,EAAAjc,cAAA,OAAK1C,UAAU,aACb0e,EAAAC,EAAAjc,cAAA,OAAKyC,MAAM,sCAAsCya,KAAK,UAAUP,aAAW,8BACzEX,EAAAC,EAAAjc,cAAA,OAAKyC,MAAM,2BAA2Bya,KAAK,QAAQP,aAAW,iBAC5DX,EAAAC,EAAAjc,cAAA,UAAQ6M,KAAK,SAAS9R,MAAO,CAAEqhB,SAAU,OAAS3Z,MAAM,oBAAoBxC,GAAG,mBAAmBgd,QAASpJ,IAA3G,kBACAmI,EAAAC,EAAAjc,cAAA,UAAQ6M,KAAK,SAAS9R,MAAO,CAAEqhB,SAAU,OAAS3Z,MAAM,oBAAoBxC,GAAG,cAAcgd,QAAS9J,IAAtG,aACA6I,EAAAC,EAAAjc,cAAA,UAAQC,GAAG,YAAYlF,MAAO,CAAEqhB,SAAU,OAAS9e,UAAU,0BAA0BmgB,SAAU3a,GAC/FkZ,EAAAC,EAAAjc,cAAA,UAAQ0d,UAAQ,EAACjb,MAAM,YAAvB,kBACAuZ,EAAAC,EAAAjc,cAAA,mCAKRgc,EAAAC,EAAAjc,cAAA,OAAK1C,UAAU,OACb0e,EAAAC,EAAAjc,cAAA,OAAK1C,UAAU,0BACb0e,EAAAC,EAAAjc,cAAA,OAAK1C,UAAU,aACb0e,EAAAC,EAAAjc,cAAA,OAAKC,GAAG,yBAAyB3C,UAAU,6BAKnD0e,EAAAC,EAAAjc,cAACsd,EAAA,EAAD,CAAKC,SAAS,SAASC,MAAM,cAC3BxB,EAAAC,EAAAjc,cAAA,OAAK1C,UAAU,aACb0e,EAAAC,EAAAjc,cAAA,OAAKyC,MAAM,sCAAsCya,KAAK,UAAUP,aAAW,8BACzEX,EAAAC,EAAAjc,cAAA,OAAKyC,MAAM,2BAA2BxC,GAAG,iBAAiBid,KAAK,QAAQP,aAAW,kBAChFX,EAAAC,EAAAjc,cAAA,UAAQ6M,KAAK,SAAS9R,MAAO,CAAEqhB,SAAU,OAAS3Z,MAAM,oBAAoBxC,GAAG,UAAUgd,QAAS9K,IAAlG,QACA6J,EAAAC,EAAAjc,cAAA,UAAQ6M,KAAK,SAAS9R,MAAO,CAAEqhB,SAAU,OAAS3Z,MAAM,oBAAoBxC,GAAG,mBAAmBgd,QAASlL,IAA3G,kBACAiK,EAAAC,EAAAjc,cAAA,UAAQ6M,KAAK,SAAS9R,MAAO,CAAEqhB,SAAU,OAAS3Z,MAAM,oBAAoBxC,GAAG,qBAAqBgd,QAASvL,IAA7G,uBAINsK,EAAAC,EAAAjc,cAAA,OAAK1C,UAAU,aACb0e,EAAAC,EAAAjc,cAAA,OAAKC,GAAG,uBAAuB3C,UAAU,mCASvD0e,EAAAC,EAAAjc,cAAA,OAAK1C,UAAU,iBACb0e,EAAAC,EAAAjc,cAAA,OAAK1C,UAAU,iBACb0e,EAAAC,EAAAjc,cAAA,OAAK1C,UAAU,SAASvC,MAAO,CAAEqhB,SAAU,SACzCJ,EAAAC,EAAAjc,cAAA,OAAKjF,MAAO,CAAEqhB,SAAU,OAAQuB,aAAc,OAAQrd,MAAO,UAAW6b,WAAY,QAApF,yBACAH,EAAAC,EAAAjc,cAAA,SAAOC,GAAG,eAAe3C,UAAU,6CAKzC0e,EAAAC,EAAAjc,cAAA,OAAKyC,MAAM,6BACTuZ,EAAAC,EAAAjc,cAAA,OAAKyC,MAAM,gBACTuZ,EAAAC,EAAAjc,cAAA,OAAKyC,MAAM,8BAA8B1H,MAAO,CAAC6iB,WAAY,SAC3D5B,EAAAC,EAAAjc,cAAA,OAAKC,GAAG,UAAU3C,UAAU,kBAC5B0e,EAAAC,EAAAjc,cAAA,OAAKC,GAAG,aAAagd,QAASrlB,EAAe0F,UAAU,qBAAqBuP,KAAK,SAAS9R,MAAO,CAAEmhB,WAAY,mBAA/G,0BAQNF,EAAAC,EAAAjc,cAAA,OAAKC,GAAG,yBACN+b,EAAAC,EAAAjc,cAAA,QAAMC,GAAG,sBACP+b,EAAAC,EAAAjc,cAAA,OAAK1C,UAAU,eACb0e,EAAAC,EAAAjc,cAAA,OAAKC,GAAG,0BACR+b,EAAAC,EAAAjc,cAAA,SAAO+O,KAAK,YAAY9O,GAAG,YAAY4M,KAAK,SAAS3M,MAAM,UAC3D8b,EAAAC,EAAAjc,cAAA,SAAO+O,KAAK,SAAS9O,GAAG,SAAS4M,KAAK,SAAS3M,MAAM,eAU7D8b,EAAAC,EAAAjc,cAAA,OAAK1C,UAAU,cACb0e,EAAAC,EAAAjc,cAAA,OAAKyC,MAAM,+DACTuZ,EAAAC,EAAAjc,cAAA,OAAKyC,MAAM,kBAAkB1H,MAAO,CAAEmhB,WAAY,mBAChDF,EAAAC,EAAAjc,cAAA,KAAGyC,MAAM,oBAAoB1H,MAAO,CAAEohB,WAAY,MAAOC,SAAU,QAAUC,KAAK,MAAQL,EAAAC,EAAAjc,cAAA,OAAKsc,IAAI,WAAWhlB,MAAM,OACpH0kB,EAAAC,EAAAjc,cAAA,UAAQyC,MAAM,iBAAiBoK,KAAK,SAAS0P,iBAAe,WAAWC,iBAAe,kBAAkBC,gBAAc,iBAAiBC,gBAAc,QAAQC,aAAW,qBACtKX,EAAAC,EAAAjc,cAAA,QAAMyC,MAAM,yBAEduZ,EAAAC,EAAAjc,cAAA,OAAKyC,MAAM,2BAA2BxC,GAAG,kBACvC+b,EAAAC,EAAAjc,cAAA,MAAIyC,MAAM,uCAAuC1H,MAAO,CAAEqhB,SAAU,SAClEJ,EAAAC,EAAAjc,cAAA,MAAIyC,MAAM,YACRuZ,EAAAC,EAAAjc,cAAA,KAAGyC,MAAM,kBAAkBma,eAAa,OAAOP,KAAK,KAApD,cAEFL,EAAAC,EAAAjc,cAAA,MAAIyC,MAAM,YACRuZ,EAAAC,EAAAjc,cAAA,KAAGyC,MAAM,WAAW4Z,KAAK,KAAzB,iBAEFL,EAAAC,EAAAjc,cAAA,MAAIyC,MAAM,YACRuZ,EAAAC,EAAAjc,cAAA,KAAGyC,MAAM,YAAT,mBAKRuZ,EAAAC,EAAAjc,cAAA,OAAK1C,UAAU,QACb0e,EAAAC,EAAAjc,cAAA,OAAKyC,MAAM,+BACTuZ,EAAAC,EAAAjc,cAAA,OAAKC,GAAG,UAAU3C,UAAU,kBAC5B0e,EAAAC,EAAAjc,cAAA,OAAKC,GAAG,aAAagd,QAASrlB,EAAe0F,UAAU,qBAAqBuP,KAAK,SAAS9R,MAAO,CAAEmhB,WAAY,mBAA/G,0BAONF,EAAAC,EAAAjc,cAAA,OAAK1C,UAAU,6BACb0e,EAAAC,EAAAjc,cAAA,OAAK1C,UAAU,OACb0e,EAAAC,EAAAjc,cAAA,QAAM1C,UAAU,aACd0e,EAAAC,EAAAjc,cAAA,YACEgc,EAAAC,EAAAjc,cAAA,OAAK1C,UAAU,WACb0e,EAAAC,EAAAjc,cAAA,MAAI1C,UAAU,WAAd,wBAEF0e,EAAAC,EAAAjc,cAAA,OAAKsc,IAAI,oBAAoBhlB,MAAM,UACnC0kB,EAAAC,EAAAjc,cAAA,MAAI1C,UAAU,WAAd,yBAEA0e,EAAAC,EAAAjc,cAAC6c,EAAA,EAAD,CAAaC,KAAK,KAChBH,aAAW,cACX5N,KAAK,SACLhU,MAAO,CAAEgiB,UAAW,uBACpBta,MAAM,aAENuZ,EAAAC,EAAAjc,cAACgd,EAAA,EAAD,CAAQ9c,MAAM,IAAI+c,QAAS,WAAcvB,GAAY,KAArD,KACAM,EAAAC,EAAAjc,cAACgd,EAAA,EAAD,CAAQ9c,MAAM,IAAI+c,QAAS,WAAcvB,GAAY,KAArD,KACAM,EAAAC,EAAAjc,cAACgd,EAAA,EAAD,CAAQ9c,MAAM,IAAI+c,QAAS,WAAcvB,GAAY,KAArD,KACAM,EAAAC,EAAAjc,cAACgd,EAAA,EAAD,CAAQ9c,MAAM,IAAI+c,QAAS,WAAcvB,GAAY,KAArD,KACAM,EAAAC,EAAAjc,cAACgd,EAAA,EAAD,CAAQ9c,MAAM,IAAI+c,QAAS,WAAcvB,GAAY,KAArD,MAGFM,EAAAC,EAAAjc,cAAA,MAAI1C,UAAU,gBAAd,kCACA0e,EAAAC,EAAAjc,cAAA,OAAKyC,MAAM,YAAYya,KAAK,QAAQjd,GAAG,cAAc0c,aAAW,iBAC9DX,EAAAC,EAAAjc,cAAA,OAAKsc,IAAK,iBAAkBhlB,MAAM,KAAK6lB,IAAI,WAAW1a,MAAM,kBAAkBnF,UAAU,kBAAkB2C,GAAG,cAAcgd,QAAS,WAAcnD,GAAU,MAC5JkC,EAAAC,EAAAjc,cAAA,OAAKsc,IAAK,iBAAkBhlB,MAAM,KAAK6lB,IAAI,UAAU1a,MAAM,kBAAkBnF,UAAU,kBAAkB2C,GAAG,aAAagd,QAAS,WAAcnD,GAAU,MAC1JkC,EAAAC,EAAAjc,cAAA,OAAKsc,IAAK,iBAAkBhlB,MAAM,KAAK6lB,IAAI,MAAM1a,MAAM,kBAAkBnF,UAAU,kBAAkB2C,GAAG,SAASgd,QAAS,WAAcnD,GAAU,MAClJkC,EAAAC,EAAAjc,cAAA,OAAKsc,IAAK,iBAAkBhlB,MAAM,KAAK6lB,IAAI,MAAM1a,MAAM,kBAAkBnF,UAAU,kBAAkB2C,GAAG,SAASgd,QAAS,WAAcnD,GAAU,MAClJkC,EAAAC,EAAAjc,cAAA,OAAKsc,IAAK,iBAAkBhlB,MAAM,KAAK6lB,IAAI,QAAQ1a,MAAM,kBAAkBnF,UAAU,kBAAkB2C,GAAG,WAAWgd,QAAS,WAAcnD,GAAU,OAGxJkC,EAAAC,EAAAjc,cAAA,WACAgc,EAAAC,EAAAjc,cAAA,OAAK1C,UAAU,YACb0e,EAAAC,EAAAjc,cAAA,OAAK1C,UAAU,SAASvC,MAAO,CAAEqhB,SAAU,SACzCJ,EAAAC,EAAAjc,cAAA,OAAKjF,MAAO,CAAEqhB,SAAU,OAAQuB,aAAc,OAAQrd,MAAO,UAAW6b,WAAY,QAApF,mBACAH,EAAAC,EAAAjc,cAAA,SAAOC,GAAG,eAAe3C,UAAU,mCACjC0e,EAAAC,EAAAjc,cAAA,SAAO1C,UAAU,eACf0e,EAAAC,EAAAjc,cAAA,UACEgc,EAAAC,EAAAjc,cAAA,MAAIsC,MAAM,OAAV,QACA0Z,EAAAC,EAAAjc,cAAA,MAAIsC,MAAM,OAAV,SACA0Z,EAAAC,EAAAjc,cAAA,MAAIsC,MAAM,OAAV,iBAGJ0Z,EAAAC,EAAAjc,cAAA,aACEgc,EAAAC,EAAAjc,cAAA,UACEgc,EAAAC,EAAAjc,cAAA,yBACAgc,EAAAC,EAAAjc,cAAA,qBACAgc,EAAAC,EAAAjc,cAAA,mBAEFgc,EAAAC,EAAAjc,cAAA,UACEgc,EAAAC,EAAAjc,cAAA,0BACAgc,EAAAC,EAAAjc,cAAA,wCACAgc,EAAAC,EAAAjc,cAAA,mBAEFgc,EAAAC,EAAAjc,cAAA,UACEgc,EAAAC,EAAAjc,cAAA,uBACAgc,EAAAC,EAAAjc,cAAA,0BACAgc,EAAAC,EAAAjc,cAAA,mBAEFgc,EAAAC,EAAAjc,cAAA,UACEgc,EAAAC,EAAAjc,cAAA,uBACAgc,EAAAC,EAAAjc,cAAA,6BACAgc,EAAAC,EAAAjc,cAAA,mBAEFgc,EAAAC,EAAAjc,cAAA,UACEgc,EAAAC,EAAAjc,cAAA,yBACAgc,EAAAC,EAAAjc,cAAA,2BACAgc,EAAAC,EAAAjc,cAAA,sBAMRgc,EAAAC,EAAAjc,cAAA,OAAK1C,UAAU,iBACb0e,EAAAC,EAAAjc,cAAA,OAAK1C,UAAU,SAASvC,MAAO,CAAEqhB,SAAU,SACzCJ,EAAAC,EAAAjc,cAAA,OAAKjF,MAAO,CAAEqhB,SAAU,OAAQuB,aAAc,OAAQrd,MAAO,UAAW6b,WAAY,QAApF,yBACAH,EAAAC,EAAAjc,cAAA,SAAOC,GAAG,eAAe3C,UAAU,+CAU/C0e,EAAAC,EAAAjc,cAAA,OAAK1C,UAAU,OACb0e,EAAAC,EAAAjc,cAAA,SAAO1C,UAAU,aACf0e,EAAAC,EAAAjc,cAAA,UACEgc,EAAAC,EAAAjc,cAAA,QAAM1C,UAAU,aACd0e,EAAAC,EAAAjc,cAAA,QAAMjF,MAAO,CAAEmhB,WAAY,mBACzBF,EAAAC,EAAAjc,cAACod,EAAA,EAAD,CAAMC,iBAAiB,SAAS/f,UAAU,sBACxC0e,EAAAC,EAAAjc,cAACsd,EAAA,EAAD,CAAKC,SAAS,QAAQC,MAAM,gBAC1BxB,EAAAC,EAAAjc,cAAA,OAAK1C,UAAU,aACb0e,EAAAC,EAAAjc,cAAA,OAAKyC,MAAM,sCAAsCya,KAAK,UAAUP,aAAW,8BACzEX,EAAAC,EAAAjc,cAAA,OAAKyC,MAAM,2BAA2Bya,KAAK,QAAQP,aAAW,iBAC5DX,EAAAC,EAAAjc,cAAA,UAAQ6M,KAAK,SAASpK,MAAM,oBAAoBxC,GAAG,mBAAmBgd,QAASpJ,IAA/E,kBACAmI,EAAAC,EAAAjc,cAAA,UAAQ6M,KAAK,SAASpK,MAAM,oBAAoBxC,GAAG,cAAcgd,QAAS9J,IAA1E,aACA6I,EAAAC,EAAAjc,cAAA,UAAQC,GAAG,YAAY3C,UAAU,0BAA0BmgB,SAAU3a,GACnEkZ,EAAAC,EAAAjc,cAAA,UAAQ0d,UAAQ,EAACjb,MAAM,YAAvB,kBACAuZ,EAAAC,EAAAjc,cAAA,mCAKRgc,EAAAC,EAAAjc,cAAA,OAAK1C,UAAU,mBACb0e,EAAAC,EAAAjc,cAAA,OAAK1C,UAAU,OACb0e,EAAAC,EAAAjc,cAAA,OAAK1C,UAAU,aACb0e,EAAAC,EAAAjc,cAAA,OAAKC,GAAG,yBAAyB3C,UAAU,sBAKnD0e,EAAAC,EAAAjc,cAACsd,EAAA,EAAD,CAAKC,SAAS,SAASC,MAAM,cAC3BxB,EAAAC,EAAAjc,cAAA,OAAK1C,UAAU,aACb0e,EAAAC,EAAAjc,cAAA,OAAKyC,MAAM,sCAAsCya,KAAK,UAAUP,aAAW,8BACzEX,EAAAC,EAAAjc,cAAA,OAAKyC,MAAM,2BAA2BxC,GAAG,iBAAiBid,KAAK,QAAQP,aAAW,kBAChFX,EAAAC,EAAAjc,cAAA,UAAQ6M,KAAK,SAASpK,MAAM,oBAAoBxC,GAAG,UAAUgd,QAAS9K,IAAtE,QACA6J,EAAAC,EAAAjc,cAAA,UAAQ6M,KAAK,SAASpK,MAAM,oBAAoBxC,GAAG,mBAAmBgd,QAASlL,IAA/E,kBACAiK,EAAAC,EAAAjc,cAAA,UAAQ6M,KAAK,SAASpK,MAAM,oBAAoBxC,GAAG,qBAAqBgd,QAASvL,IAAjF,uBAINsK,EAAAC,EAAAjc,cAAA,OAAK1C,UAAU,aACb0e,EAAAC,EAAAjc,cAAA,OAAKC,GAAG,uBAAuB3C,UAAU,qCAY3D0e,EAAAC,EAAAjc,cAAA,OAAKC,GAAG,yBACN+b,EAAAC,EAAAjc,cAAA,QAAMC,GAAG,eACP+b,EAAAC,EAAAjc,cAAA,OAAK1C,UAAU,eACb0e,EAAAC,EAAAjc,cAAA,OAAKC,GAAG,iBAAiB3C,UAAU,WACnC0e,EAAAC,EAAAjc,cAAA,SAAO+O,KAAK,YAAY9O,GAAG,YAAY4M,KAAK,SAAS3M,MAAM,UAC3D8b,EAAAC,EAAAjc,cAAA,SAAO+O,KAAK,SAAS9O,GAAG,SAAS4M,KAAK,SAAS3M,MAAM,cAK3D8b,EAAAC,EAAAjc,cAAA,cACEgc,EAAAC,EAAAjc,cAAA,OAAKyC,MAAM,aACTuZ,EAAAC,EAAAjc,cAAA,OAAKyC,MAAM,mBAEbuZ,EAAAC,EAAAjc,cAAA,OAAKyC,MAAM,iBACTuZ,EAAAC,EAAAjc,cAAA,kFA9wEI6d,aC1CHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAvF,EAAA,GAAAha,KAAAuf,EAAAC,KAAA,WAAqBxf,KAAK,SAAAyf,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCADU,IAASC,WAAW7jB,SAASC,eAAe,SACpD6jB,OACH3C,EAAAC,EAAAjc,cAACgc,EAAAC,EAAM2C,WAAP,KACE5C,EAAAC,EAAAjc,cAAC6e,EAAD,QAOJf","file":"static/js/main.1b026c08.chunk.js","sourcesContent":["import './App.css';\nimport { Button, ButtonGroup} from 'react-bootstrap';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component } from 'react'; \n\nimport 'sf-font'; \nimport Web3 from 'web3';\n \n\nconst $ = window.$;\n\nvar tx_pending = false;\n\nvar CONFIG = null;\nvar ABI = null;\nvar account = null;\nvar nftcontract = null;\n\nvar defSymbol = null;\nvar totalGasLimit = null;\n\nvar walletBalanceAPI = null;\nvar scannerAPI = null;\nvar balanceAPI = null;\nvar resultAPICall = null;\nvar CONFIGWhitelist = null;\n\nvar nftName = null;\n\nvar stakingnftcontract = null;\nvar rewardcontract = null;\nvar nitrocontract = null;\nvar nftlevelcontract = null;\n\nvar stakingnft_address = null;\nvar nitroboost_address = null;\n\nvar scannercontract = null; \nvar scanneraddress = null; \n \nvar short_acct;\n\nvar web3 = null; \n\nvar rewardInDetail = false;\nvar vaultSelected = null;\n\nvar amtNitro = 0;\n\nvar isLoading = false;\nvar isRendering = false; \n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      width: window.innerWidth,\n    };\n\n  }\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n  handleWindowSizeChange = () => {\n    this.setState({ width: window.innerWidth });\n  };\n\n  componentDidUpdate(){ \n\n  }\n  \n \n  render() {\n    const { width } = this.state;\n    const isMobile = width <= 900;\n\n    let nftcost = '';\n  \n    const sleep = (milliseconds) => {\n      return new Promise(resolve => setTimeout(resolve, milliseconds))\n    }\n  \n    function delay() { \n      return new Promise(resolve => setTimeout(resolve, 300));\n    }\n \n    async function connectwallet() {\n      try {\n        if (window.ethereum) {\n\n          const configResponse = await fetch(\"/config/config.json\", {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n          });\n          CONFIG = await configResponse.json();\n\n          web3 = new Web3(window.ethereum);\n\n\n          await window.ethereum.send('eth_requestAccounts');\n          var accounts = await web3.eth.getAccounts();\n          account = accounts[0];\n\n          const networkId = await window.ethereum.request({\n            method: \"net_version\",\n          });\n\n          if ((networkId == CONFIG.MAINNET.ID) || (networkId == CONFIG.TESTNET.ID)) {\n\n            const abiResponse = await fetch(\"/config/abi.json\", {\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\",\n              },\n            });\n            ABI = await abiResponse.json();\n\n            var abiWhitelist = null;\n\n            if (networkId == CONFIG.MAINNET.ID) {\n              defSymbol = CONFIG.MAINNET.SYMBOL;\n              totalGasLimit = CONFIG.MAINNET.GAS_LIMIT;\n              scannerAPI = CONFIG.MAINNET.API;\n              balanceAPI = CONFIG.MAINNET.BALANCE;\n              walletBalanceAPI = CONFIG.MAINNET.WALLET;\n              rewardcontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, CONFIG.MAINDAPP.TOKENREWARD);\n              stakingnftcontract = await ABIFetch(web3, ABI.STAKING.ABI, CONFIG.MAINDAPP.STAKING);\n              nitrocontract = await ABIFetch(web3, ABI.NITROBOOST.ABI, CONFIG.MAINDAPP.NITROBOOST);\n              nftlevelcontract = await ABIFetch(web3, ABI.RUSHLEVEL.ABI, CONFIG.MAINDAPP.LEVELING);\n              scannercontract =  await ABIFetch(web3, ABI.SCANNER.ABI, CONFIG.MAINDAPP.SCANNER);\n              \n\n              stakingnft_address = CONFIG.MAINDAPP.STAKING;\n              nitroboost_address = CONFIG.MAINDAPP.NITROBOOST;  \n              scanneraddress = CONFIG.MAINDAPP.SCANNER;\n\n              abiWhitelist = await fetch(\"/config/whitelisted.json\", {\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Accept: \"application/json\",\n                },\n              });\n              CONFIGWhitelist = await abiWhitelist.json();\n\n            }\n            else if (networkId == CONFIG.TESTNET.ID) {  \n              defSymbol = CONFIG.TESTNET.SYMBOL;\n              totalGasLimit = CONFIG.TESTNET.GAS_LIMIT;\n              scannerAPI = CONFIG.TESTNET.API;\n              balanceAPI = CONFIG.TESTNET.BALANCE;\n              walletBalanceAPI = CONFIG.TESTNET.WALLET;\n              rewardcontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, CONFIG.TESTDAPP.TOKENREWARD);\n              stakingnftcontract = await ABIFetch(web3, ABI.STAKING.ABI, CONFIG.TESTDAPP.STAKING);\n              nitrocontract = await ABIFetch(web3, ABI.NITROBOOST.ABI, CONFIG.TESTDAPP.NITROBOOST);\n              nftlevelcontract = await ABIFetch(web3, ABI.RUSHLEVEL.ABI, CONFIG.TESTDAPP.LEVELING);\n              scannercontract =  await ABIFetch(web3, ABI.SCANNER.ABI, CONFIG.TESTDAPP.SCANNER);\n \n              stakingnft_address = CONFIG.TESTDAPP.STAKING;\n              nitroboost_address = CONFIG.TESTDAPP.NITROBOOST;\n              scanneraddress = CONFIG.TESTDAPP.SCANNER;\n\n              abiWhitelist = await fetch(\"/config/testwhitelisted.json\", {\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Accept: \"application/json\",\n                },\n              });\n              CONFIGWhitelist = await abiWhitelist.json();\n\n            }\n\n            onGoingNotif(\"\");\n\n            var sWallBal = document.getElementById(\"wallBal\");\n            sWallBal.style.width = \"100px\";\n            sWallBal.innerHTML = await WalletBalance(account);\n\n            resultAPICall = await APICall(account, scannerAPI); \n\n            await listNFTFilter(resultAPICall); \n\n            document.getElementById('unstaked-nft-container').innerHTML=\"\";\n            const DivContainer = document.getElementById('staked-nft-container');\n            DivContainer.innerHTML = \"\"; \n            await LoadVaults('staked-nft-container'); \n            var timer = setInterval(function () {\n              if (tx_pending==false){ \n                CheckRewards();\n              }\n            }, 5000);\n            await LoadVaultInfo();\n\n            localStorage.setItem('isWalletConnected', true);\n          }\n\n          else {\n            var z = window.confirm(\"Wrong network!\");\n          }\n\n        }\n      }\n      catch (ex) {\n        console.log('connectwallet - SeeError - ' + ex);\n      }\n    }\n \n    async function LoadVaults(tab_container){\n      if (account == null) {\n        return;\n      }\n      if(isRendering){\n        return;\n      }\n      isRendering = true;\n      onGoingNotif(\"Rendering NFTs...\");\n \n      await UnstakeMenuControl(false, false, false);\n\n      const DivContainer = document.getElementById(tab_container);\n      DivContainer.innerHTML = \"\";\n\n      if (width < 830) {\n        DivContainer.className = \"nft_card_view1\";\n      }\n      else if (width>=830 && width<1000){\n        DivContainer.className = \"nft_card_view2\";\n      }\n      else if (width>=1000 && width<1300){\n        DivContainer.className = \"nft_card_view3\";\n      }\n      else if(width>=1300){\n        DivContainer.className = \"nft_card_view4\";\n      }\n\n      var _vaultId;\n      var tokenIds;\n      var totalVaults = await scannercontract.methods.getTotalVault().call();\n      var isAcctHasStakeOnVault;\n      var _stakeVaults = new Array();\n      var contractAdress;\n      var usrCurrVault;\n      var _vaultContract;\n\n      for (let i=0; i<totalVaults; i++){\n        isAcctHasStakeOnVault = await scannercontract.methods.isAcctHasStakeOnVault(account, i).call();\n        if (isAcctHasStakeOnVault){\n          _stakeVaults.push(i);\n          usrCurrVault = i;\n        }\n      }\n      console.log(\"_stakeVaults\", _stakeVaults);\n \n      if (_stakeVaults.length==1){\n        rewardInDetail = true;\n        _vaultContract = await scannercontract.methods.getVaultAddress(usrCurrVault).call();\n        await modifyVault(usrCurrVault, _vaultContract);\n      }\n      else{\n        for (let i=0; i<_stakeVaults.length; i++){\n          _vaultId = _stakeVaults[i];\n          var _vaultInfo = await stakingnftcontract.methods.Vault(_vaultId).call();\n          if (_vaultInfo.active) {\n            contractAdress = _vaultInfo.nftAddress;\n            nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, contractAdress);\n            var nftName = _vaultInfo.vaultName; //await nftcontract.methods.name().call();\n\n            tokenIds = await getTokenIDs(_vaultId, account);\n            console.log(\"tokenIds.length\", tokenIds.length);\n\n            var _tkID = 0;\n            for (var j = 0; j < tokenIds.length; j++) {\n              _tkID = tokenIds[j];\n              if (_tkID == 0) {\n                continue;\n              }\n\n              let tokenMetadataURI = await nftcontract.methods.tokenURI(_tkID).call();\n              if (tokenMetadataURI.startsWith(\"ipfs://\")) {\n                tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI.split(\"ipfs://\")[1]}`;\n              }\n              \n              else if (tokenMetadataURI.startsWith(\"https://cattos.mypinata.cloud/ipfs/\")) {\n                tokenMetadataURI = tokenMetadataURI.replace(`https://cattos.mypinata.cloud/ipfs/`, `https://gateway.ipfs.io/ipfs/`);\n              }\n              \n              else if (tokenMetadataURI.startsWith(\"https://gateway.pinata.cloud/ipfs/\")) {\n                tokenMetadataURI = tokenMetadataURI.replace(`https://gateway.pinata.cloud/ipfs/`, ``);\n                tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI}${1}`;\n              }\n\n              var tokenMetadata;\n              try{\n                tokenMetadata = await fetch(tokenMetadataURI).then((response) => response.json());\n              }\n              catch(ex){\n                var uri = \"https://raw.githubusercontent.com/cryptobugnft/nitro/main/tank/InvalidURI.json\";\n                tokenMetadata = await fetch(uri).then((response) => response.json());\n              }\n\n              (async function () {\n                const cardVault = document.createElement('div');\n                cardVault.className = \"vault_container\";\n                cardVault.id = contractAdress;\n                cardVault.value = _vaultId;\n\n                const cardVaultCard = document.createElement('div');\n                cardVaultCard.className = \"vault_card\";\n                if (isMobile) {\n                  cardVaultCard.className = \"vault_card-mobile\";\n                }\n\n                const cardVaultFront = document.createElement('div');\n                cardVaultFront.className = \"vault_front parent\";\n                if (isMobile) {\n                  cardVaultFront.className = \"vault_front-mobile parent\";\n                }\n\n                var imgNFT\n                if (tokenMetadata[\"image\"].includes(\"mp4\")) {\n                  imgNFT = document.createElement('video');\n\n                  const vid_source = document.createElement(\"source\");\n\n                  if (tokenMetadata[\"image\"].startsWith(\"ipfs://\")) {\n                    vid_source.setAttribute(\"src\", `https://ipfs.io/ipfs/${tokenMetadata[\"image\"].split(\"ipfs://\")[1]}`);\n                  }\n                  else {\n                    vid_source.setAttribute(\"src\", tokenMetadata[\"image\"]);\n                  }\n                  vid_source.setAttribute(\"type\", \"video/mp4\");\n                  imgNFT.appendChild(vid_source);\n                }\n                else {\n                  imgNFT = document.createElement('img');\n                  //imgNFT.setAttribute(\"src\", '.\\loading.gif');\n\n                  var img_src = tokenMetadata[\"image\"];\n                  imgNFT.setAttribute(\"src\", img_src);\n                }\n                imgNFT.setAttribute(\"alt\", contractAdress);\n\n                const cardVaultDetails = document.createElement('div');\n                cardVaultDetails.className = \"vault_details\";\n\n                const cardH4 = document.createElement('h5');\n                cardH4.style.color = \"white\";\n                cardH4.className = \"VaultName\";\n                cardH4.innerHTML = (nftName.length > 15 ? nftName.substring(0, 10) + \"...\" : nftName) + \" Vault\";\n\n                const cardSpan = document.createElement('span');\n                cardSpan.className = \"spanX\"\n                cardSpan.id = \"Pending\" + contractAdress;\n                cardSpan.style.color = \"white\";\n                cardSpan.innerHTML = \"\";\n\n                cardVaultDetails.appendChild(cardH4);\n                cardVaultDetails.appendChild(cardSpan);\n\n                cardVaultFront.appendChild(imgNFT);\n                cardVaultFront.appendChild(cardVaultDetails);\n\n                const cardVaultBack = document.createElement('div');\n                cardVaultBack.className = \"vault_back\";\n\n                var _tbl = document.createElement('table');\n                var _tr = document.createElement('tr');\n                _tbl.appendChild(_tr);\n\n                var _attrdiv = document.createElement('div');\n                var nft_dtl = document.createElement('h6');\n                \n                //HELPER FUNCTION\n                //var _nftName = await nftcontract.methods.name().call();\n                var _symbl = \"\";  //await nftcontract.methods.symbol().call();\n                var _supply = \"\";  //await nftcontract.methods.totalSupply().call();\n \n                nft_dtl.innerHTML = \"Name: \" + nftName + '</br>Symbol: ' + _symbl + '</br>Total Supply: ' + _supply;\n                _attrdiv.appendChild(nft_dtl);\n                _tbl.appendChild(_attrdiv);\n\n                var _tr2 = document.createElement('tr');\n                _tr2.className = \"vault_back_att\";\n\n                const cardButtonClaim = document.createElement('a');\n                cardButtonClaim.style.color = \"white\";\n                cardButtonClaim.innerHTML = \"Claim All \";\n                cardButtonClaim.className = \"back_attr\";\n                cardButtonClaim.onclick = function () { claimVault(cardVault.value); }\n\n                const cardButtonUnstake = document.createElement('a');\n                cardButtonUnstake.style.color = \"white\";\n                cardButtonUnstake.innerHTML = \"Unstake All \";\n                cardButtonUnstake.className = \"back_attr\";\n                cardButtonUnstake.onclick = function () { unstakeVault(cardVault.value); }\n\n                const cardButtonModify = document.createElement('a');\n                cardButtonModify.style.color = \"white\";\n                cardButtonModify.innerHTML = \"Modify\";\n                cardButtonModify.className = \"back_attr\";\n                cardButtonModify.onclick = function () { modifyVault(cardVault.value, cardVault.id); }\n\n                _tr2.appendChild(cardButtonClaim);\n                _tr2.appendChild(cardButtonUnstake);\n                _tr2.appendChild(cardButtonModify);\n\n                _tbl.appendChild(_tr2);\n                cardVaultBack.appendChild(_tbl);\n \n                cardVaultCard.appendChild(cardVaultFront);\n                cardVaultCard.appendChild(cardVaultBack);\n\n                cardVault.appendChild(cardVaultCard);\n\n                DivContainer.appendChild(cardVault);\n              })(); \n              break; \n            }\n          }\n        }\n      } \n      isRendering = false;\n      onGoingNotif(\"\"); \n    }\n \n\n    async function VaultRewardToken(delegate){\n      var vaultrewarder = await ABIFetch(web3, ABI.REWARDER.ABI, delegate); \n      var rewardToken = await vaultrewarder.methods.rewardToken().call(); \n      var _rewardcontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, rewardToken);\n      return _rewardcontract;\n    }\n\n    async function LoadVaultInfo(){\n      try{\n        var tbl = document.getElementById('tblvaultInfo');\n        tbl.innerHTML=\"\";\n\n        var thd = document.createElement('thead');\n        thd.className = \"thead-light\";\n        tbl.appendChild(thd);\n\n        var _tr = document.createElement('tr');\n        var _th1 = document.createElement('th');\n        _th1.scope = 'col';\n        _th1.innerHTML = 'Collection';\n        _tr.appendChild(_th1)\n\n        var _th2 = document.createElement('th');\n        _th2.scope = 'col';\n        _th2.innerHTML = 'Rewards Per Day';\n        _tr.appendChild(_th2)\n\n        thd.appendChild(_tr);\n\n        var counter_vault = 0;\n\n        var _tbody = document.createElement('tbody');\n        var _vault = await stakingnftcontract.methods.Vault(counter_vault).call();\n        while (_vault.active) { \n          var _rewardcontract;\n          if (_vault.delegate != stakingnft_address){\n            _rewardcontract = await VaultRewardToken(_vault.delegate); \n          }\n          else{\n            _rewardcontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, _vault.tokenReward);\n          }\n          var _rewardSymbol = await _rewardcontract.methods.symbol().call(); \n\n          var _tbody_tr = document.createElement('tr');\n\n          var _tbody_td1 = document.createElement('td');\n  \n          var short_vault = (_vault.vaultName.length > 20 ? _vault.vaultName.substring(0, 20) + \"...\" : _vault.vaultName);\n          _tbody_td1.innerHTML = short_vault;  \n          _tbody_tr.appendChild(_tbody_td1);\n\n          var _tbody_td2 = document.createElement('td');\n          _tbody_td2.class='amount'; \n \n          if (_vault.reqBooster == false){ \n            _tbody_td1.className=\"textGlow\";  \n            _tbody_td2.className=\"textGlow\";  \n          }\n\n          var _span1 = document.createElement('span');\n          _span1.class = \"amount\";\n          _span1.innerHTML=Web3.utils.fromWei(_vault.rewardRate) + \" \";\n\n          var _span2 = document.createElement('span');\n          _span2.class = \"currency\";\n          _span2.innerHTML = _rewardSymbol;\n\n          _tbody_td2.appendChild(_span1);\n          _tbody_td2.appendChild(_span2);\n\n          _tbody_tr.appendChild(_tbody_td2);\n\n          _tbody.appendChild(_tbody_tr);\n\n          counter_vault += 1;\n          var _vault = await stakingnftcontract.methods.Vault(counter_vault).call();\n\n        }    \n        tbl.appendChild(_tbody);\n      }\n      catch(ex){\n        console.log(ex);\n      } \n    }\n \n\n    async function RefreshCollection() {      \n      if (account==null){\n        return;\n      }\n      var nftCol = document.getElementById(\"nftFilter\").value;  \n      resultAPICall = await APICall(account, scannerAPI);\n      await listNFT(account, 'unstaked-nft-container', resultAPICall, nftCol);\n    }\n\n    async function APICall(account, API) {\n      var theURL = API + \"=\" + account;\n      var apiResponse = await fetch(theURL);\n      var jsonParsedContents = await apiResponse.json();\n\n      return jsonParsedContents;\n    }\n\n    async function APIBalanceCall(_account, _CA, API) {\n      var theURL = API.replace('@CONTRACTADDRESS', _CA).replace('@ACCOUNT', _account);\n      var apiResponse = await fetch(theURL);\n      var jsonParsedContents = await apiResponse.json();\n\n      return jsonParsedContents;\n    }\n\n    async function WalletBalance(_account) {\n      var theURL = walletBalanceAPI.replace('@ACCOUNT', _account);\n      var apiResponse = await fetch(theURL);\n      var jsonParsedContents = await apiResponse.json();\n\n      var earnedrwd = Web3.utils.fromWei(jsonParsedContents.result);\n      var rewards = Number(earnedrwd).toFixed(3);\n\n      return '  ' + rewards + ' ' + defSymbol;\n    }\n\n    async function claimVault(_vaultId) {\n      try {\n        await onGoingNotif(\"Pending...\"); \n        var _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n\n        var _tkIDs = [];\n\n        var nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _vault.nftAddress);        \n        var balanceOfOwner = await nftcontract.methods.balanceOf(stakingnft_address).call(); \n\n        for (let j = 0; j < balanceOfOwner; j++) {\n          var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(stakingnft_address, j).call();\n          var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n          if (_nftStakeInfo.owner == account) { \n            _tkIDs.push(_tkID);\n          }\n        }\n  \n        await stakingnftcontract.methods.claim(_vaultId, _tkIDs).send({ from: account });\n        await refreshDAppView();\n\n      }\n      catch (ex) {\n        console.log('claimVault');\n        console.log(ex);\n      }\n      await onGoingNotif(\"\"); \n    } \n\n    async function modifyVault(_vaultId, _vaultContract) {\n      try {\n        await UnstakeMenuControl(true, true, true);\n\n        var tab_container = \"staked-nft-container\";\n        document.getElementById('staked-nft-container').innerHTML = \"\";\n \n        rewardInDetail = true;\n\n        vaultSelected = await scannercontract.methods.getVaultAddress(_vaultId).call();\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, vaultSelected);\n        await renderNFT(tab_container, nftcontract, vaultSelected, account, true);\n \n      }\n      catch (ex) {\n        console.log(ex);\n      }\n    }\n\n\n    async function onGoingNotif(msg) {\n      var btnConnect = document.getElementById('btnConnect');\n      if (msg == \"\") {\n        try {\n          hideCover();\n          tx_pending=false;\n        }\n        catch (ex) {\n        }\n\n        short_acct = account.substring(0, 6) + \"....\" + account.substring(account.length - 4, account.length);\n        var img = document.createElement('img');\n        img.className = \"ml-3\";\n        img.setAttribute(\"src\", 'chef.svg'); \n        btnConnect.innerHTML = short_acct;\n        btnConnect.appendChild(img);\n      }\n      else {\n        showCover();\n        btnConnect.innerHTML = \"\";\n        btnConnect.innerHTML = msg; \n      }\n    }\n\n    async function unstakeVault(_vaultId) {\n      try {\n        await onGoingNotif(\"Pending...\");\n\n        var _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n\n        var _tkIDs = [];\n        resultAPICall = await APIBalanceCall(stakingnft_address, _vault.nftAddress, balanceAPI);\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _vault.nftAddress);\n\n        for (let i = 0; i < resultAPICall.result; i++) {\n          var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(stakingnft_address, i).call();\n          var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n          if (_nftStakeInfo.owner == account) {\n            _tkIDs.push(_tkID);\n          }\n        }\n        await stakingnftcontract.methods.unstake(_vaultId, _tkIDs).send({ from: account });\n        await refreshDAppView();\n      }\n      catch (ex) {\n        console.log('unstakeVault');\n        console.log(ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function GetNFTLevel(_vaultId, _tkID){   \n      try{\n        var nftLevel = await nftlevelcontract.methods.getNFTLevel(_vaultId, _tkID).call(); \n        if (nftLevel != \"undefined\") {\n          return `Lv ${nftLevel}`;\n        }         \n      } \n      catch(ex){\n        return \"\";\n      }     \n    }\n\n    async function CheckRewards() {\n      if (isLoading || isRendering) {\n        console.log(isLoading,isRendering);\n        return;\n      }\n      isLoading = true;\n\n      var _stakeVaults = new Array();\n      var _vaultId;\n      var _symbol = await rewardcontract.methods.symbol().call();\n\n      try {\n        var btnConnect = document.getElementById('btnConnect');\n        if (!btnConnect.innerHTML.includes(short_acct)) {\n          return;\n        }\n        var sWallBal = document.getElementById(\"wallBal\");\n        sWallBal.innerHTML = await WalletBalance(account);\n \n        var totalVaults = await scannercontract.methods.getTotalVault().call();\n\n        if (rewardInDetail == false) {\n\n          for (let i = 0; i < totalVaults; i++) {\n            var isAcctHasStakeOnVault = await scannercontract.methods.isAcctHasStakeOnVault(account, i).call();\n            if (isAcctHasStakeOnVault) {\n              _stakeVaults.push(i); \n            }\n          }\n\n          for (let i = 0; i < _stakeVaults.length; i++) {\n            _vaultId = _stakeVaults[i];  \n            var contractAdress = await scannercontract.methods.getVaultAddress(_vaultId).call();  \n\n            var divPend = document.getElementById(\"Pending\" + contractAdress);\n            var _pendingRewards = 0;\n\n            if (divPend != null) {\n              var result = await stakingnftcontract.methods.pendingRewardByAccount(_vaultId, account).call();\n              const { 0: _pend, 1: _stakeCount } = result;\n\n              var earned = String(_pend).split(\",\")[0];\n              var earnedrwd = Web3.utils.fromWei(earned);\n              _pendingRewards = Number(earnedrwd).toFixed(2);\n\n              //Custom Reward Token\n              var _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n              if (_vault.delegate != stakingnft_address) {\n                var _rewardcontract = await VaultRewardToken(_vault.delegate);\n                _symbol = await _rewardcontract.methods.symbol().call();\n              }\n              divPend.innerHTML = `Total: ${_stakeCount} | <h6 class='pendingRewards'> Earn: ${_pendingRewards} ${_symbol} </h6>`;\n            }\n          }\n        }\n        else if (rewardInDetail == true) {\n          try { \n            _vaultId = await stakingnftcontract.methods.getVaultId(vaultSelected).call(); \n            _pendingRewards = 0; \n\n            //Custom Reward Token\n            var _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n            if (_vault.delegate != stakingnft_address) {\n              var _rewardcontract = await VaultRewardToken(_vault.delegate);\n              _symbol = await _rewardcontract.methods.symbol().call();\n            }\n\n            var tokenIds = await getTokenIDs(_vaultId, account);\n            for (var i = 0; i < tokenIds.length; i++) {\n              var _tkID = tokenIds[i];\n              var _pend = await stakingnftcontract.methods.pendingReward(_vaultId, _tkID).call();\n              var earned = String(_pend).split(\",\")[0];\n              var earnedrwd = Web3.utils.fromWei(earned);\n              var rewards = Number(earnedrwd).toFixed(4);\n              _pendingRewards = Number(rewards).toFixed(4);\n\n              const objNFTPend = document.getElementById(\"att\" + _vaultId + _tkID);\n              objNFTPend.innerHTML = \"\";\n              objNFTPend.innerHTML = \"Earn: \" + _pendingRewards + \" \" + _symbol;\n\n\n              var nftLevel = await GetNFTLevel(_vaultId, _tkID);\n              const objNFTLvl = document.getElementById(\"lvl\" + _vaultId + _tkID);\n              objNFTLvl.innerHTML = \"\";\n              objNFTLvl.innerHTML = nftLevel;\n\n              var _nitroStakeRemaining;\n              try {\n                const result = await stakingnftcontract.methods.nitroStakeRemaining(_vaultId, _tkID).call();\n\n                const { 0: nitroID, 1: limit, 2: remain } = result;\n                _nitroStakeRemaining = remain;\n\n                var _nitroEquipped;\n                var _multipower;\n                var _powerFloat;\n                var nftLvlBonus;\n                var _lvlFloat;\n\n                _nitroEquipped = await stakingnftcontract.methods.getEquippedNitro(_vaultId, _tkID).call();\n                if (_nitroEquipped > 0) {\n                  _multipower = await stakingnftcontract.methods.getNitroPower(_vaultId, _nitroEquipped).call();\n                  _powerFloat = parseFloat(_multipower + '.00') / 100;\n                  nftLvlBonus = await nftlevelcontract.methods.getLevelBonus(_vaultId, _tkID).call();\n                  _lvlFloat = parseFloat(nftLvlBonus + '.00') / 100;\n                  _powerFloat = _powerFloat * _lvlFloat;\n \n                  if (_nitroStakeRemaining > 0) {\n                    var _glowNum = await nitrocontract.methods.getRareType(nitroID).call();\n\n                    var inSec = (_nitroStakeRemaining / 86400) * 24 * 60 * 60;\n\n                    var seconds = Number(inSec);\n                    var d = Math.floor(seconds / (3600 * 24));\n                    var h = Math.floor(seconds % (3600 * 24) / 3600);\n                    var m = Math.floor(seconds % 3600 / 60);\n                    var s = Math.floor(seconds % 60);\n\n                    var dDisplay = d > 0 ? d + (d == 1 ? \" day, \" : \" days, \") : \"\";\n                    var hDisplay = h > 0 ? h + (h == 1 ? \":\" : \":\") : \"\";\n                    var mDisplay = m > 0 ? m + (m == 1 ? \":\" : \":\") : \"\";\n                    var sDisplay = s > 0 ? s + (s == 1 ? \"\" : \"\") : \"\";\n                    var remainingBurn = dDisplay + hDisplay + mDisplay + sDisplay;\n \n                    document.getElementById(\"att2\" + _vaultId + _tkID).innerHTML = \"<span class='font-awesome-icons rocket'></span> \" + remainingBurn + ' left'\n                      + '</br> x' + _powerFloat.toFixed(2);\n                    document.getElementById(\"nft\" + _vaultId + \"|\" + _tkID).className = \"nftCard Equipped\" + _glowNum;\n\n                  }\n                  else {\n                    document.getElementById(\"att2\" + _vaultId + _tkID).innerHTML = 'x' + _powerFloat.toFixed(2);\n                  } \n                }\n              }\n              catch (ex3) {\n                console.log(\"CheckRewards - 3\",  ex3);\n              }\n            }\n          }\n          catch (ex2) {\n            console.log(\"CheckRewards - 2\", ex2);\n          }\n        }\n      }\n      catch(ex1){\n        console.log(\"CheckRewards - 1\", ex1);\n      }\n      isLoading = false; \n    }\n \n    async function UnstakeMenuControl(btnBack, btnClaim, btnUnstake) {\n      var _btnBack = document.getElementById(\"btnBack\");\n      var _btnClaim = document.getElementById(\"btnClaimSelected\");\n      var _btnUnstake = document.getElementById(\"btnUnstakeSelected\");\n\n      if ((btnBack == false) && (btnClaim == false) && (btnUnstake == false)) {\n        document.getElementById(\"btnUnstakeMenu\").style.display = \"none\";\n      }\n      else {\n        document.getElementById(\"btnUnstakeMenu\").style.display = \"\";\n      }\n\n      if (btnBack == false) {\n        _btnBack.setAttribute(\"disabled\", \"disabled\");\n        _btnBack.classList.add(\"disabled\");\n      }\n      else {\n        _btnBack.removeAttribute('disabled');\n        _btnBack.classList.remove(\"disabled\");\n      }\n\n      if (btnClaim == false) {\n        _btnClaim.setAttribute(\"disabled\", \"disabled\");\n        _btnClaim.classList.add(\"disabled\");\n      }\n      else {\n        _btnClaim.removeAttribute('disabled');\n        _btnClaim.classList.remove(\"disabled\");\n      }\n\n      if (btnUnstake == false) {\n        _btnUnstake.setAttribute(\"disabled\", \"disabled\");\n        _btnUnstake.classList.add(\"disabled\");\n      }\n      else {\n        _btnUnstake.removeAttribute('disabled');\n        _btnUnstake.classList.remove(\"disabled\");\n      }\n    }\n  \n    async function getTokenIDs(_vaultId, _account) {\n      var tokenIds = await scannercontract.methods.getStakeInVaultAccount(_vaultId, _account).call();\n      var tkns = new Array();\n      for (let j = 0; j < tokenIds.length; j++) {\n        if (tokenIds[j] > 0) {\n          tkns.push(tokenIds[j]);\n        }\n      }\n      return tkns;\n    }\n  \n    async function listNFT(_account, tab_container, jsonParsedContents, filterList) {\n      try {\n        var userNFTHold = 0;\n        var btnStakeAll = document.getElementById(\"btnStakeAll\");\n        var btnStakeSelected = document.getElementById(\"btnStakeSelected\");\n\n        document.getElementById(tab_container).innerHTML = \"\"; \n\n        if (filterList == \"All\" || filterList == \"All Owned NFT\") {\n          btnStakeAll.setAttribute('disabled', 'disabled');\n          btnStakeSelected.setAttribute('disabled', 'disabled');\n\n          //Populate List NFT \n          if (jsonParsedContents != null) {  \n            for (var key in CONFIGWhitelist.NFT) {\n              for (let i = 0; i < jsonParsedContents.result.length; i++) { \n\n                if (jsonParsedContents.result[i].type == \"ERC-721\") {\n                  if (CONFIGWhitelist.NFT[key].ADDRESS == jsonParsedContents.result[i].contractAddress) {\n                    nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, jsonParsedContents.result[i].contractAddress);\n                    userNFTHold = userNFTHold + (await renderNFT(tab_container, nftcontract, jsonParsedContents.result[i].contractAddress, _account));  //myHoldNFT\n                    break;\n                  }\n                }\n              }\n            }\n\n            //All other ERC-721\n            var ctr;\n            for (let i = 0; i < jsonParsedContents.result.length; i++) {\n                if (jsonParsedContents.result[i].type == \"ERC-721\" && nitroboost_address.toUpperCase() != jsonParsedContents.result[i].contractAddress.toUpperCase()) {\n                ctr = 0;\n                for (var key in CONFIGWhitelist.NFT) {\n                  if (CONFIGWhitelist.NFT[key].ADDRESS != jsonParsedContents.result[i].contractAddress) {\n                    ctr++;\n                  }\n                }\n                if (ctr >= CONFIGWhitelist.NFT.length) {\n                  nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, jsonParsedContents.result[i].contractAddress);  \n                  userNFTHold = userNFTHold + (await renderNFT(tab_container, nftcontract, jsonParsedContents.result[i].contractAddress, _account));  //myHoldNFT\n                }\n              }\n            }\n          }\n        }\n        else {\n          nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, filterList); \n          userNFTHold = userNFTHold + (await renderNFT(tab_container, nftcontract, filterList, _account));   \n          btnStakeAll.removeAttribute('disabled');\n          btnStakeSelected.removeAttribute('disabled');\n        }\n\n        if (userNFTHold == 0) {\n          ShowNFTError(\"NO NFT SCANNED.\");\n        }\n      }\n\n      catch (ex) {\n        console.log('listNFT - SeeError - ' + ex);\n        ShowNFTError(ex);\n      }\n    }\n\n    async function ABIFetch(web3, _abi, _address) {\n      var _contract;\n      var ABIResponse;\n\n      ABIResponse = await fetch(_abi, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      });\n      const ABIJSON = await ABIResponse.json();\n      _contract = new web3.eth.Contract(ABIJSON, _address);\n      return _contract;\n    }\n\n    async function listNFTFilter(jsonParsedContents) {\n      var lstNFT = document.getElementById(\"nftFilter\");\n      lstNFT.innerHTML = \"\";\n\n      for (let i = 0; i < jsonParsedContents.result.length; i++) {\n        if (i == 0) {\n          var z_1 = document.createElement(\"option\");\n          z_1.setAttribute(\"value\", \"All\");\n          var t_1 = document.createTextNode(\"All Owned NFT\");\n\n          z_1.appendChild(t_1);\n          lstNFT.appendChild(z_1);\n        }\n\n        if (jsonParsedContents.result[i].type == \"ERC-721\" && jsonParsedContents.result[i].balance > 0 && nitroboost_address.toUpperCase() != jsonParsedContents.result[i].contractAddress.toUpperCase()) {\n          var z = document.createElement(\"option\");\n          z.setAttribute(\"value\", jsonParsedContents.result[i].contractAddress);\n\n          var t = document.createTextNode(jsonParsedContents.result[i].name + \": \" + jsonParsedContents.result[i].balance);\n          z.appendChild(t);\n\n          lstNFT.appendChild(z);\n        } \n      }\n    }\n\n    async function fetchNFTImage(nftcontract, _account, tkID, _caller) {\n      var tokenMetadata = null;\n      try {\n        let tokenMetadataURI = await nftcontract.methods.tokenURI(tkID).call();  \n\n        if (tokenMetadataURI.startsWith(\"ipfs://\")) {\n          tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI.split(\"ipfs://\")[1]}`;\n        }\n        else if (tokenMetadataURI.startsWith(\"https://gateway.pinata.cloud/ipfs/\")) {\n          tokenMetadataURI = tokenMetadataURI.replace(`https://gateway.pinata.cloud/ipfs/`, ``);\n          tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI}${tkID}`;\n        }\n        tokenMetadata = await fetch(tokenMetadataURI).then((response) => response.json());\n\n      }\n      catch (ex) {\n        var uri = \"https://raw.githubusercontent.com/cryptobugnft/nitro/main/tank/InvalidURI.json\";\n        tokenMetadata = await fetch(uri).then((response) => response.json());\n        console.log('Caller - ' + _caller, ex);\n      } \n      return tokenMetadata; \n    }\n  \n    async function renderNFT(tab_container, nftcontract, contractAdress, _account, isStaked){\n      var nftName = await nftcontract.methods.name().call();\n      var balanceOfOwner;  \n\n      var tokenIds;\n      if (isStaked){        \n        var _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n        tokenIds = await getTokenIDs(_vaultId, _account); \n        balanceOfOwner = tokenIds.length;\n      }\n      else{\n        balanceOfOwner = await nftcontract.methods.balanceOf(_account).call();  \n      }\n\n      var nftContainer = document.getElementById(tab_container); \n      var nftCard;\n        var nftTable;\n      var nftMedia;\n        var nftTD;\n          var nftLvl;\n          var nftChk;\n          var nftLbl;\n          var nftImg;\n      var nftAtt;\n        var nftAttTD;\n          var nftTxt1;\n          var nftTxt2;\n          var nftBtn;\n          var nftTxt3;\n      try{\n\n        if (width>=400 && width<850){\n          nftContainer.className = \"nft_card_view2\";\n        }\n        else if (width>=850 && width<1000){\n          nftContainer.className = \"nft_card_view3\";\n        }\n        else if (width>=1000 && width<1300){\n          nftContainer.className = \"nft_card_view4\";\n        }\n        else if(width>=1300){\n          nftContainer.className = \"nft_card_view5\";\n        }\n\n        onGoingNotif(\"Loading...\");\n        for (let i = 0; i < balanceOfOwner; i++){\n          (async function (){\n            var tkID;\n\n            if (isStaked){\n              if (tokenIds[i]==0){\n                return;\n              }\n              tkID = tokenIds[i];\n            }\n            else{\n              tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, i).call();\n            }\n            \n            const tokenMetadata = await fetchNFTImage(nftcontract, _account, tkID, 'renderNFT');  \n            const _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n             \n\n            nftCard = document.createElement(\"div\");\n            nftCard.id = \"nft\" + _vaultId + \"|\" + tkID;\n            nftCard.className = \"nftCard\";\n\n            nftTable = document.createElement(\"TABLE\");\n            nftTable.setAttribute(\"id\", \"tbl\" + _vaultId + tkID);\n            nftCard.appendChild(nftTable);\n\n            nftMedia = document.createElement(\"TR\");\n            nftMedia.className = \"nftMedia\";\n            nftTable.appendChild(nftMedia);\n\n            nftTD = document.createElement(\"TD\");\n            nftTD.className = \"nftTD\";\n            nftMedia.appendChild(nftTD);\n\n            nftLvl = document.createElement('h6');\n            nftLvl.id = \"lvl\" + _vaultId + tkID;\n            nftLvl.className = \"nftLvl\";\n            nftLvl.innerHTML = \"\"\n            nftTD.appendChild(nftLvl);\n\n            nftChk = document.createElement(\"INPUT\");\n            nftChk.setAttribute(\"type\", \"checkbox\");\n            nftChk.id = contractAdress + \"_\" + tkID;\n            nftChk.className = \"nftChk\";\n            nftTD.appendChild(nftChk);\n \n            nftLbl = document.createElement(\"LABEL\");\n            nftLbl.className = \"parent\";\n            nftLbl.htmlFor = nftChk.id;\n            nftTD.appendChild(nftLbl);\n\n            if (tokenMetadata[\"image\"].includes(\"mp4\")) {\n              nftImg = document.createElement('video');\n              const vid_source = document.createElement(\"source\");\n              if (tokenMetadata[\"image\"].startsWith(\"ipfs://\")) {\n                vid_source.setAttribute(\"src\", `https://ipfs.io/ipfs/${tokenMetadata[\"image\"].split(\"ipfs://\")[1]}`);\n              }\n              else {\n                vid_source.setAttribute(\"src\", tokenMetadata[\"image\"]);\n              }\n              vid_source.setAttribute(\"type\", \"video/mp4\");\n              nftImg.appendChild(vid_source);\n            }\n            else {\n              try{\n                nftImg = document.createElement('img');\n                var _imgFix = tokenMetadata[\"image\"];\n                if (_imgFix.startsWith(\"ipfs://\")) {\n                  _imgFix = `https://ipfs.io/ipfs/${_imgFix.replace(\"ipfs://\", '')}`\n                }\n                else if (_imgFix.startsWith(\"https://cattos.mypinata.cloud/ipfs/\")) {\n                  _imgFix = _imgFix.replace(`https://cattos.mypinata.cloud/ipfs/`, `https://gateway.ipfs.io/ipfs/`);\n                }\n                nftImg.setAttribute(\"src\", _imgFix);\n              }\n              catch(img_er){\n                console.log(\"renderNFT:\", img_er);\n                nftImg.setAttribute(\"src\", \"hidden.jpg\");\n              }\n            }\n            nftImg.setAttribute(\"alt\", \"Error loading image\");\n            nftImg.className=\"nftImg\";\n            nftLbl.appendChild(nftImg);\n             \n            nftAtt = document.createElement(\"TR\");\n            nftAtt.className = \"nftAtt\";\n            nftTable.appendChild(nftAtt);\n\n            nftAttTD = document.createElement(\"TD\");\n            nftAttTD.className = \"nftAttTD\";\n            nftAtt.appendChild(nftAttTD);\n\n \n            nftTxt1 = document.createElement('h6');\n            nftTxt1.id = \"stk\" + _vaultId + tkID;\n            nftTxt1.className = \"nftTxt1\";\n            nftTxt1.innerHTML = (nftName.length > 20 ? nftName.substring(0, 20) : nftName) + ` #` + (tkID.length > 5 ? tkID.substring(1, 5) : tkID);\n            nftAttTD.appendChild(nftTxt1); \n\n            nftTxt2 = document.createElement('h6');\n            nftTxt2.id = \"att\" + _vaultId + tkID;\n            nftTxt2.className = \"nftTxt2\";\n            nftTxt2.innerHTML = \"\";\n            nftAttTD.appendChild(nftTxt2); \n\n            nftBtn = document.createElement('button');\n            nftBtn.type = \"button\";\n            nftBtn.className = \"nftBtn\";\n            nftBtn.style = \"{{ fontFamily: 'SF Pro Display' }}\";\n            nftBtn.innerHTML = \"+\";\n\n            if (isStaked){              \n              nftBtn.onclick = function () {\n                showPrompt(_vaultId + \"|\" + tkID, function (value) {\n                });\n              };\n            }\n            else{              \n              nftBtn.onclick = function () {\n                showPromptTransfer(_vaultId + \"|\" + tkID + \"|\" + contractAdress, function (value) {\n                });\n              };\n            }\n\n            nftAttTD.appendChild(nftBtn); \n \n            nftTxt3 = document.createElement('h6');\n            nftTxt3.id = \"att2\" + _vaultId + tkID;\n            nftTxt3.className = \"nftTxt3\";\n            nftTxt3.innerHTML = \"\";\n            nftAttTD.appendChild(nftTxt3); \n\n            nftContainer.appendChild(nftCard);\n\n          })();\n        }\n        onGoingNotif(\"\");\n        return balanceOfOwner;\n\n\n      }\n      catch(ex){\n        ShowNFTError(nftcontract + \" - Error on reading token URI\");\n        console.log(\"renderNFT\", ex);\n      }\n    }\n\n    async function ShowNFTCard(tab_container, nftcontract, contractAdress, _account, isStaked) {\n      var nftName = await nftcontract.methods.name().call();\n      var balanceOfOwner = await nftcontract.methods.balanceOf(_account).call();\n      var DivContainer = document.getElementById(tab_container);\n      var nftcontainer;\n      var objNFTPend;\n      var objNFTNitroEquip;\n      var btnPowerUp;\n      var imgNFT;\n\n      var mismatchNFT; \n\n      try {\n        for (let i = 0; i < balanceOfOwner; i++) {\n          (async function () {\n            try {\n              var tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, i).call();\n              const tokenMetadata = await fetchNFTImage(nftcontract, _account, tkID, 'ShowNFTCard');\n              var _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n              var _checkAdd = stakingnftcontract.methods.Vault(_vaultId).call();\n              \n              mismatchNFT = false;\n              if (_checkAdd.nftAddress != contractAdress) {\n                mismatchNFT = true;\n              }\n\n              var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, tkID).call();\n              if (isStaked) {\n                if (_nftStakeInfo.owner != account) {\n                  return;\n                }\n              }\n\n              nftcontainer = document.createElement(\"div\");\n              nftcontainer.id = \"nftcontainer_\" + _vaultId + \"_\" + tkID; \n              if (isMobile) {\n                nftcontainer.className = \"nftcontainer-mobile\";\n              }\n              else {\n                nftcontainer.className = \"nftcontainer\";\n              }\n\n              const nftdetail = document.createElement('div');\n              nftdetail.id = \"nftdetail_\" + _vaultId + \"_\" + tkID;\n              nftdetail.className = \"nftdetail\";\n\n              const chk = document.createElement(\"INPUT\");\n              chk.setAttribute(\"type\", \"checkbox\");\n              chk.id = contractAdress + \"_\" + tkID;\n              chk.className = \"unlisted\";\n\n              const lbl = document.createElement(\"LABEL\");\n              lbl.className = \"parent\";\n              lbl.htmlFor = chk.id;\n\n              if (tokenMetadata[\"image\"].includes(\"mp4\")) {\n                imgNFT = document.createElement('video');\n              }\n              else {\n                imgNFT = document.createElement('img');\n              }\n              if (isMobile) {\n                imgNFT.className = \"image-mobile\";\n              }\n              else {\n                imgNFT.className = \"image\";\n              }\n\n              if (tokenMetadata[\"image\"].includes(\"mp4\")) {\n\n                const vid_source = document.createElement(\"source\");\n                if (tokenMetadata[\"image\"].startsWith(\"ipfs://\")) {\n                  vid_source.setAttribute(\"src\", `https://ipfs.io/ipfs/${tokenMetadata[\"image\"].split(\"ipfs://\")[1]}`);\n                }\n                else {\n                  vid_source.setAttribute(\"src\", tokenMetadata[\"image\"]);\n                }\n\n                vid_source.setAttribute(\"type\", \"video/mp4\");\n                imgNFT.appendChild(vid_source);\n              }\n              else {\n                var _imgFix = tokenMetadata[\"image\"];\n                if (_imgFix.startsWith(\"ipfs://\")) {\n                  _imgFix = `https://ipfs.io/ipfs/${_imgFix.replace(\"ipfs://\", '')}`\n                }\n                imgNFT.setAttribute(\"src\", _imgFix);\n              } \n              imgNFT.setAttribute(\"alt\", \"Error loading image\");  \n \n              var _level = await nftlevelcontract.methods.getNFTLevel(_vaultId, tkID).call();\n              if(_level>0){\n                _level = \"(Lv\" + _level + \")\"; \n              }\n              else{\n                _level=\"\";\n              }\n\n              const objNFT = document.createElement('h6');\n              objNFT.id = \"stk\" + _vaultId + tkID;\n              objNFT.className = \"h6nftName\";\n              objNFT.innerHTML = (nftName.length > 20 ? nftName.substring(1, 20) : nftName) + ` #` + (tkID.length > 5 ? tkID.substring(1, 5) : tkID) + _level;\n\n              lbl.appendChild(imgNFT);\n              nftcontainer.appendChild(chk);\n              nftcontainer.appendChild(lbl);\n\n              nftdetail.appendChild(objNFT);\n              nftcontainer.appendChild(nftdetail);\n\n              /* Begin - For Staked NFT Only */\n              if (isStaked) {\n \n                objNFTPend = document.createElement('h6');\n                objNFTPend.className = \"h6pendingEarn\";\n                objNFTPend.id = \"pend\" + _vaultId + tkID;\n                objNFTPend.innerHTML = \"\";\n\n                objNFTNitroEquip = document.createElement('h6');\n                objNFTNitroEquip.className = \"h6nitroEquip\";\n                objNFTNitroEquip.id = \"nitro\" + _vaultId + tkID;\n                objNFTNitroEquip.innerHTML = \"\";\n\n                btnPowerUp = document.createElement('button');\n                btnPowerUp.type = \"button\";\n                btnPowerUp.className = \"powerUpButton\";\n                btnPowerUp.style = \"{{ fontFamily: 'SF Pro Display' }}\";\n                btnPowerUp.innerHTML = \"+\";\n\n                btnPowerUp.onclick = function () {\n                  showPrompt(_vaultId + \"|\" + tkID, function (value) {\n                  });\n                };\n                nftdetail.appendChild(objNFTNitroEquip);\n                nftcontainer.appendChild(objNFTPend);\n                nftcontainer.appendChild(btnPowerUp);\n              }\n              /* End - For Staked NFT Only */\n\n              /*Put Transfer NFT if Not Staked*/\n              else {\n\n                btnPowerUp = document.createElement('button');\n                btnPowerUp.type = \"button\";\n                btnPowerUp.className = \"transferButton\";\n                btnPowerUp.style = \"{{ fontFamily: 'SF Pro Display' }}\";\n                btnPowerUp.innerHTML = \"+\";\n\n                if (mismatchNFT) {\n                  btnPowerUp.onclick = function () {\n                    showPromptTransfer(\"-1|\" + tkID + \"|\" + contractAdress, function (value) {\n                    });\n                  };\n                }\n                else {\n                  btnPowerUp.onclick = function () {\n                    showPromptTransfer(_vaultId + \"|\" + tkID + \"|\" + contractAdress, function (value) {\n                    });\n                  };\n                } \n                nftcontainer.appendChild(btnPowerUp)\n              } \n              DivContainer.appendChild(nftcontainer); \n            }\n            catch (ex2) {\n              ShowNFTError(nftName + \" - Error on reading token URI\");\n              console.log('ShowNFTErrorCard', ex2);\n            }\n\n          })();\n        }\n\n        return balanceOfOwner;\n      }\n      catch (ex) {\n        console.log('Error on ShowNFTCard', ex);\n      }\n    }\n\n    async function UnstakeSelected() {\n      ClaimThem(true);\n    }\n\n    async function ClaimSelected() {\n      ClaimThem(false);\n    }\n\n    async function BackToCollection() { \n      await LoadVaults('staked-nft-container');\n    }\n\n    async function ClaimThem(unstake) {\n      try {        \n        if (account==null){\n          return;\n        }\n\n        isLoading = true; \n        await onGoingNotif(\"Pending...\");\n\n        const DivContainer = document.getElementById('staked-nft-container');\n        var children = DivContainer.getElementsByTagName('*');\n        var elements = [], child;\n        for (var i = 0; i < children.length; i++) {\n          child = children[i];\n          if (child.type == \"checkbox\" && child.checked == true) {\n            elements.push(child);\n          }\n        }\n\n        var tkIDs = [];\n        var _vaultId;\n\n        //loop for getting staked vault\n        for (var j = 0; j < elements.length; j++) {\n          var nft = [];\n          nft = elements[j].id.split(\"_\");\n          _vaultId = await stakingnftcontract.methods.getVaultId(nft[0]).call();\n\n          tkIDs.push(nft[1]);\n        }\n\n        if (unstake) {\n          await stakingnftcontract.methods.unstake(_vaultId, tkIDs).send({ from: account });\n        }\n        else {\n          await stakingnftcontract.methods.claim(_vaultId, tkIDs).send({ from: account });\n        }\n        BackToCollection();\n        isLoading = false;\n\n      }\n      catch (ex) {\n        console.log(\"ClaimThem - \" + ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function addToken(tokenAddress, tokenSymbol, tokenDecimals, tokenImage){\n      const wasAdded = await window.ethereum.request({\n        method: 'wallet_watchAsset',\n        params: {\n          type: 'ERC20', // Initially only supports ERC20, but eventually more!\n          options: {\n            address: tokenAddress, // The address that the token is at.\n            symbol: tokenSymbol, // A ticker symbol or shorthand, up to 5 chars.\n            decimals: tokenDecimals, // The number of decimals in the token\n            image: tokenImage, // A string url of the token logo\n          },\n        },\n      }); \n    }\n  \n    async function StakeAll() {      \n      if (account==null){\n        return;\n      }\n\n      const DivContainer = document.getElementById('unstaked-nft-container');\n      var children = DivContainer.getElementsByTagName('*');\n      var elements = [], child;\n  \n      for (var i = 0; i < children.length; i++) {\n        child = children[i];\n        if (child.type == \"checkbox\") {\n          elements.push(child);\n        }\n      }\n\n      if (elements.length == 0) {\n        return;\n      }\n\n      var _isNFTAppr = false;\n      var address;\n      var tkIDs = [];\n\n      var _reject = false;\n\n      for (var i = 0; i < elements.length; i++) {\n        var nft = [];\n        nft = elements[i].id.replace(\"chk\", \"\").split(\"_\");\n\n        if (_isNFTAppr == false) {\n          address = nft[0];\n          await onGoingNotif(\"Approve All\");\n          _isNFTAppr = await nftApproveAll(address);\n\n          if (_isNFTAppr == false) {\n            _reject = true;\n            await onGoingNotif(\"\");\n            return;\n          }\n          await onGoingNotif(\"Pending...\");\n        }\n\n        tkIDs.push(nft[1]);\n      }\n\n      if (await isWhitelist(address)) {\n        var _vaultId = await stakingnftcontract.methods.getVaultId(address).call();\n        await stakingnftcontract.methods.stake(_vaultId, tkIDs).send({ from: account });\n      }\n      else {\n        await stakingnftcontract.methods.stakeAny(address, tkIDs, true).send({ from: account });\n      }\n      await refreshDAppView();\n      await onGoingNotif(\"\");\n\n\n    }\n\n    async function StakeThem() {\n      try {        \n        if (account==null){\n          return;\n        }\n        await onGoingNotif(\"Pending...\");\n\n        const DivContainer = document.getElementById('unstaked-nft-container');\n        var children = DivContainer.getElementsByTagName('*');\n        var elements = [], child;\n        for (var i = 0; i < children.length; i++) {\n          child = children[i];\n          if (child.type == \"checkbox\" && child.checked == true) {\n            elements.push(child);\n          }\n        }\n\n        var _isNFTAppr = false;\n        var address;\n        var tkIDs = [];\n\n        var _reject = false;\n\n        for (var i = 0; i < elements.length; i++) {\n          var nft = [];\n          nft = elements[i].id.replace(\"chk\", \"\").split(\"_\");\n\n          if (_isNFTAppr == false) {\n            address = nft[0];\n              await onGoingNotif(\"\");\n              await onGoingNotif(\"Approve All\");\n            _isNFTAppr = await nftApproveAll(address);\n\n            if (_isNFTAppr == false) {\n              _reject = true;\n              await onGoingNotif(\"\");\n              return;\n            }\n            await onGoingNotif(\"Pending...\");\n          }\n          tkIDs.push(nft[1]);\n        }\n\n        if (await isWhitelist(address)) {\n          var _vaultId = await stakingnftcontract.methods.getVaultId(address).call();\n          await stakingnftcontract.methods.stake(_vaultId, tkIDs).send({ from: account });\n        }\n        else {\n          await stakingnftcontract.methods.stakeAny(address, tkIDs, true).send({ from: account });\n        }\n        await refreshDAppView();\n        await onGoingNotif(\"\");\n      }\n      catch (ex) {\n        console.log(\"StakeThem - \" + ex);\n      }\n      await onGoingNotif(\"\");\n\n    }\n\n    async function refreshDAppView() {\n      await RefreshCollection();\n      console.log(resultAPICall);\n      await listNFTFilter(resultAPICall);\n      //await stakeVaults('staked-nft-container');\n      await LoadVaults('staked-nft-container');\n      await onGoingNotif(\"\");\n    }\n\n    async function nftApproveAll(address) {\n      try {\n        var _nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, address);\n        var _isAppr = await _nftcontract.methods.isApprovedForAll(account, stakingnft_address).call();\n        if (_isAppr == false) {\n          await _nftcontract.methods.setApprovalForAll(stakingnft_address, true).send({ from: account })\n        }\n        return true;\n      }\n      catch (ex) {\n        console.log(address);\n        console.log(\"nftApproveAll - \" + ex);\n        return false;\n      }\n\n    }\n\n    async function isWhitelist(address) {\n      var _res = false;\n      try {\n        for (var key in CONFIGWhitelist.NFT) {\n          if (CONFIGWhitelist.NFT[key].ADDRESS == address) {\n            _res = true;\n            break;\n          }\n        }\n      }\n      catch (ex) {\n        console.log(\"isWhitelist - \" + ex);\n      }\n      return _res;\n    }\n\n    async function ShowNFTError(msgValue) {\n      const DivContainer = document.getElementById('unstaked-nft-container');\n\n      const curDiv = document.createElement('div');\n      curDiv.className = \"nftcontainer\";  // mt-3 ml-3\";\n\n      const chk = document.createElement(\"INPUT\");\n      chk.setAttribute(\"type\", \"checkbox\");\n      chk.id = \"chk\";\n      chk.className = \"unlisted\";\n\n      const lbl = document.createElement(\"LABEL\");\n      lbl.htmlFor = chk.id;\n\n      const objNFT = document.createElement('h6');\n      objNFT.innerHTML = msgValue;\n      objNFT.className = \"errorMessage\";\n\n      curDiv.appendChild(chk);\n      curDiv.appendChild(lbl);\n\n      curDiv.appendChild(objNFT);\n      DivContainer.appendChild(curDiv);\n    }\n\n    async function showCover() {\n      let coverDiv = document.createElement('div');\n      coverDiv.id = 'cover-div'; \n\n      // make the page unscrollable while the modal form is open\n      document.body.style.overflowY = 'hidden';\n      document.body.append(coverDiv);\n    }\n\n    async function SendNFT(nftAdd, destiAdd, tkID) {\n      try {\n        await onGoingNotif(\"Sending NFT...\");\n\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, nftAdd); \n\n        if (await nftcontract.methods.isApprovedForAll(account, stakingnft_address).call()==false){\n          await nftcontract.methods.setApprovalForAll(stakingnft_address, true).send({ from: account});\n        }\n\n        await nftcontract.methods.safeTransferFrom(account, destiAdd, tkID).send({ from: account });\n        await refreshDAppView();\n\n        await onGoingNotif(\"\");\n      }\n      catch (ex) {\n        console.log(ex);\n        await onGoingNotif(\"\");\n      }\n    }\n\n    async function NitroAdd() {\n      await onGoingNotif(\"Pending...\");\n      try {\n        let DivContainer = document.getElementById('prompt-message');\n        if (isMobile){\n          DivContainer = document.getElementById('prompt-message-mobile');\n        }\n        var children = DivContainer.getElementsByTagName('*');\n        var child;\n\n        if (children.length > 0) {\n\n          var _isAppr = await nitrocontract.methods.isApprovedForAll(account, stakingnft_address).call();\n          if (_isAppr == false) {\n            await nitrocontract.methods.setApprovalForAll(stakingnft_address, true)\n              .send({\n                from: account,\n                gasLimit: String(totalGasLimit)\n              })\n          }\n\n          for (var i = 0; i < children.length; i++) {\n            child = children[i];\n            if (child.type == \"radio\" && child.checked == true) {\n              var nft = [];\n              nft = child.id.split(\"|\");\n\n              var _vaultId = nft[0];\n              var _tkID = nft[1];\n              var _nitroId = nft[2]; \n\n              await stakingnftcontract.methods.stakeNitro(_vaultId, _tkID, _nitroId)\n                .send({\n                  from: account \n                });\n              break;\n            }\n          }\n        }\n      }\n      catch (ex) {\n        console.log(ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function hideCover() {\n      try {\n        document.getElementById('cover-div').remove();\n        document.body.style.overflowY = '';\n      }\n      catch (ex) {\n      }\n    }\n\n    async function showPromptTransfer(text, callback) {\n      showCover();\n \n      var _nft = [];\n      _nft = text.split(\"|\");\n      var _vaultId = _nft[0];\n \n      //Highlight the selected NFT\n      document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard SelectedNFT\";\n\n      var _vault;\n      if (_vaultId == -1) {\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _nft[2]);\n      }\n      else {\n        _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _vault.nftAddress);\n      }\n\n      var _nftName = await nftcontract.methods.name().call();\n\n      \n      let form = document.getElementById('prompt-form');\n      if (isMobile){\n        form = document.getElementById('prompt-form-mobile');\n      }\n\n      let container = document.getElementById('prompt-form-container');\n      let msg = document.getElementById('prompt-message');\n      if (isMobile){\n        msg = document.getElementById('prompt-message-mobile');\n      }\n\n      var h6NFTAddy = document.createElement('h5');\n      h6NFTAddy.className = \"h6Nitro\";\n      form.className = \"transfer-width\";\n\n      var txAdd;\n      if (_vaultId == -1) {\n        h6NFTAddy.innerHTML = _nftName + \" #\" + _nft[1] + \"<br>\" + _nft[2] + \"<br>\";\n        txAdd = _nft[2];\n      }\n      else {\n        h6NFTAddy.innerHTML = _nftName + \" #\" + _nft[1] + \"<br>\" + _vault.nftAddress + \"<br>\";\n        txAdd = _vault.nftAddress;\n      }\n\n      var h6Caption = document.createElement('h6');\n      h6Caption.className = \"h6Nitro\";\n      h6Caption.innerHTML = \"Transfer NFT to (Input Wallet Address)\";\n\n      var x = document.createElement(\"INPUT\");\n      x.id = text;\n      x.placeholder = \"0x0000000000000000000000000000000000000000\";\n      x.setAttribute(\"type\", \"text\");\n\n      var curDiv = document.createElement('div');\n      curDiv.className = \"transfer-nft\";\n      msg.className = \"\";\n      msg.innerHTML = \"\";\n\n      var btnSubmit = document.getElementById('btnSubmit');\n      btnSubmit.value = \"Send\";\n\n      curDiv.appendChild(h6NFTAddy);\n      curDiv.appendChild(h6Caption);\n      curDiv.appendChild(x);\n\n      msg.appendChild(curDiv);\n\n\n      function complete(value) {\n        if (value == \"submit\") {\n          SendNFT(txAdd, x.value, _nft[1]);\n        }\n        hideCover();\n        container.style.display = 'none';\n        document.onkeydown = null;\n        callback(value);\n      }\n\n      form.onsubmit = function () {\n        let value = \"submit\";\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard\";\n        complete(value);\n        return false;\n      };\n\n      form.cancel.onclick = function () {\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard\";\n        complete(null);\n      };\n\n      document.onkeydown = function (e) {\n        if (e.key == 'Escape') {\n          document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard\";\n          complete(null);\n        }\n      };\n      container.style.display = 'block';\n    }\n\n    async function showLoading() {\n      let form = document.getElementById('prompt-form');\n      let container = document.getElementById('prompt-form-container');\n\n      let DivContainer = document.getElementById('prompt-message');\n\n      showCover(); \n      DivContainer.innerHTML = \"\";\n\n      const lbl = document.createElement(\"LABEL\");\n      lbl.className = \"parent\";\n\n      let img = document.createElement('img');\n      img.setAttribute(\"src\", 'loading.gif');\n\n      let curDiv = document.createElement('div');\n      curDiv.className = \"nitrocontainer\";\n\n      lbl.appendChild(img);\n      curDiv.appendChild(lbl);\n      DivContainer.appendChild(curDiv);\n\n      container.style.display = 'block'; \n    }\n\n    async function showPrompt(text, callback) {     \n      let container = document.getElementById('prompt-form-container');\n      let form;\n      let DivContainer; \n      if(isMobile){\n        form = document.getElementById('prompt-form-mobile');\n        DivContainer = document.getElementById('prompt-message-mobile'); \n      }\n      else{\n        form = document.getElementById('prompt-form');\n        DivContainer = document.getElementById('prompt-message'); \n      }\n\n      var curDiv;\n      var contractAdress;\n      var balanceOfOwner = await nitrocontract.methods.balanceOf(account).call(); \n\n      showCover();\n\n      var _nft = [];\n      _nft = text.split(\"|\");\n\n      var lastClass = document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className;\n      document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=\"nftCard SelectedNFT\"; \n      curDiv = document.createElement('div');\n      contractAdress = await nitrocontract.methods.symbol().call();   \n      DivContainer.innerHTML = \"\"; \n\n      for (let i = 0; i < balanceOfOwner; i++) {\n        (async function () {\n          try {\n            var tkID = await nitrocontract.methods.tokenOfOwnerByIndex(account, i).call();\n\n            var nitCard = document.createElement('div');            \n            nitCard.id = \"nit\" + tkID;\n            if(isMobile){\n              nitCard.className = \"nitCard-mobile\";\n            }\n            else{\n              nitCard.className = \"nitCard\";\n            }\n\n            var nitTable = document.createElement('TABLE');\n            nitTable = document.createElement(\"TABLE\");\n            nitTable.setAttribute(\"id\", \"tbl\" + tkID);\n            nitCard.appendChild(nitTable);\n\n            var nitTR = document.createElement('TR');\n            nitTR.className = \"nitTR\";\n            nitTable.appendChild(nitTR);\n\n            var nitTD1 = document.createElement('TD');\n            nitTD1.className = \"nitTD1\";\n            nitTR.appendChild(nitTD1);\n             \n            var nitchk = document.createElement(\"INPUT\");\n            nitchk.setAttribute(\"type\", \"radio\"); \n            nitchk.id = text + '|' + tkID;\n            nitchk.className = \"nitchk\";\n            nitchk.name = \"nitro\";\n            nitTD1.appendChild(nitchk);\n\n            var nitlbl = document.createElement(\"LABEL\");\n            nitlbl.htmlFor = nitchk.id;\n            nitTD1.appendChild(nitlbl);\n\n\n            let tokenMetadataURI = await nitrocontract.methods.tokenURI(tkID).call();\n            if (tokenMetadataURI.startsWith(\"ipfs://\")) {\n              tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI.split(\"ipfs://\")[1]}`;\n            }\n            else if (tokenMetadataURI.startsWith(\"https://gateway.pinata.cloud/ipfs/\")) {\n              tokenMetadataURI = tokenMetadataURI.replace(`https://gateway.pinata.cloud/ipfs/`, ``);\n              tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI}${1}`;\n            }\n            var tokenMetadata = await fetch(tokenMetadataURI).then((response) => response.json()); \n\n            var imgNFT = document.createElement('img');\n            imgNFT.setAttribute(\"src\", tokenMetadata[\"image\"]);  \n            imgNFT.setAttribute(\"alt\", contractAdress);\n            imgNFT.setAttribute(\"title\", \"Nitro #\" + tkID);\n            imgNFT.style.width = \"100px\";\n            nitlbl.appendChild(imgNFT);\n\n            \n\n            var nitTD2 = document.createElement('TD');\n            nitTD2.className = \"nitTD2\";\n            nitTR.appendChild(nitTD2);\n            \n            var nitAtt1 = document.createElement('h6');\n            nitAtt1.className = \"nitAtt\";\n            nitAtt1.innerHTML = tokenMetadata[\"attributes\"][0][\"trait_type\"] + ': <b> x' + tokenMetadata[\"attributes\"][0][\"value\"] + '</b>'; \n            nitTD2.appendChild(nitAtt1);\n\n            var nitAtt2 = document.createElement('h6');\n            nitAtt2.className = \"nitAtt\";\n            nitAtt2.innerHTML = tokenMetadata[\"attributes\"][1][\"trait_type\"] + ': ' + tokenMetadata[\"attributes\"][1][\"value\"]; \n            nitTD2.appendChild(nitAtt2);\n\n            var nitAtt3 = document.createElement('h6');\n            nitAtt3.className = \"nitAtt\";\n            nitAtt3.innerHTML = tokenMetadata[\"attributes\"][2][\"trait_type\"] + ': ' + tokenMetadata[\"attributes\"][2][\"value\"]; \n            nitTD2.appendChild(nitAtt3);\n \n            DivContainer.appendChild(nitCard);\n\n          }\n          catch (ex2) {\n            console.log(ex2);\n          }\n\n        })();\n      }\n\n      function complete(value) {\n        if (value == \"submit\") {\n          NitroAdd();\n        }\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=lastClass;\n        hideCover();\n        container.style.display = 'none';\n        document.onkeydown = null;\n        callback(value);\n      }\n\n      form.onsubmit = function () {\n        let value = \"submit\";\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=lastClass;\n        complete(value);\n        return false;\n      };\n\n      form.cancel.onclick = function () {\n        document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=lastClass;\n        complete(null);\n      };\n\n      document.onkeydown = function (e) {\n        if (e.key == 'Escape') {\n          document.getElementById('nft' + _nft[0] + '|' + _nft[1]).className=lastClass;\n          complete(null);\n        }\n      };\n      container.style.display = 'block';\n    }\n\n    async function NitroMint(pID) {\n      try { \n        if (account==null){\n          return;\n        }\n        await onGoingNotif(\"Pending...\");\n\n        if (amtNitro > 0) {\n \n          var totalCost = await nitrocontract.methods.getNitroPrice(pID).call(); \n          totalCost = Web3.utils.fromWei(totalCost) * amtNitro;\n          var totalCostWei = Web3.utils.toWei(String(totalCost));\n\n          var _token = await nitrocontract.methods.getCryptotoken(pID).call();\n          var _tokencontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, _token);\n          var _allow_int = await _tokencontract.methods.allowance(account, nitroboost_address).call(); \n          var _allow = parseInt(_allow_int); \n\n          var _txRejected = false;          \n           \n          if (_allow < parseInt(totalCostWei)) {\n            await onGoingNotif(\"Approval...\");\n\n            var apprAmt = Web3.utils.toWei( String( Number.MAX_SAFE_INTEGER)); \n\n            await _tokencontract.methods.approve(nitroboost_address, String(apprAmt))\n              .send({ from: account })\n              .on('error', function(error, receipt){\n                _txRejected=true;\n              })\n              .catch(()=>{\n                onGoingNotif(\"\");\n              });\n              \n            await onGoingNotif(\"Pending...\");\n          } \n          if (_txRejected==false){\n\n            await nitrocontract.methods\n              .mint(amtNitro, pID)\n              .send({\n                gasLimit: String(totalGasLimit * amtNitro),\n                to: nitroboost_address,\n                from: account\n              })\n              .on('confirmation', (confirmationNumber, receipt) => {\n                onGoingNotif(\"\"); \n              });\n          }\n\n        }\n      }\n      catch (ex) {\n        console.log(ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function BtnSelected(amt) {\n      amtNitro = amt;\n    }\n \n    if (isMobile) { \n      return (\n        <div className=\"App nftapp\">\n          <nav class=\"navbar navbarfont navbar-expand-md navbar-dark bg-dark mb-1\" >\n            <div class=\"container-fluid\" style={{ fontFamily: \"SF Pro Display\" }}>\n              <a class=\"navbar-brand\" style={{ fontWeight: \"800\", fontSize: '15px' }} href=\"#\">\n                <img src=\"logo.png\" width=\"50\" />\n              </a>\n              <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n              </button>\n              <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n                <ul class=\"navbar-nav me-auto mb-2 px-3 mb-md-0\" style={{ fontSize: \"15px\" }}>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Dashboard</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Market Place</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\">Bridge NFTs</a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </nav>\n\n          <div className='container container-style-mobile'>\n            <div className='row'>\n              <body className='nftminter-mobile'>\n                <form>\n                  <div className='row p-2'>\n                    <h5 className='h5Nitro'>Mint Nitro NFT Here</h5>\n                  </div>\n                  <img src=\"./nitrocommon.gif\" width=\"100px\" />\n                  <h6 className='h6Nitro'>Select Nitro Quantity</h6>\n\n                  <ButtonGroup size=\"lg\"\n                    aria-label=\"First group\"\n                    name=\"amount\"\n                    style={{ boxShadow: \"1px 1px 5px #000000\" }}\n                    class=\"btn-group\"\n                  >\n                    <Button value=\"1\" onClick={function () { BtnSelected(1) }}>1</Button>\n                    <Button value=\"2\" onClick={function () { BtnSelected(2) }}>2</Button>\n                    <Button value=\"3\" onClick={function () { BtnSelected(3) }}>3</Button>\n                    <Button value=\"4\" onClick={function () { BtnSelected(4) }}>4</Button>\n                    <Button value=\"5\" onClick={function () { BtnSelected(5) }}>5</Button>\n                  </ButtonGroup>\n\n                  <h6 className='h6Nitro mt-3'>Pay with your preferred Crypto</h6>\n                  <div className=\"nitro-qty\" role=\"group\" id=\"btnNitroQty\" aria-label=\"Token Payment\" >\n                  <img src={\"./tokens/1.png\"} width=\"50\" alt=\"CrudeOil\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnCrudeOil\" onClick={function () { NitroMint(0) }} />\n                    <img src={\"./tokens/2.png\"} width=\"50\" alt=\"MartinB\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnMartinB\" onClick={function () { NitroMint(1) }} />\n                    <img src={\"./tokens/3.png\"} width=\"50\" alt=\"KTH\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnKTH\" onClick={function () { NitroMint(2) }} />\n                    <img src={\"./tokens/4.png\"} width=\"50\" alt=\"ARG\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnARG\" onClick={function () { NitroMint(3) }} />\n                    <img src={\"./tokens/5.png\"} width=\"50\" alt=\"Tango\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnTango\" onClick={function () { NitroMint(4) }} />\n                  </div>\n                </form>\n              </body>              \n            </div>\n            <div className='row'>\n              <body className='nftstaker'>\n                <form style={{ fontFamily: \"SF Pro Display\" }} >\n                  <Tabs defaultActiveKey=\"second\" className=\"nav-pills nav-fill\">\n                    <Tab eventKey=\"first\" title=\"Unstaked NFT\">\n                      <div className='row items' >\n                        <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                          <div class=\"hold-nft-menu buttonmenu\" role=\"group\" aria-label=\"Hold NFT Menu\">\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnStakeSelected\" onClick={StakeThem}>Stake Selected</button>\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnStakeAll\" onClick={StakeAll}>Stake All</button>\n                            <select id=\"nftFilter\" style={{ fontSize: \"9px\" }} className='drpFilter btn-secondary' onChange={RefreshCollection}>\n                              <option selected class=\"selected\">JeepneyRushNFT</option>\n                              <option>All Owned NFT</option>\n                            </select>\n                          </div>\n                        </div>\n                      </div>\n                      <div className='col'>\n                        <div className='unstaked-scroll-mobile'>\n                          <div className='row items'>\n                            <div id='unstaked-nft-container' className='nft_card_view-mobile' />\n                          </div>\n                        </div>\n                      </div>\n                    </Tab>\n                    <Tab eventKey=\"second\" title=\"Staked NFT\">\n                      <div className='row items' >\n                        <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                          <div class=\"hold-nft-menu buttonmenu\" id=\"btnUnstakeMenu\" role=\"group\" aria-label=\"Stake NFT Menu\">\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnBack\" onClick={BackToCollection}>Back</button>\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnClaimSelected\" onClick={ClaimSelected}>Claim Selected</button>\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnUnstakeSelected\" onClick={UnstakeSelected}>Unstake Selected</button>\n                          </div>\n                        </div>\n                      </div>\n                      <div className='row items'>\n                        <div id='staked-nft-container' className='ml-3 mr-3 nft_card_view' />\n                      </div>\n                    </Tab>\n                  </Tabs>\n                </form>\n              </body>\n            </div>\n          </div>\n\n          <div className='active_vaults'>\n            <div className=\"row px-4 pt-2\">\n              <div className='header' style={{ fontSize: '11px' }}>\n                <div style={{ fontSize: '15px', borderRadius: '14px', color: \"#ffffff\", fontWeight: \"300\" }}>Staking Vault Rewards</div>\n                <table id=\"tblvaultInfo\" className='table px-15 table-bordered table-dark' />\n              </div>\n            </div>\n          </div>\n\n          <nav class=\"navbar navbarfont bg-dark\"/*navbar-expand-md navbar-dark  style={{ marginBottom: \"0px\", marginLeft: \"0px\", marginRight: \"0px\", clear: \"both\" }} */>\n            <div class=\"navbar-inner\">\n              <div class=\"d-flex flex-row accountInfo\" style={{marginLeft: \"10px\"}}>\n                <div id=\"wallBal\" className=\"walletBalance\" />\n                <div id=\"btnConnect\" onClick={connectwallet} className=\"connectbutton ml-2\" type=\"button\" style={{ fontFamily: \"SF Pro Display\" }}>\n                  Connect Your Wallet\n                </div>\n              </div>\n\n            </div>\n          </nav>\n\n          <div id=\"prompt-form-container\">\n            <form id=\"prompt-form-mobile\">\n              <div className='add-booster'>\n                <div id=\"prompt-message-mobile\"></div>\n                <input name=\"btnSubmit\" id=\"btnSubmit\" type=\"submit\" value=\"Equip\"></input>\n                <input name=\"cancel\" id=\"cancel\" type=\"button\" value=\"Cancel\" />\n              </div>\n            </form>\n          </div>\n\n        </div>\n      );\n    }\n    else { \n      return (\n        <div className=\"App nftapp\">\n          <nav class=\"navbar navbarfont navbar-expand-md navbar-dark bg-dark mb-4\">\n            <div class=\"container-fluid\" style={{ fontFamily: \"SF Pro Display\" }}>\n              <a class=\"navbar-brand px-5\" style={{ fontWeight: \"800\", fontSize: '15px' }} href=\"#\"></a><img src=\"logo.png\" width=\"7%\" />\n              <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n              </button>\n              <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n                <ul class=\"navbar-nav me-auto mb-2 px-3 mb-md-0\" style={{ fontSize: \"15px\" }}>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Dashboard</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Market Place</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\">Bridge NFTs</a>\n                  </li>\n                </ul>\n              </div>\n            </div> \n            <div className='px-5'>\n              <div class=\"d-flex flex-row accountInfo\">\n                <div id=\"wallBal\" className=\"walletBalance\" />\n                <div id=\"btnConnect\" onClick={connectwallet} className=\"connectbutton ml-2\" type=\"button\" style={{ fontFamily: \"SF Pro Display\" }}>\n                  Connect Your Wallet\n                </div>\n              </div>\n            </div>\n          </nav>\n\n          <div className='container container-style'>\n            <div className='col'>\n              <body className='nftminter'>\n                <form>\n                  <div className='row p-2'>\n                    <h5 className='h5Nitro'>Mint Nitro NFT Here</h5>\n                  </div>\n                  <img src=\"./nitrocommon.gif\" width=\"100px\" />\n                  <h6 className='h6Nitro'>Select Nitro Quantity</h6>\n\n                  <ButtonGroup size=\"lg\"\n                    aria-label=\"First group\"\n                    name=\"amount\"\n                    style={{ boxShadow: \"1px 1px 5px #000000\" }}\n                    class=\"btn-group\"\n                  >\n                    <Button value=\"1\" onClick={function () { BtnSelected(1) }}>1</Button>\n                    <Button value=\"2\" onClick={function () { BtnSelected(2) }}>2</Button>\n                    <Button value=\"3\" onClick={function () { BtnSelected(3) }}>3</Button>\n                    <Button value=\"4\" onClick={function () { BtnSelected(4) }}>4</Button>\n                    <Button value=\"5\" onClick={function () { BtnSelected(5) }}>5</Button>\n                  </ButtonGroup>\n\n                  <h6 className='h6Nitro mt-3'>Pay with your preferred Crypto</h6>\n                  <div class=\"nitro-qty\" role=\"group\" id=\"btnNitroQty\" aria-label=\"Token Payment\">\n                    <img src={\"./tokens/1.png\"} width=\"50\" alt=\"CrudeOil\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnCrudeOil\" onClick={function () { NitroMint(0) }} />\n                    <img src={\"./tokens/2.png\"} width=\"50\" alt=\"MartinB\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnMartinB\" onClick={function () { NitroMint(1) }} />\n                    <img src={\"./tokens/3.png\"} width=\"50\" alt=\"KTH\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnKTH\" onClick={function () { NitroMint(2) }} />\n                    <img src={\"./tokens/4.png\"} width=\"50\" alt=\"ARG\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnARG\" onClick={function () { NitroMint(3) }} />\n                    <img src={\"./tokens/5.png\"} width=\"50\" alt=\"Tango\" class=\"btn btn-primary\" className='btnpayment ml-1' id=\"btnTango\" onClick={function () { NitroMint(4) }} />\n                  </div>\n\n                  <br></br>\n                  <div className=\"row pt-2\">\n                    <div className='header' style={{ fontSize: '11px' }}>\n                      <div style={{ fontSize: '15px', borderRadius: '14px', color: \"#ffffff\", fontWeight: \"300\" }}>Nitro NFT Rates</div>\n                      <table id=\"tblnitroInfo\" className='table table-bordered table-dark' >\n                        <thead className='thead-light'>\n                          <tr>\n                            <th scope=\"col\">Type</th>\n                            <th scope=\"col\">Price</th>\n                            <th scope=\"col\">Reward Rate</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          <tr>\n                            <td>Nitro Crude</td>\n                            <td>700 OIL</td>\n                            <td>x2.0</td>\n                          </tr>\n                          <tr>\n                            <td>Nitro Martin</td>\n                            <td>8,181,050,000 Martin₿</td>\n                            <td>x2.1</td>\n                          </tr>\n                          <tr>\n                            <td>Nitro KTH</td>\n                            <td>58,821.8 KTH</td>\n                            <td>x2.2</td>\n                          </tr>\n                          <tr>\n                            <td>Nitro ARG</td>\n                            <td>112,126,000 ARG</td>\n                            <td>x2.2</td>\n                          </tr>\n                          <tr>\n                            <td>Nitro Tango</td>\n                            <td>133.277 Tango</td>\n                            <td>x2.3</td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n\n                    <div className='active_vaults'>\n                      <div className='header' style={{ fontSize: '11px' }}>\n                        <div style={{ fontSize: '15px', borderRadius: '14px', color: \"#ffffff\", fontWeight: \"300\" }}>Staking Vault Rewards</div>\n                        <table id=\"tblvaultInfo\" className='table px-5 table-bordered table-dark' />\n                      </div>\n                    </div>\n                    \n                  </div>\n                  \n                </form>\n              </body>\n\n            </div>\n            <div className='col'>\n              <table className='nftstaker'>\n                <tr>\n                  <body className='nftstaker'>\n                    <form style={{ fontFamily: \"SF Pro Display\" }} >\n                      <Tabs defaultActiveKey=\"second\" className=\"nav-pills nav-fill\">\n                        <Tab eventKey=\"first\" title=\"Unstaked NFT\">\n                          <div className='row items' >\n                            <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                              <div class=\"hold-nft-menu buttonmenu\" role=\"group\" aria-label=\"Hold NFT Menu\">\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnStakeSelected\" onClick={StakeThem}>Stake Selected</button>\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnStakeAll\" onClick={StakeAll}>Stake All</button>\n                                <select id=\"nftFilter\" className='drpFilter btn-secondary' onChange={RefreshCollection}>\n                                  <option selected class=\"selected\">JeepneyRushNFT</option>\n                                  <option>All Owned NFT</option>\n                                </select>\n                              </div>\n                            </div>\n                          </div>\n                          <div className='unstaked-scroll'>\n                            <div className='col'>\n                              <div className='row items'>\n                                <div id='unstaked-nft-container' className='nft_card_view' />\n                              </div>\n                            </div>\n                          </div>\n                        </Tab>\n                        <Tab eventKey=\"second\" title=\"Staked NFT\">\n                          <div className='row items' >\n                            <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                              <div class=\"hold-nft-menu buttonmenu\" id=\"btnUnstakeMenu\" role=\"group\" aria-label=\"Stake NFT Menu\">\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnBack\" onClick={BackToCollection}>Back</button>\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnClaimSelected\" onClick={ClaimSelected}>Claim Selected</button>\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnUnstakeSelected\" onClick={UnstakeSelected}>Unstake Selected</button>\n                              </div>\n                            </div>\n                          </div>\n                          <div className='row items'>\n                            <div id='staked-nft-container' className='ml-3 mr-3 nft_card_view' />\n                          </div>\n                        </Tab>\n                      </Tabs>\n                    </form>\n                  </body>\n                </tr>\n              </table>\n\n            </div>\n          </div>\n\n          <div id=\"prompt-form-container\"> \n            <form id=\"prompt-form\">\n              <div className='add-booster'>\n                <div id=\"prompt-message\" className='scroll'></div>\n                <input name=\"btnSubmit\" id=\"btnSubmit\" type=\"submit\" value=\"Equip\"></input>\n                <input name=\"cancel\" id=\"cancel\" type=\"button\" value=\"Cancel\" />\n              </div>\n            </form>\n          </div>\n\n          <footer>\n            <div class=\"container\">\n              <div class=\"row secondary\"></div>\n            </div>\n            <div class=\"row copyright\">\n              <p>Copyright &copy; 2022 RushDapp SmartBCH | All Rights Reserved\n              </p> \n            </div>\n\n          </footer>\n        </div>\n      );\n    }\n\n  };\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
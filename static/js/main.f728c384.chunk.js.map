{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["window","$","CONFIG","ABI","account","nftcontract","defSymbol","totalGasLimit","walletBalanceAPI","scannerAPI","balanceAPI","resultAPICall","CONFIGWhitelist","stakingnftcontract","rewardcontract","nitrocontract","stakingnft_address","nitroboost_address","web3","localStorage","getItem","rewardInDetail","vaultSelected","amtNitro","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","setState","show","delay","Promise","resolve","setTimeout","_connectwallet","asyncToGenerator","_regeneratorRuntime","mark","_callee2","configResponse","accounts","networkId","abiResponse","abiWhitelist","sWallBal","wrap","_context2","prev","next","ethereum","fetch","headers","Content-Type","Accept","sent","json","Web3","send","eth","getAccounts","request","method","MAINNET","ID","TESTNET","SYMBOL","GAS_LIMIT","API","BALANCE","WALLET","ABIFetch","TOKENREWARD","MAINDAPP","STAKING","NITROBOOST","toUpperCase","TESTDAPP","onGoingNotif","document","getElementById","style","width","WalletBalance","innerHTML","APICall","listNFTFilter","stakeVaults","setInterval","RewardInquiry","confirm","t0","console","log","stop","apply","arguments","RefreshCollection","_RefreshCollection","_callee3","nftCol","_context3","value","listNFT","_x","_x2","_APICall","_callee4","theURL","apiResponse","jsonParsedContents","_context4","abrupt","APIBalanceCall","_x3","_x4","_x5","_APIBalanceCall","_callee5","_account","_CA","_context5","replace","_x6","_WalletBalance","_callee6","earnedrwd","rewards","_context6","utils","fromWei","result","Number","toFixed","claimVault","_x7","_claimVault","_callee7","_vaultId","_vault","_tkIDs","i","balanceOfOwner","j","_tkID","_context7","methods","Vault","nftAddress","balanceOf","tokenOfOwnerByIndex","nftStake","owner","push","claim","from","refreshDAppView","modifyVault","_x8","_x9","_modifyVault","_callee9","_vaultContract","tab_container","_contractAddress","_vId","_context9","UnstakeMenuControl","length","type","contractAddress","getVaultId","ERC721","myStakedNFT","_x10","_x11","_x12","_x13","_myStakedNFT","_callee12","nftName","curDiv","_ret","_context12","delegateYield","_callee11","DivContainer","_loop","_context11","name","tokenReward","symbol","_callee10","tkID","_nftStake","tokenMetadata","chk","lbl","imgNFT","_img","div","objNFT","objNFTPend","btnPowerUp","_context10","fetchNFTImage","createElement","className","setAttribute","id","class","htmlFor","startsWith","concat","split","substring","onclick","showPrompt","appendChild","v","t1","_x14","_onGoingNotif","_callee13","msg","btnConnect","short_acct","img","_context13","unstakeVault","_x15","_unstakeVault","_callee14","_context14","vaultName","unstake","_RewardInquiry","_callee15","_stakeCount","balanceOfVault","_symbol","contractAdress","divPend","_pendingRewards","_pend","earned","_context15","pendingRewardByAccount","String","pendingReward","fontSize","_x16","_x17","_x18","_UnstakeMenuControl","_callee16","btnBack","btnClaim","btnUnstake","_btnBack","_btnClaim","_btnUnstake","_context16","display","classList","add","removeAttribute","remove","_x19","_stakeVaults","_callee18","usrVaultCount","usrCurrVault","_i","tokenMetadataURI","_context18","active","tokenURI","then","response","_callee17","cardVault","cardVaultCard","cardVaultFront","vid_source","cardVaultDetails","cardH4","cardSpan","cardVaultBack","cardButtonClaim","cardButtonUnstake","cardButtonModify","_context17","includes","color","_x20","_x21","_x22","_x23","_listNFT","_callee19","filterList","userNFTHold","btnStakeAll","btnStakeSelected","key","ctr","_i2","_context19","keys","NFT","done","ADDRESS","t2","myHoldNFT","t3","t4","t5","t6","t7","ShowNFTError","t8","_x24","_x25","_x26","_ABIFetch","_callee20","_abi","_address","_contract","ABIResponse","ABIJSON","_context20","Contract","_x27","_listNFTFilter","_callee21","lstNFT","z_1","t_1","z","t","_context21","createTextNode","balance","_x28","_x29","_x30","_x31","_fetchNFTImage","_callee22","_caller","_context22","_x32","_x33","_x34","_x35","_myHoldNFT","_callee25","_ret2","_context25","_callee24","_loop2","_context24","_callee23","_context23","_UnstakeSelected","_callee26","_context26","ClaimThem","_ClaimSelected","_callee27","_context27","_BackToCollection","_callee28","_context28","_x36","_ClaimThem","_callee29","_DivContainer","children","elements","child","tkIDs","nft","_context29","getElementsByTagName","checked","_StakeAll","_callee31","_isNFTAppr","address","_context31","nftApproveAll","isWhitelist","stake","stakeAny","_StakeThem","_callee32","_DivContainer3","_context32","_refreshDAppView","_callee33","_context33","_x37","_nftApproveAll","_callee34","_nftcontract","_context34","isApprovedForAll","setApprovalForAll","_x38","_isWhitelist","_callee35","_res","_context35","_x39","_ShowNFTError","_callee36","msgValue","_context36","showCover","_showCover","_callee37","coverDiv","_context37","body","overflowY","append","NitroAdd","_NitroAdd","_callee38","_DivContainer4","_nitroId","_context38","gasLimit","stakeNitro","hideCover","_hideCover","_callee39","_context39","_x40","_x41","_showPrompt","_callee41","text","callback","form","container","_loop3","complete","_context41","onkeydown","_callee40","_context40","onsubmit","cancel","e","_NitroMint","_callee42","pID","totalCostWei","totalCost","_allow","_context42","getNFTCost","allowance","toWei","approve","mint","to","BtnSelected","_x43","_BtnSelected","_callee43","amt","_context43","react_default","a","href","src","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","marginRight","onClick","fontFamily","ButtonGroup","size","boxShadow","Button","role","_x42","NitroMint","Tabs","defaultActiveKey","Tab","eventKey","title","onChange","selected","gridTemplateColumns","columnGap","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.f728c384.chunk.js","sourcesContent":["import './App.css';\nimport { Button, ButtonGroup, Modal } from 'react-bootstrap';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component, createElement } from 'react';\n\nimport 'sf-font';\n\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Web3 from 'web3';\n\nimport { useEffect } from \"react\"\nimport { accessListify } from 'ethers/lib/utils';\nimport { First } from 'react-bootstrap/esm/PageItem';\n\nimport NFTStakeABI from './RushNFTStaking.json';\nimport NitroBoostABI from './NitroBoost.json';\n\n\nconst $ = window.$;\n\nvar CONFIG = null;\nvar ABI = null;\nvar account = null;\nvar nftcontract = null;\n\nvar defSymbol = null;\nvar totalGasLimit = null;\n\nvar walletBalanceAPI = null;\nvar scannerAPI = null;\nvar balanceAPI = null;\nvar resultAPICall = null;\nvar CONFIGWhitelist = null;\n\nvar nftName = null;\n\nvar stakingnftcontract = null;\nvar rewardcontract = null;\nvar nitrocontract = null;\n\nvar stakingnft_address = null;\nvar nitroboost_address = null;\n\nvar acc = localStorage.getItem(\"account\");\n\nvar web3 = null;\nvar contract = null;\n\nvar rewardInDetail = false;\nvar vaultSelected = null;\n\nvar amtNitro = 0;\n\n/* var refresh_screen;\n$(function () {\n  refresh_screen = function (_text) {\n    $(\".loader\").fadeOut(1000);\n    $(\".content\").fadeIn(1000);\n  }\n}); */\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {};\n\n  }\n\n  handleModal() {\n    this.setState({ show: !this.state.show })\n  }\n\n  async componentDidMount() {\n\n  }\n\n\n  render() {\n    let nftcost = '';\n\n    const sleep = (milliseconds) => {\n      return new Promise(resolve => setTimeout(resolve, milliseconds))\n    }\n\n\n    function delay() {\n      return new Promise(resolve => setTimeout(resolve, 300));\n    }\n\n    async function connectwallet() {\n      try {\n        if (window.ethereum) {\n\n          const configResponse = await fetch(\"/config/config.json\", {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n          });\n          CONFIG = await configResponse.json();\n\n          web3 = new Web3(window.ethereum);\n\n\n          await window.ethereum.send('eth_requestAccounts');\n          var accounts = await web3.eth.getAccounts();\n          account = accounts[0];\n\n          const networkId = await window.ethereum.request({\n            method: \"net_version\",\n          });\n\n          if ((networkId == CONFIG.MAINNET.ID) || (networkId == CONFIG.TESTNET.ID)) {\n\n            const abiResponse = await fetch(\"/config/abi.json\", {\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\",\n              },\n            });\n            ABI = await abiResponse.json();\n\n            var abiWhitelist = null;\n\n            if (networkId == CONFIG.MAINNET.ID) {\n              defSymbol = CONFIG.MAINNET.SYMBOL;\n              totalGasLimit = CONFIG.MAINNET.GAS_LIMIT;\n              scannerAPI = CONFIG.MAINNET.API;\n              balanceAPI = CONFIG.MAINNET.BALANCE;\n              walletBalanceAPI = CONFIG.MAINNET.WALLET;\n              rewardcontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, CONFIG.MAINDAPP.TOKENREWARD);\n              stakingnftcontract = await ABIFetch(web3, ABI.STAKING.ABI, CONFIG.MAINDAPP.STAKING);\n              nitrocontract = await ABIFetch(web3, ABI.NITROBOOST.ABI, CONFIG.MAINDAPP.NITROBOOST);\n\n              stakingnft_address = CONFIG.MAINDAPP.STAKING;\n              nitroboost_address = CONFIG.MAINDAPP.NITROBOOST.toUpperCase();\n\n              abiWhitelist = await fetch(\"/config/whitelisted.json\", {\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Accept: \"application/json\",\n                },\n              });\n              CONFIGWhitelist = await abiWhitelist.json();\n\n            }\n            else if (networkId == CONFIG.TESTNET.ID) {\n              //console.log(\"API CALL\");\n\n              defSymbol = CONFIG.TESTNET.SYMBOL;\n              totalGasLimit = CONFIG.TESTNET.GAS_LIMIT;\n              scannerAPI = CONFIG.TESTNET.API;\n              balanceAPI = CONFIG.TESTNET.BALANCE;\n              walletBalanceAPI = CONFIG.TESTNET.WALLET;\n              rewardcontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, CONFIG.TESTDAPP.TOKENREWARD);\n              stakingnftcontract = await ABIFetch(web3, ABI.STAKING.ABI, CONFIG.TESTDAPP.STAKING);\n              nitrocontract = await ABIFetch(web3, ABI.NITROBOOST.ABI, CONFIG.TESTDAPP.NITROBOOST);\n\n\n              stakingnft_address = CONFIG.TESTDAPP.STAKING;\n              nitroboost_address = CONFIG.TESTDAPP.NITROBOOST;\n\n              abiWhitelist = await fetch(\"/config/testwhitelisted.json\", {\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Accept: \"application/json\",\n                },\n              });\n              CONFIGWhitelist = await abiWhitelist.json();\n\n            }\n\n            onGoingNotif(\"\");\n\n            var sWallBal = document.getElementById(\"wallBal\");\n            sWallBal.style.width = \"100px\";\n            sWallBal.innerHTML = await WalletBalance(account);\n\n            resultAPICall = await APICall(account, scannerAPI);\n            await listNFTFilter(resultAPICall);\n            //  await listNFT(account, 'unstaked-nft-container', resultAPICall, \"All\");\n\n            const DivContainer = document.getElementById('staked-nft-container');\n            DivContainer.innerHTML = \"\";\n            await stakeVaults('staked-nft-container');\n\n            var timer;\n            timer = setInterval(function () {\n              RewardInquiry();\n            }, 5000);\n          }\n\n          else {\n            var z = window.confirm(\"Wrong network!\");\n          }\n\n        }\n      }\n      catch (ex) {\n        console.log('connectwallet - SeeError - ' + ex);\n      }\n    }\n\n\n    async function RefreshCollection() {\n      var nftCol = document.getElementById(\"nftFilter\").value;\n      resultAPICall = await APICall(account, scannerAPI);\n      await listNFT(account, 'unstaked-nft-container', resultAPICall, nftCol);\n    }\n\n    async function APICall(account, API) {\n      var theURL = API + \"=\" + account;\n      var apiResponse = await fetch(theURL);\n      var jsonParsedContents = await apiResponse.json();\n\n      return jsonParsedContents;\n    }\n\n    async function APIBalanceCall(_account, _CA, API) {\n      var theURL = API.replace('@CONTRACTADDRESS', _CA).replace('@ACCOUNT', _account);\n      var apiResponse = await fetch(theURL);\n      var jsonParsedContents = await apiResponse.json();\n\n      return jsonParsedContents;\n    }\n\n    async function WalletBalance(_account) {\n      var theURL = walletBalanceAPI.replace('@ACCOUNT', _account);\n      var apiResponse = await fetch(theURL);\n      var jsonParsedContents = await apiResponse.json();\n\n      var earnedrwd = Web3.utils.fromWei(jsonParsedContents.result);\n      var rewards = Number(earnedrwd).toFixed(3);\n\n      return '  ' + rewards + ' ' + defSymbol;\n    }\n\n    async function claimVault(_vaultId) {\n      try {\n        await onGoingNotif(\"Pending\");\n\n        var _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n\n        var _tkIDs = [];\n        resultAPICall = await APIBalanceCall(stakingnft_address, _vault.nftAddress, balanceAPI);\n        //console.log(resultAPICall);\n        for (let i = 0; i < resultAPICall.result; i++) {\n\n          var balanceOfOwner = await nftcontract.methods.balanceOf(stakingnft_address).call();\n          console.log('balanceOfOwner: ' + balanceOfOwner);\n\n          for (let j = 0; j < balanceOfOwner; j++) {\n            var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(stakingnft_address, j).call();\n            var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n            if (_nftStakeInfo.owner == account) {\n              _tkIDs.push(_tkID);\n            }\n          }\n        }\n        //console.log(_tkIDs);\n\n        await stakingnftcontract.methods.claim(_vaultId, _tkIDs).send({ from: account });\n        await refreshDAppView();\n\n      }\n      catch (ex) {\n        console.log('claimVault');\n        console.log(ex);\n      }\n      await onGoingNotif(\"\");\n\n    }\n\n    async function backToStake() {\n      await stakeVaults('staked-nft-container');\n    }\n\n    /* async function showUnstakeButtons(tab_container) {\n      console.log(\"showUnstakeButtons\");\n      try {\n        document.getElementById(tab_container).innerHTML = \"\";\n\n        const DivStakedMenu = document.getElementById('staked-menu');\n        DivStakedMenu.innerHTML = \"\";\n\n        const divCol = document.createElement('div');\n        divCol.className = 'col'; \n\n        const btnBack = document.createElement('button');\n        btnBack.type = \"button\";\n        btnBack.className = \"btn btn-secondary\";\n        btnBack.innerHTML = \"Back\";\n        btnBack.onclick = function () { stakeVaults(tab_container); }\n\n        const btnClaim = document.createElement('button');\n        btnClaim.type = \"button\";\n        btnClaim.className = \"btn btn-secondary\";\n        btnClaim.innerHTML = \"Claim Selected\";\n        btnClaim.onclick = function () { ClaimThem(); }\n\n        const btnUnstake = document.createElement('button');\n        btnUnstake.type = \"button\";\n        btnUnstake.className = \"btn btn-secondary\";\n        btnUnstake.innerHTML = \"Unstake Selected\";\n        btnUnstake.onclick = function () { ClaimThem(true); }\n\n        DivStakedMenu.appendChild(btnBack);\n        DivStakedMenu.appendChild(btnClaim);\n        DivStakedMenu.appendChild(btnUnstake);\n\n      }\n      catch (ex) {\n        console.log(\"ERROR ON - showUnstakeButtons\");\n        console.log(ex);\n      }\n\n    } */\n\n    async function modifyVault(_vaultId, _vaultContract) {\n      try {\n        await UnstakeMenuControl(true, true, true);\n\n        console.log('_vaultId: ', _vaultId, '_vaultContract: ', _vaultContract);\n\n        var tab_container = \"staked-nft-container\";\n        document.getElementById('staked-nft-container').innerHTML = \"\";\n\n        var _account = stakingnft_address;\n        resultAPICall = await APICall(_account, scannerAPI);\n\n        rewardInDetail = true;\n\n        for (let i = 0; i < resultAPICall.result.length; i++) {\n          if (resultAPICall.result[i].type == \"ERC-721\") {\n            var _contractAddress = resultAPICall.result[i].contractAddress;\n            vaultSelected = _contractAddress;\n            var _vId = await stakingnftcontract.methods.getVaultId(_contractAddress).call();\n            if ((_vaultId == _vId) && (_vaultContract == _contractAddress)) {\n              nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _contractAddress);\n              console.log(\"Load Inside Vault\", nftcontract);\n              await myStakedNFT(tab_container, nftcontract, _contractAddress, _account)\n              break;\n            }\n          }\n        }\n      }\n      catch (ex) {\n        console.log(ex);\n      }\n\n\n    }\n\n\n\n    async function myStakedNFT(tab_container, nftcontract, _contractAddress, _account) {\n      var nftName;\n      try {\n\n        nftName = await nftcontract.methods.name().call();\n\n        const DivContainer = document.getElementById(tab_container);\n        var balanceOfOwner = await nftcontract.methods.balanceOf(_account).call();\n        var _vaultId = await stakingnftcontract.methods.getVaultId(_contractAddress).call();\n        var _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n\n        rewardcontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, _vault.tokenReward);\n        var _rewardSymbol = await rewardcontract.methods.symbol().call();\n\n        var curDiv;\n\n        console.log(\"_contractAddress\", _contractAddress);\n        console.log(\"_account - \", _account)\n        console.log(\"balanceOfOwner\", balanceOfOwner);\n\n        for (let i = 0; i < balanceOfOwner; i++) {\n          (async function () {\n\n            var tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, i).call();\n            console.log(\"Check Vault and Token ID - \", _vaultId, tkID);\n\n            var _nftStake = await stakingnftcontract.methods.nftStake(_vaultId, tkID).call();\n            console.log(\"Data Staked - \", _nftStake.owner, account);\n\n            if (_nftStake.owner == account) {\n\n              const tokenMetadata = await fetchNFTImage(nftcontract, _account, tkID, 'myHoldNFT');\n\n              curDiv = document.createElement('div');\n\n              if (nftName == \"Jeepney Rush\") {\n                curDiv.className = \"nftcontainer mt-3 stakegoldeffect\";\n              }\n              else {\n                curDiv.className = \"nftcontainer mt-3\";\n              }\n\n              const chk = document.createElement(\"INPUT\");\n              chk.setAttribute(\"type\", \"checkbox\");\n              chk.id = _contractAddress + \"_\" + tkID;\n              chk.class = \"unlisted\";\n\n              const lbl = document.createElement(\"LABEL\");\n              lbl.htmlFor = chk.id;\n\n              const imgNFT = document.createElement('img');\n\n              if (tokenMetadata[\"image\"].startsWith(\"ipfs://\")) {\n                var _img = `https://ipfs.io/ipfs/${tokenMetadata[\"image\"].split(\"ipfs://\")[1]}`;\n                imgNFT.setAttribute(\"src\", _img);\n              }\n              else {\n                imgNFT.setAttribute(\"src\", tokenMetadata[\"image\"]);\n              }\n\n              imgNFT.setAttribute(\"alt\", _contractAddress);\n              imgNFT.style.width = \"150px\";\n\n              const div = document.createElement('div');\n              div.className = \"nftdetail\";\n\n              const objNFT = document.createElement('h6');\n              objNFT.className = \"h6nftName\";\n              objNFT.innerHTML = (nftName.length > 20 ? nftName.substring(1, 20) : nftName) + ` #` + (tkID.length > 5 ? tkID.substring(1, 5) : tkID);\n\n              const objNFTPend = document.createElement('h6');\n              objNFTPend.className = \"h6pendingEarn\";\n              objNFTPend.id = \"pend\" + _vaultId + tkID;\n              objNFTPend.innerHTML = \"\";  //_pend + _rewardSymbol;\n\n              const btnPowerUp = document.createElement('button');\n              btnPowerUp.type = \"button\";\n              btnPowerUp.className = \"powerUpButton\";\n              btnPowerUp.style = \"{{ fontFamily: 'SF Pro Display' }}\";\n              btnPowerUp.innerHTML = \"+\";\n\n              btnPowerUp.onclick = function () {\n                showPrompt(_vaultId + \"|\" + tkID, function (value) {\n                  //alert(\"You entered: \" + value);\n                });\n              };\n\n              lbl.appendChild(imgNFT)\n\n              curDiv.appendChild(chk);\n              curDiv.appendChild(lbl);\n              curDiv.appendChild(btnPowerUp);\n\n              curDiv.appendChild(div);\n              div.appendChild(objNFT)\n              div.appendChild(objNFTPend);\n\n\n\n\n              DivContainer.appendChild(curDiv);\n\n            }\n\n\n\n\n          })();\n        }\n\n        return balanceOfOwner;\n      }\n      catch (ex) {\n        console.log('Error on myHoldNFT');\n        console.log(ex);\n      }\n    }\n\n    async function onGoingNotif(msg) {\n      //console.log(\"onGoingNotif: \" + msg);\n      var btnConnect = document.getElementById('btnConnect');\n      //var pendNotif = document.getElementById('pendNotif');\n\n      if (msg == \"\") {\n        var short_acct = account.substring(0, 6) + \"....\" + account.substring(account.length - 4, account.length);\n        var img = document.createElement('img');\n        img.class = \"ml-3\";\n        img.setAttribute(\"src\", 'chef.svg');\n        btnConnect.class = \"ml-3\";\n        btnConnect.innerHTML = short_acct;\n        btnConnect.appendChild(img);\n      }\n      else {\n        btnConnect.innerHTML = \"\";\n        btnConnect.innerHTML = msg;\n      }\n\n    }\n\n\n\n    async function unstakeVault(_vaultId) {\n      try {\n        await onGoingNotif(\"Pending\");\n\n        var _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n\n        console.log(_vault.vaultName);\n\n        var _tkIDs = [];\n        resultAPICall = await APIBalanceCall(stakingnft_address, _vault.nftAddress, balanceAPI);\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _vault.nftAddress);\n\n        console.log(\"Balance API: \");\n        console.log(resultAPICall);\n        for (let i = 0; i < resultAPICall.result; i++) {\n\n          var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(stakingnft_address, i).call();\n          var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n          if (_nftStakeInfo.owner == account) {\n            _tkIDs.push(_tkID);\n          }\n        }\n        console.log(_tkIDs);\n\n        await stakingnftcontract.methods.unstake(_vaultId, _tkIDs).send({ from: account });\n        await refreshDAppView();\n\n      }\n      catch (ex) {\n        console.log('unstakeVault');\n        console.log(ex);\n      }\n      await onGoingNotif(\"\");\n\n    }\n\n    async function RewardInquiry() {\n      try {\n        var sWallBal = document.getElementById(\"wallBal\");\n        sWallBal.innerHTML = await WalletBalance(account);\n\n        var _stakeCount = 0;\n        var _account = stakingnft_address;\n        resultAPICall = await APICall(_account, scannerAPI);\n\n        /* console.log(\"RewardInquiry\");\n        console.log(rewardInDetail); */\n\n        var balanceOfVault = 0;  //await nftcontract.methods.balanceOf(_account).call();\n        var _symbol = await rewardcontract.methods.symbol().call();\n        if (rewardInDetail == false) {\n\n          for (let i = 0; i < resultAPICall.result.length; i++) {\n            if (resultAPICall.result[i].type == \"ERC-721\" && nitroboost_address.toUpperCase() != resultAPICall.result[i].contractAddress.toUpperCase()) {\n              var contractAdress = resultAPICall.result[i].contractAddress;\n              var _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n\n              var divPend = document.getElementById(\"Pending\" + resultAPICall.result[i].contractAddress);\n\n              var _pendingRewards = 0;\n\n              if (divPend != null) {\n                nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, resultAPICall.result[i].contractAddress);\n                balanceOfVault = await nftcontract.methods.balanceOf(_account).call();\n\n                var _pend = await stakingnftcontract.methods.pendingRewardByAccount(_vaultId, account).call();\n                var earned = String(_pend).split(\",\")[0];\n                var earnedrwd = Web3.utils.fromWei(earned);\n                _pendingRewards = Number(earnedrwd).toFixed(4);\n                _stakeCount = 0;\n\n                /* var nft_name = await nftcontract.methods.name().call()\n                console.log(nft_name + \" - \" + balanceOfVault); */\n\n                for (var j = 0; j < balanceOfVault; j++) {\n                  var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, j).call();\n                  var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n\n                  if (_nftStakeInfo.owner == account) {\n                    _stakeCount++;\n                  }\n                }\n\n                divPend.innerHTML = `Total NFT: ${_stakeCount} | Pending: ${_pendingRewards} ${_symbol}`;\n              }\n            }\n          }\n        }\n        else if (rewardInDetail == true) {\n          try {\n            nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, vaultSelected);\n            var _vaultId = await stakingnftcontract.methods.getVaultId(vaultSelected).call();\n            balanceOfVault = await nftcontract.methods.balanceOf(_account).call();\n            _pendingRewards = 0;\n            _stakeCount = 0;\n\n            for (var j = 0; j < balanceOfVault; j++) {\n              var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, j).call();\n              var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n\n              if (_nftStakeInfo.owner == account) {\n                _stakeCount++;\n\n                var _pend = await stakingnftcontract.methods.pendingReward(_vaultId, _tkID).call();\n                var earned = String(_pend).split(\",\")[0];\n                var earnedrwd = Web3.utils.fromWei(earned);\n                var rewards = Number(earnedrwd).toFixed(4);\n                _pendingRewards = Number(rewards).toFixed(4);\n\n                const objNFTPend = document.getElementById(\"pend\" + _vaultId + _tkID);\n                objNFTPend.style.fontSize = \"small\";\n                objNFTPend.innerHTML = _pendingRewards + \" \" + _symbol;\n\n              }\n            }\n          }\n          catch (ex1) {\n            console.log(\"Error in RewardInquiry - Detailed: \");\n            console.log(ex1);\n          }\n\n\n        }\n      }\n      catch (ex) {\n        console.log(\"Error on RewardInquiry\");\n        console.log(ex);\n      }\n\n\n      return _stakeCount;\n    }\n\n    async function UnstakeMenuControl(btnBack, btnClaim, btnUnstake) {\n      var _btnBack = document.getElementById(\"btnBack\");\n      var _btnClaim = document.getElementById(\"btnClaimSelected\");\n      var _btnUnstake = document.getElementById(\"btnUnstakeSelected\");\n\n      if ((btnBack == false) && (btnClaim == false) && (btnUnstake == false)) {\n        document.getElementById(\"btnUnstakeMenu\").style.display = \"none\";\n      }\n      else {\n        document.getElementById(\"btnUnstakeMenu\").style.display = \"\";\n      }\n\n      if (btnBack == false) {\n        _btnBack.setAttribute(\"disabled\", \"disabled\");\n        _btnBack.classList.add(\"disabled\");\n      }\n      else {\n        _btnBack.removeAttribute('disabled');\n        _btnBack.classList.remove(\"disabled\");\n      }\n\n      if (btnClaim == false) {\n        _btnClaim.setAttribute(\"disabled\", \"disabled\");\n        _btnClaim.classList.add(\"disabled\");\n      }\n      else {\n        _btnClaim.removeAttribute('disabled');\n        _btnClaim.classList.remove(\"disabled\");\n      }\n\n      if (btnUnstake == false) {\n        _btnUnstake.setAttribute(\"disabled\", \"disabled\");\n        _btnUnstake.classList.add(\"disabled\");\n      }\n      else {\n        _btnUnstake.removeAttribute('disabled');\n        _btnUnstake.classList.remove(\"disabled\");\n      }\n    }\n\n    async function stakeVaults(tab_container) {\n      await delay();\n\n      var _account = stakingnft_address;\n      resultAPICall = await APICall(_account, scannerAPI);\n\n      await UnstakeMenuControl(false, false, false);\n\n      const DivContainer = document.getElementById(tab_container);\n      DivContainer.innerHTML = \"\";\n\n      //const DivStakedMenu = document.getElementById('staked-menu');\n      //DivStakedMenu.innerHTML = \"\";\n\n      rewardInDetail = false;\n\n      var usrVaultCount = 0;\n      var usrCurrVault = null;\n      var _vaultContract = null;\n\n      //console.log(\"Check Number of Vault Stake of user\");\n      //Check Number of Vault Stake of user\n      for (let i = 0; i < resultAPICall.result.length; i++) {\n        if (resultAPICall.result[i].type == \"ERC-721\" && nitroboost_address.toUpperCase() != resultAPICall.result[i].contractAddress.toUpperCase()) {\n          var contractAdress = resultAPICall.result[i].contractAddress;\n          var _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n\n          nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, contractAdress);\n          var balanceOfVault = await nftcontract.methods.balanceOf(_account).call();\n\n          for (var j = 0; j < balanceOfVault; j++) {\n            var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, j).call();\n            var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n            if (_nftStakeInfo.owner == account) {\n              usrVaultCount++;\n              usrCurrVault = _vaultId;\n              _vaultContract = contractAdress;\n              break;\n            }\n          }\n        }\n\n\n      }\n\n      if (usrVaultCount == 1) {\n        rewardInDetail = true;\n        await modifyVault(usrCurrVault, _vaultContract);\n      }\n      else {\n\n        for (let i = 0; i < resultAPICall.result.length; i++) {\n          if (resultAPICall.result[i].type == \"ERC-721\" && nitroboost_address.toUpperCase() != resultAPICall.result[i].contractAddress.toUpperCase()) {\n\n            var contractAdress = resultAPICall.result[i].contractAddress;\n            var _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n            var _vaultInfo = await stakingnftcontract.methods.Vault(_vaultId).call();\n\n            if (_vaultInfo.active) {  //if (_vaultId >= 0) {\n\n\n              nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, contractAdress);\n              var nftName = await nftcontract.methods.name().call();\n              var balanceOfVault = await nftcontract.methods.balanceOf(_account).call();\n              var symbol = await rewardcontract.methods.symbol().call();\n\n              var _tkID = 0;\n\n              console.log(contractAdress, 'balanceOfVault', balanceOfVault);\n\n              var _stakeCount = 0;\n              for (var j = 0; j < balanceOfVault; j++) {\n                _tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, j).call();\n                //console.log(\"Check Token ID: \" + _tkID);\n\n                var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n\n                if (_nftStakeInfo.owner == account) {\n                  _stakeCount++;\n\n                  if (_stakeCount > 0) {\n                    let tokenMetadataURI = await nftcontract.methods.tokenURI(_tkID).call();\n                    if (tokenMetadataURI.startsWith(\"ipfs://\")) {\n                      tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI.split(\"ipfs://\")[1]}`;\n                    }\n                    else if (tokenMetadataURI.startsWith(\"https://gateway.pinata.cloud/ipfs/\")) {\n                      tokenMetadataURI = tokenMetadataURI.replace(`https://gateway.pinata.cloud/ipfs/`, ``);\n                      tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI}${1}`;\n                    }\n                    var tokenMetadata = await fetch(tokenMetadataURI).then((response) => response.json());\n\n                    (async function () {\n                      const cardVault = document.createElement('div');\n                      cardVault.className = \"vault_container\";\n                      cardVault.id = contractAdress;\n                      cardVault.value = _vaultId;\n\n                      const cardVaultCard = document.createElement('div');\n                      cardVaultCard.className = \"vault_card\";\n\n                      const cardVaultFront = document.createElement('div');\n                      cardVaultFront.className = \"vault_front\";\n\n                      var imgNFT\n                      if (tokenMetadata[\"image\"].includes(\"mp4\")) {\n                        imgNFT = document.createElement('video');\n                        imgNFT.style.width = \"500\";\n\n                        const vid_source = document.createElement(\"source\");\n\n                        if (tokenMetadata[\"image\"].startsWith(\"ipfs://\")) {\n                          vid_source.setAttribute(\"src\", `https://ipfs.io/ipfs/${tokenMetadata[\"image\"].split(\"ipfs://\")[1]}`);\n                        }\n                        else {\n                          vid_source.setAttribute(\"src\", tokenMetadata[\"image\"]);\n                        }\n                        vid_source.setAttribute(\"type\", \"video/mp4\");\n                        imgNFT.appendChild(vid_source);\n                      }\n                      else {\n                        imgNFT = document.createElement('img');\n                        imgNFT.setAttribute(\"src\", tokenMetadata[\"image\"]);\n                      }\n                      imgNFT.setAttribute(\"alt\", contractAdress);\n                      imgNFT.style.width = \"150px\";\n\n                      const cardVaultDetails = document.createElement('div');\n                      cardVaultDetails.className = \"vault_details\";\n\n                      const cardH4 = document.createElement('h5');\n                      cardH4.style.color = \"white\";\n                      cardH4.innerHTML = nftName + \" Vault\";\n\n                      const cardSpan = document.createElement('span');\n                      cardSpan.className = \"spanX\"\n                      cardSpan.id = \"Pending\" + contractAdress;\n                      cardSpan.style.color = \"white\";\n                      cardSpan.innerHTML = \"\";\n\n                      cardVaultDetails.appendChild(cardH4);\n                      cardVaultDetails.appendChild(cardSpan);\n\n                      cardVaultFront.appendChild(imgNFT);\n                      cardVaultFront.appendChild(cardVaultDetails);\n\n                      const cardVaultBack = document.createElement('div');\n                      cardVaultBack.className = \"vault_back\";\n\n                      //const spaceH6 = document.createElement('h6');\n\n                      const cardButtonClaim = document.createElement('a');\n                      cardButtonClaim.style.color = \"white\";\n                      cardButtonClaim.innerHTML = \"Claim All\";\n                      cardButtonClaim.onclick = function () { claimVault(cardVault.value); }\n\n\n                      const cardButtonUnstake = document.createElement('a');\n                      cardButtonUnstake.style.color = \"white\";\n                      cardButtonUnstake.innerHTML = \"Unstake All\";\n                      cardButtonUnstake.onclick = function () { unstakeVault(cardVault.value); }\n\n                      const cardButtonModify = document.createElement('a');\n                      cardButtonModify.style.color = \"white\";\n                      cardButtonModify.innerHTML = \"Modify\";\n                      cardButtonModify.onclick = function () { modifyVault(cardVault.value, cardVault.id); }\n\n\n                      cardVaultBack.appendChild(cardButtonClaim);\n                      cardVaultBack.appendChild(cardButtonUnstake);\n                      cardVaultBack.appendChild(cardButtonModify);\n\n                      cardVaultCard.appendChild(cardVaultFront);\n                      cardVaultCard.appendChild(cardVaultBack);\n\n                      cardVault.appendChild(cardVaultCard);\n\n                      DivContainer.appendChild(cardVault);\n                    })();\n                  }\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n\n    }\n\n    async function listNFT(_account, tab_container, jsonParsedContents, filterList) {\n      try {\n        var userNFTHold = 0;\n        var btnStakeAll = document.getElementById(\"btnStakeAll\");\n        var btnStakeSelected = document.getElementById(\"btnStakeSelected\");\n\n        console.log(btnStakeAll);\n\n        document.getElementById(tab_container).innerHTML = \"\";\n\n        if (filterList == \"All\" || filterList == \"All Owned NFT\") {\n          btnStakeAll.setAttribute('disabled', 'disabled');\n          btnStakeSelected.setAttribute('disabled', 'disabled');\n\n          //Populate List NFT\n\n          if (jsonParsedContents != null) {\n            console.log(\"Load Whitelisted First\");\n            for (var key in CONFIGWhitelist.NFT) {\n              for (let i = 0; i < jsonParsedContents.result.length; i++) {\n                if (jsonParsedContents.result[i].type == \"ERC-721\") {\n                  if (CONFIGWhitelist.NFT[key].ADDRESS == jsonParsedContents.result[i].contractAddress) {\n                    nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, jsonParsedContents.result[i].contractAddress);\n                    userNFTHold = userNFTHold + (await myHoldNFT(tab_container, nftcontract, jsonParsedContents.result[i].contractAddress, _account));\n                    //console.log(\"await ABIFetch\");\n                    break;\n                  }\n                }\n              }\n            }\n\n            //All other ERC-721\n            var ctr;\n            for (let i = 0; i < jsonParsedContents.result.length; i++) {\n              if (jsonParsedContents.result[i].type == \"ERC-721\" && nitroboost_address.toUpperCase() != jsonParsedContents.result[i].contractAddress.toUpperCase()) {\n                ctr = 0;\n                for (var key in CONFIGWhitelist.NFT) {\n                  if (CONFIGWhitelist.NFT[key].ADDRESS != jsonParsedContents.result[i].contractAddress) {\n                    ctr++;\n                  }\n                }\n                if (ctr >= CONFIGWhitelist.NFT.length) {\n                  nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, jsonParsedContents.result[i].contractAddress);\n                  userNFTHold = userNFTHold + (await myHoldNFT(tab_container, nftcontract, jsonParsedContents.result[i].contractAddress, _account));\n                }\n              }\n            }\n          }\n\n        }\n        else {\n          nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, filterList);\n          userNFTHold = userNFTHold + (await myHoldNFT(tab_container, nftcontract, filterList, _account));\n          btnStakeAll.removeAttribute('disabled');\n          btnStakeSelected.removeAttribute('disabled');\n\n        }\n\n        //console.log(userNFTHold);\n        if (userNFTHold == 0) {\n          ShowNFTError(\"NO NFT SCANNED.\");\n        }\n\n      }\n\n      catch (ex) {\n        console.log('listNFT - SeeError - ' + ex);\n        ShowNFTError(ex);\n      }\n    }\n\n    async function ABIFetch(web3, _abi, _address) {\n      var _contract;\n      var ABIResponse;\n\n      ABIResponse = await fetch(_abi, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      });\n      const ABIJSON = await ABIResponse.json();\n      _contract = new web3.eth.Contract(ABIJSON, _address);\n\n      return _contract;\n    }\n\n    async function listNFTFilter(jsonParsedContents) {\n      //async function populateMyNFT(jsonParsedContents) {\n      var lstNFT = document.getElementById(\"nftFilter\");\n      lstNFT.innerHTML = \"\";\n\n      for (let i = 0; i < jsonParsedContents.result.length; i++) {\n        if (i == 0) {\n          var z_1 = document.createElement(\"option\");\n          z_1.setAttribute(\"value\", \"All\");\n          var t_1 = document.createTextNode(\"All Owned NFT\");\n\n          z_1.appendChild(t_1);\n          lstNFT.appendChild(z_1);\n        }\n\n        if (jsonParsedContents.result[i].type == \"ERC-721\" && jsonParsedContents.result[i].balance > 0 && nitroboost_address.toUpperCase() != jsonParsedContents.result[i].contractAddress.toUpperCase()) {\n          /* console.log(\"jsonParsedContents.result[i].balance\");\n          console.log(jsonParsedContents.result[i].name);\n          console.log(jsonParsedContents.result[i].contractAddress);\n          console.log(jsonParsedContents.result[i].balance); */\n          var z = document.createElement(\"option\");\n          z.setAttribute(\"value\", jsonParsedContents.result[i].contractAddress);\n\n          var t = document.createTextNode(jsonParsedContents.result[i].name + \": \" + jsonParsedContents.result[i].balance);\n          z.appendChild(t);\n\n          lstNFT.appendChild(z);\n        }\n\n      }\n    }\n\n    async function fetchNFTImage(nftcontract, _account, tkID, _caller) {\n      //console.log('fetchNFTImage');\n      var tokenMetadata = null;\n      try {\n        let tokenMetadataURI = await nftcontract.methods.tokenURI(tkID).call();\n        //console.log(\"tokenMetadataURI: \" + tokenMetadataURI);\n\n        if (tokenMetadataURI.startsWith(\"ipfs://\")) {\n          tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI.split(\"ipfs://\")[1]}`;\n        }\n        else if (tokenMetadataURI.startsWith(\"https://gateway.pinata.cloud/ipfs/\")) {\n          tokenMetadataURI = tokenMetadataURI.replace(`https://gateway.pinata.cloud/ipfs/`, ``);\n          tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI}${tkID}`;\n        }\n        tokenMetadata = await fetch(tokenMetadataURI).then((response) => response.json());\n        //console.log(\"tokenMetadata: \" + tokenMetadata);\n\n      }\n      catch (ex) {\n        console.log('Caller - ' + _caller);\n        console.log(ex);\n      }\n\n      return tokenMetadata;\n\n    }\n\n\n\n    async function myHoldNFT(tab_container, nftcontract, contractAdress, _account) {\n      var nftName;\n      try {\n\n        nftName = await nftcontract.methods.name().call();\n        console.log(nftName);\n\n        const DivContainer = document.getElementById(tab_container);\n        var balanceOfOwner = await nftcontract.methods.balanceOf(_account).call();\n        var curDiv;\n\n        for (let i = 0; i < balanceOfOwner; i++) {\n          (async function () {\n            try {\n              var tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, i).call();\n              const tokenMetadata = await fetchNFTImage(nftcontract, _account, tkID, 'myHoldNFT');\n\n              //var curFuncStr;\n              //curFuncStr = \"nftStake('\" + tkID + \"');\";\n              curDiv = document.createElement('div');\n              curDiv.className = \"nftcontainer mt-3\";\n              //curDiv.setAttribute('onclick', curFuncStr);\n              //curDiv.onclick = function () { nftStake( tkID ); } \n\n              const chk = document.createElement(\"INPUT\");\n              chk.setAttribute(\"type\", \"checkbox\");\n              chk.id = contractAdress + \"_\" + tkID;\n              chk.class = \"unlisted\";\n\n              const lbl = document.createElement(\"LABEL\");\n              lbl.htmlFor = chk.id;\n\n              var imgNFT\n              if (tokenMetadata[\"image\"].includes(\"mp4\")) {\n                imgNFT = document.createElement('video');\n                imgNFT.style.width = \"500\";\n\n                const vid_source = document.createElement(\"source\");\n                if (tokenMetadata[\"image\"].startsWith(\"ipfs://\")) {\n                  vid_source.setAttribute(\"src\", `https://ipfs.io/ipfs/${tokenMetadata[\"image\"].split(\"ipfs://\")[1]}`);\n                }\n                else {\n                  vid_source.setAttribute(\"src\", tokenMetadata[\"image\"]);\n                }\n\n                vid_source.setAttribute(\"type\", \"video/mp4\");\n                imgNFT.appendChild(vid_source);\n              }\n              else {\n                imgNFT = document.createElement('img');\n                imgNFT.setAttribute(\"src\", tokenMetadata[\"image\"]);\n              }\n              imgNFT.setAttribute(\"alt\", contractAdress);\n              imgNFT.style.width = \"150px\";\n\n              const div = document.createElement('div');\n              div.className = \"nftdetail\";\n\n              const objNFT = document.createElement('h6');\n              objNFT.innerHTML = (nftName.length > 20 ? nftName.substring(1, 20) : nftName) + ` #` + (tkID.length > 5 ? tkID.substring(1, 5) : tkID);\n\n              curDiv.appendChild(chk);\n              curDiv.appendChild(lbl);\n              lbl.appendChild(imgNFT)\n              curDiv.appendChild(objNFT);\n              curDiv.appendChild(div);\n              div.appendChild(objNFT)\n\n              DivContainer.appendChild(curDiv);\n\n            }\n            catch (ex2) {\n              ShowNFTError(nftName + \" - Error on reading token URI\");\n              //console.log(ex2);\n            }\n\n          })();\n        }\n\n        return balanceOfOwner;\n      }\n      catch (ex) {\n        console.log('Error on myHoldNFT');\n        //console.log(ex);\n      }\n    }\n\n    async function UnstakeSelected() {\n      ClaimThem(true);\n    }\n\n    async function ClaimSelected() {\n      ClaimThem(false);\n    }\n\n    async function BackToCollection() {\n      stakeVaults('staked-nft-container');\n    }\n\n    async function ClaimThem(unstake) {\n      try {\n        await delay();\n        await onGoingNotif(\"Pending\");\n\n        const DivContainer = document.getElementById('staked-nft-container');\n        var children = DivContainer.getElementsByTagName('*');\n        var elements = [], child;\n        for (var i = 0; i < children.length; i++) {\n          child = children[i];\n          if (child.type == \"checkbox\" && child.checked == true) {\n            elements.push(child);\n          }\n        }\n\n        var tkIDs = [];\n        var _vaultId;\n\n        //loop for getting staked vault\n        for (var j = 0; j < elements.length; j++) {\n          var nft = [];\n          nft = elements[j].id.split(\"_\");\n          _vaultId = await stakingnftcontract.methods.getVaultId(nft[0]).call();\n\n          tkIDs.push(nft[1]);\n        }\n\n        console.log(_vaultId);\n        console.log(tkIDs);\n\n        if (unstake) {\n          await stakingnftcontract.methods.unstake(_vaultId, tkIDs).send({ from: account });\n          //await PopupShow(\"Unstake successful!\");\n        }\n        else {\n          await stakingnftcontract.methods.claim(_vaultId, tkIDs).send({ from: account });\n          //await PopupShow(\"Claim successful!\");\n        }\n\n      }\n      catch (ex) {\n        console.log(\"ClaimThem - \" + ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function UnstakeThem() {\n      try {\n\n\n\n        const DivContainer = document.getElementById('staked-nft-container');\n        var children = DivContainer.getElementsByTagName('*');\n        var elements = [], child;\n        for (var i = 0; i < children.length; i++) {\n          child = children[i];\n          if (child.type == \"checkbox\" && child.checked == true) {\n            elements.push(child);\n          }\n        }\n\n        var tkIDs = [];\n        var _vaultId;\n\n        //loop for getting staked vault\n        for (var j = 0; j < elements.length; j++) {\n          var nft = [];\n          nft = elements[j].id.split(\"_\");\n          _vaultId = await stakingnftcontract.methods.getVaultId(nft[0]).call();\n\n          tkIDs.push(nft[1]);\n        }\n\n        console.log(_vaultId);\n        console.log(tkIDs);\n        await stakingnftcontract.methods.unstake(_vaultId, tkIDs).send({ from: account });\n\n\n\n      }\n      catch (ex) {\n        console.log(\"UnstakeThem - \" + ex);\n      }\n    }\n\n    async function StakeAll() {\n      //var filterList = document.getElementById(\"nftFilter\").value;\n      const DivContainer = document.getElementById('unstaked-nft-container');\n      //if (filterList != \"All\" || filterList != \"All Owned NFT\") {\n      var children = DivContainer.getElementsByTagName('*');\n      var elements = [], child;\n      for (var i = 0; i < children.length; i++) {\n        child = children[i];\n        if (child.type == \"checkbox\") {\n          elements.push(child);\n        }\n      }\n\n      console.log(\"elements\");\n      console.log(elements);\n\n      var _isNFTAppr = false;\n      var address;\n      var tkIDs = [];\n\n      var _reject = false;\n\n      for (var i = 0; i < elements.length; i++) {\n        var nft = [];\n        nft = elements[i].id.replace(\"chk\", \"\").split(\"_\");\n\n        if (_isNFTAppr == false) {\n          address = nft[0];\n          console.log(\"address: \" + address);\n          await onGoingNotif(\"Approve All\");\n          _isNFTAppr = await nftApproveAll(address);\n\n          if (_isNFTAppr == false) {\n            _reject = true;\n            await onGoingNotif(\"\");\n            return;\n          }\n          await onGoingNotif(\"Pending\");\n        }\n\n        tkIDs.push(nft[1]);\n      }\n\n      if (await isWhitelist(address)) {\n        console.log(\"stake - isWhitelist\");\n        var _vaultId = await stakingnftcontract.methods.getVaultId(address).call();\n        await stakingnftcontract.methods.stake(_vaultId, tkIDs).send({ from: account });\n      }\n      else {\n        console.log(\"stakeAny\");\n        await stakingnftcontract.methods.stakeAny(address, tkIDs).send({ from: account });\n      }\n      await refreshDAppView();\n      //}\n      await onGoingNotif(\"\");\n\n\n    }\n\n    async function StakeThem() {\n      try {\n        await onGoingNotif(\"Pending\");\n\n        const DivContainer = document.getElementById('unstaked-nft-container');\n        var children = DivContainer.getElementsByTagName('*');\n        var elements = [], child;\n        for (var i = 0; i < children.length; i++) {\n          child = children[i];\n          if (child.type == \"checkbox\" && child.checked == true) {\n            elements.push(child);\n          }\n        }\n\n        //console.log('StakeThem');\n        //console.log(elements);\n\n        var _isNFTAppr = false;\n        var address;\n        var tkIDs = [];\n\n        var _reject = false;\n\n        for (var i = 0; i < elements.length; i++) {\n          var nft = [];\n          nft = elements[i].id.replace(\"chk\", \"\").split(\"_\");\n\n          //console.log(\"_isNFTAppr - \" + _isNFTAppr);\n          if (_isNFTAppr == false) {\n            address = nft[0];\n            await onGoingNotif(\"Approve All\");\n            _isNFTAppr = await nftApproveAll(address);\n\n            if (_isNFTAppr == false) {\n              _reject = true;\n              await onGoingNotif(\"\");\n              return;\n            }\n            await onGoingNotif(\"Pending\");\n          }\n\n\n          tkIDs.push(nft[1]);\n          //console.log(tkIDs);\n        }\n\n        if (await isWhitelist(address)) {\n          console.log(\"stake - isWhitelist\");\n          var _vaultId = await stakingnftcontract.methods.getVaultId(address).call();\n          await stakingnftcontract.methods.stake(_vaultId, tkIDs).send({ from: account });\n        }\n        else {\n          console.log(\"stakeAny\");\n          await stakingnftcontract.methods.stakeAny(address, tkIDs).send({ from: account });\n        }\n        await refreshDAppView();\n      }\n      catch (ex) {\n        console.log(\"StakeThem - \" + ex);\n      }\n      await onGoingNotif(\"\");\n\n    }\n\n    async function refreshDAppView() {\n      await RefreshCollection();\n      await listNFTFilter(resultAPICall);\n      //await listStakeNFT('staked-nft-container');\n      await stakeVaults('staked-nft-container');\n    }\n\n    async function nftApproveAll(address) {\n      try {\n        var _nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, address);\n        var _isAppr = await _nftcontract.methods.isApprovedForAll(account, stakingnft_address).call();\n        if (_isAppr == false) {\n          await _nftcontract.methods.setApprovalForAll(stakingnft_address, true).send({ from: account })\n        }\n        return true;\n      }\n      catch (ex) {\n        console.log(address);\n        console.log(\"nftApproveAll - \" + ex);\n        return false;\n      }\n\n    }\n\n    async function isWhitelist(address) {\n      var _res = false;\n      try {\n        for (var key in CONFIGWhitelist.NFT) {\n          if (CONFIGWhitelist.NFT[key].ADDRESS == address) {\n            _res = true;\n            break;\n          }\n        }\n      }\n      catch (ex) {\n        console.log(\"isWhitelist - \" + ex);\n      }\n\n      return _res;\n    }\n\n    async function ShowNFTError(msgValue) {\n      const DivContainer = document.getElementById('unstaked-nft-container');\n\n      const curDiv = document.createElement('div');\n      curDiv.className = \"nftcontainer mt-3 ml-3\";\n\n      const chk = document.createElement(\"INPUT\");\n      chk.setAttribute(\"type\", \"checkbox\");\n      chk.id = \"chk\"; // + contractAdress + \"_\" + tkID;\n      chk.class = \"unlisted\";\n\n      const lbl = document.createElement(\"LABEL\");\n      lbl.htmlFor = chk.id;\n\n      const objNFT = document.createElement('h6');\n      objNFT.innerHTML = msgValue;\n      objNFT.className = \"errorMessage\";\n\n      curDiv.appendChild(chk);\n      curDiv.appendChild(lbl);\n\n      curDiv.appendChild(objNFT);\n      DivContainer.appendChild(curDiv);\n    }\n\n    async function showCover() {\n      let coverDiv = document.createElement('div');\n      coverDiv.id = 'cover-div';\n\n      // make the page unscrollable while the modal form is open\n      document.body.style.overflowY = 'hidden';\n\n      document.body.append(coverDiv);\n    }\n\n    async function NitroAdd() {\n      await onGoingNotif(\"Pending...\");\n      try {\n        let DivContainer = document.getElementById('prompt-message');//.innerHTML = text;\n        var children = DivContainer.getElementsByTagName('*');\n        var child;\n        //var elements = [], child;\\\n\n        if (children.length > 0) {\n\n          var _isAppr = await nitrocontract.methods.isApprovedForAll(account, stakingnft_address).call();\n          if (_isAppr == false) {\n            await nitrocontract.methods.setApprovalForAll(stakingnft_address, true)\n              .send({\n                from: account,\n                gasLimit: String(totalGasLimit)\n              })\n          }\n\n          for (var i = 0; i < children.length; i++) {\n            child = children[i];\n            console.log(\"child.id - \", child.id);\n            if (child.type == \"radio\" && child.checked == true) {\n              //elements.push(child);\n              var nft = [];\n              nft = child.id.split(\"|\");\n\n              var _vaultId = nft[0];\n              var _tkID = nft[1];\n              var _nitroId = nft[2];\n\n              console.log(\"Stake Nitro: \", _vaultId, _tkID, _nitroId);\n\n              await stakingnftcontract.methods.stakeNitro(_vaultId, _tkID, _nitroId)\n                .send({\n                  from: account,\n                  gasLimit: String(totalGasLimit)\n                });\n              break;\n            }\n          }\n        }\n      }\n      catch (ex) {\n        console.log(ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function hideCover() {\n      document.getElementById('cover-div').remove();\n      document.body.style.overflowY = '';\n    }\n\n    async function showPrompt(text, callback) {\n      showCover();\n      let form = document.getElementById('prompt-form');\n      let container = document.getElementById('prompt-form-container');\n      var curDiv = document.createElement('div');\n      var contractAdress = await nitrocontract.methods.symbol().call();\n\n      let DivContainer = document.getElementById('prompt-message');//.innerHTML = text;\n      DivContainer.innerHTML = \"\";\n\n      var balanceOfOwner = await nitrocontract.methods.balanceOf(account).call();\n      console.log(\"balanceOfOwner: \" + balanceOfOwner);\n\n      for (let i = 0; i < balanceOfOwner; i++) {\n        (async function () {\n          try {\n            var tkID = await nitrocontract.methods.tokenOfOwnerByIndex(account, i).call();\n            //const tokenMetadata = await fetchNFTImage(nitrocontract, account, tkID, 'showPrompt');\n\n            curDiv = document.createElement('div');\n            curDiv.className = \"nitrocontainer mt-3\";\n\n            const chk = document.createElement(\"INPUT\");\n            chk.setAttribute(\"type\", \"radio\");\n            //vault | token | nitroID\n            chk.id = text + '|' + tkID;  //contractAdress + \"_\" + tkID;\n            chk.class = \"unlisted\";\n            chk.name = \"nitro\";\n\n            const lbl = document.createElement(\"LABEL\");\n            lbl.htmlFor = chk.id;\n\n            var imgNFT = document.createElement('img');\n            //imgNFT.setAttribute(\"src\", tokenMetadata[\"image\"]);\n            imgNFT.setAttribute(\"src\", \"./nitrocommon.gif\");\n            imgNFT.setAttribute(\"alt\", contractAdress);\n            imgNFT.style.width = \"100px\";\n\n            const div = document.createElement('div');\n            div.className = \"nftdetail\";\n\n            const objNFT = document.createElement('h6');\n            //objNFT.innerHTML = (nftName.length > 20 ? nftName.substring(1, 20) : nftName) + ` #` + (tkID.length > 5 ? tkID.substring(1, 5) : tkID);\n\n            curDiv.appendChild(chk);\n            curDiv.appendChild(lbl);\n            lbl.appendChild(imgNFT)\n            curDiv.appendChild(objNFT);\n            curDiv.appendChild(div);\n            div.appendChild(objNFT)\n\n            DivContainer.appendChild(curDiv);\n\n          }\n          catch (ex2) {\n            //ShowNFTError(nftName + \" - Error on reading token URI\");\n            console.log(ex2);\n          }\n\n        })();\n      }\n\n      //form.text.value = '';\n\n      function complete(value) {\n        if (value == \"submit\") {\n          NitroAdd();\n        }\n        hideCover();\n        container.style.display = 'none';\n        document.onkeydown = null;\n        callback(value);\n      }\n\n      form.onsubmit = function () {\n        let value = \"submit\";\n        complete(value);\n        return false;\n      };\n\n      form.cancel.onclick = function () {\n        complete(null);\n      };\n\n      document.onkeydown = function (e) {\n        if (e.key == 'Escape') {\n          complete(null);\n        }\n      };\n      container.style.display = 'block';\n    }\n\n    async function NitroMint(pID) {\n      try {\n        await onGoingNotif(\"Pending...\");\n\n        if (amtNitro > 0) {\n\n          var totalCostWei = 0;\n          var totalCost = await nitrocontract.methods.getNFTCost(pID).call();\n          var _allow = await rewardcontract.methods.allowance(account, nitroboost_address).call();\n          totalCost = Web3.utils.fromWei(totalCost) * amtNitro;\n          console.log(totalCost, _allow);\n\n          if (totalCost > _allow) {\n            console.log(\"For Approval\");\n            totalCostWei = Web3.utils.toWei(String(totalCost));\n            console.log(totalCostWei);\n            await onGoingNotif(\"Approval...\");\n            await rewardcontract.methods.approve(nitroboost_address, totalCostWei)\n              .send({ from: account });\n            await onGoingNotif(\"Pending...\");\n          }\n          await nitrocontract.methods\n            .mint(amtNitro, pID)\n            .send({\n              gasLimit: String(totalGasLimit * amtNitro),\n              to: nitroboost_address,\n              from: account\n            });\n        }\n      }\n      catch (ex) {\n        console.log(ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function BtnSelected(amt) {\n      amtNitro = amt;\n    }\n\n    return (\n      <div className=\"App nftapp\">\n        <div className='row'>\n          <div className='col'>\n            <nav class=\"navbar navbarfont navbar-expand-md navbar-dark bg-dark \">\n              <a href='#'>\n                <img src=\"logo.png\" />\n              </a>\n              <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n              </button>\n              <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n                <ul class=\"navbar-nav me-auto mb-2 px-3 mb-md-0\" style={{ fontSize: \"15px\" }}>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Dashboard</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Market Place</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">NFT Bridge</a>\n                  </li>\n                </ul>\n              </div>\n              <div>\n                <div class=\"d-flex flex-row flex-nowrap accountInfo float-end mr-3\" style={{marginRight: \"14px\" }}>\n                  <div id=\"wallBal\" className=\"walletBalance\" />\n                  <div id=\"btnConnect\" onClick={connectwallet} className=\"connectbutton ml-2\" type=\"button\" style={{ fontFamily: \"SF Pro Display\"}}>\n                    Connect Your Wallet\n                  </div>\n                </div>\n              </div>\n\n            </nav>\n          </div>\n        </div>\n\n        <div className='row'>\n          <div className='col sidebar'>\n            <form>\n              <h5 className='h5Nitro'>Mint Nitro NFT Here</h5>\n              <img src=\"./nitrocommon.gif\" width=\"100px\" />\n              <h6 className='h6Nitro'>Select Nitro Quantity</h6>\n\n              <ButtonGroup size=\"lg\"\n                aria-label=\"First group\"\n                name=\"amount\"\n                style={{ boxShadow: \"1px 1px 5px #000000\" }}\n                class=\"btn-group\"\n              >\n                <Button value=\"1\" onClick={function () { BtnSelected(1) }}>1</Button>\n                <Button value=\"2\" onClick={function () { BtnSelected(2) }}>2</Button>\n                <Button value=\"3\" onClick={function () { BtnSelected(3) }}>3</Button>\n                <Button value=\"4\" onClick={function () { BtnSelected(4) }}>4</Button>\n                <Button value=\"5\" onClick={function () { BtnSelected(5) }}>5</Button>\n              </ButtonGroup>\n\n              <h6 className='h6Nitro mt-3'>Pay with your preferred Crypto</h6>\n              <div class=\"nitro-qty\" role=\"group\" id=\"btnNitroQty\" aria-label=\"Token Payment\">\n                <button type=\"button\" class=\"btn btn-primary\" id=\"btnMartinB\" onClick={function () { NitroMint(0) }}>Crude Oil</button>\n              </div>\n            </form>\n          </div>\n          <div className='col nftTabs'>\n            <form style={{ fontFamily: \"SF Pro Display\" }} >\n              <Tabs defaultActiveKey=\"second\" className=\"nav-pills nav-fill\">\n                <Tab eventKey=\"first\" title=\"Unstaked NFT\">\n                  <div className='row items' >\n                    <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                      <div class=\"hold-nft-menu buttonmenu\" role=\"group\" aria-label=\"Hold NFT Menu\">\n                        <button type=\"button\" class=\"btn btn-secondary\" id=\"btnStakeAll\" onClick={StakeAll}>Stake All</button>\n                        <button type=\"button\" class=\"btn btn-secondary\" id=\"btnStakeSelected\" onClick={StakeThem}>Stake Selected</button>\n                        <select id=\"nftFilter\" className='drpFilter btn-secondary' onChange={RefreshCollection}>\n                          <option selected class=\"selected\">JeepneyRushNFT</option>\n                          <option>All Owned NFT</option>\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n                  <div className='col'>\n                    <div className='row items'>\n                      <div id='unstaked-nft-container' style={{ display: \"inline-grid\", gridTemplateColumns: \"repeat(4, 4fr)\", columnGap: \"20px\" }} />\n                    </div>\n                  </div>\n                </Tab>\n                <Tab eventKey=\"second\" title=\"Staked NFT\">\n                  <div className='row items' >\n                    <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                      <div class=\"hold-nft-menu buttonmenu\" id=\"btnUnstakeMenu\" role=\"group\" aria-label=\"Stake NFT Menu\">\n                        <button type=\"button\" class=\"btn btn-secondary\" id=\"btnBack\" onClick={BackToCollection}>Back</button>\n                        <button type=\"button\" class=\"btn btn-secondary\" id=\"btnClaimSelected\" onClick={ClaimSelected}>Claim Selected</button>\n                        <button type=\"button\" class=\"btn btn-secondary\" id=\"btnUnstakeSelected\" onClick={UnstakeSelected}>Unstake Selected</button>\n                      </div>\n                    </div>\n                  </div>\n                  <div className='row items'>\n                    <div id='staked-nft-container' className='ml-3 mr-3' style={{ display: \"inline-grid\", gridTemplateColumns: \"repeat(3, 5fr)\", columnGap: \"20px\" }} />\n                  </div>\n                </Tab>\n              </Tabs>\n            </form>\n          </div>\n        </div>\n\n\n        <div id=\"prompt-form-container\">\n          <form id=\"prompt-form\">\n            <div className='add-booster'>\n              <div id=\"prompt-message\" className='scroll'></div>\n              <input name=\"btnSubmit\" type=\"submit\" value=\"Equip\"></input>\n              <input name=\"cancel\" type=\"button\" value=\"Cancel\" />\n            </div>\n          </form>\n        </div>\n\n      </div>\n    );\n  };\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["window","$","short_acct","CONFIG","ABI","account","nftcontract","defSymbol","totalGasLimit","walletBalanceAPI","scannerAPI","balanceAPI","resultAPICall","CONFIGWhitelist","stakingnftcontract","rewardcontract","nitrocontract","stakingnft_address","nitroboost_address","web3","localStorage","getItem","rewardInDetail","vaultSelected","amtNitro","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleWindowSizeChange","setState","width","innerWidth","state","addEventListener","removeEventListener","isMobile","delay","Promise","resolve","setTimeout","connectwallet","_connectwallet","apply","arguments","asyncToGenerator","_regeneratorRuntime","mark","_callee","configResponse","accounts","networkId","abiResponse","abiWhitelist","sWallBal","wrap","_context","prev","next","ethereum","fetch","headers","Content-Type","Accept","sent","json","Web3","send","eth","getAccounts","request","method","MAINNET","ID","TESTNET","SYMBOL","GAS_LIMIT","API","BALANCE","WALLET","ABIFetch","TOKENREWARD","MAINDAPP","STAKING","NITROBOOST","toUpperCase","TESTDAPP","onGoingNotif","document","getElementById","style","WalletBalance","innerHTML","APICall","listNFTFilter","stakeVaults","setInterval","RewardInquiry","confirm","t0","console","log","stop","RefreshCollection","_RefreshCollection","_callee2","nftCol","_context2","value","listNFT","_x","_x2","_APICall","_callee3","theURL","apiResponse","jsonParsedContents","_context3","abrupt","APIBalanceCall","_x3","_x4","_x5","_APIBalanceCall","_callee4","_account","_CA","_context4","replace","_x6","_WalletBalance","_callee5","earnedrwd","rewards","_context5","utils","fromWei","result","Number","toFixed","claimVault","_x7","_claimVault","_callee6","_vaultId","_vault","_tkIDs","i","balanceOfOwner","j","_tkID","_context6","methods","Vault","nftAddress","balanceOf","tokenOfOwnerByIndex","nftStake","owner","push","claim","from","refreshDAppView","modifyVault","_x8","_x9","_modifyVault","_callee8","_vaultContract","tab_container","_contractAddress","_vId","_context8","UnstakeMenuControl","length","type","contractAddress","getVaultId","ERC721","ShowNFTCard","_x10","_onGoingNotif","_callee9","msg","btnConnect","img","_context9","substring","createElement","class","setAttribute","appendChild","unstakeVault","_x11","_unstakeVault","_callee10","_context10","unstake","_RewardInquiry","_callee11","_stakeCount","balanceOfVault","_symbol","_i","contractAdress","divPend","_pendingRewards","_pend","earned","objNFTPend","_nitroStakeRemaining","sec_num","hours","minutes","seconds","remainingBurn","DivContainer","children","child","child2","_context11","includes","symbol","pendingRewardByAccount","String","split","concat","pendingReward","fontSize","nitroStakeRemaining","parseInt","Math","floor","getElementsByTagName","id","className","t1","t2","_x12","_x13","_x14","_UnstakeMenuControl","_callee12","btnBack","btnClaim","btnUnstake","_btnBack","_btnClaim","_btnUnstake","_context12","display","classList","add","removeAttribute","remove","_x15","_stakeVaults","_callee14","usrVaultCount","usrCurrVault","_i2","nftName","tokenMetadataURI","tokenMetadata","_context14","active","name","tokenURI","startsWith","then","response","_callee13","cardVault","cardVaultCard","cardVaultFront","imgNFT","vid_source","cardVaultDetails","cardH4","cardSpan","cardVaultBack","cardButtonClaim","cardButtonUnstake","cardButtonModify","_context13","color","onclick","_x16","_x17","_x18","_x19","_listNFT","_callee15","filterList","userNFTHold","btnStakeAll","btnStakeSelected","key","ctr","_i3","_context15","keys","NFT","done","ADDRESS","t3","t4","t5","t6","t7","t8","t9","ShowNFTError","t10","_x20","_x21","_x22","_ABIFetch","_callee16","_abi","_address","_contract","ABIResponse","ABIJSON","_context16","Contract","_x23","_listNFTFilter","_callee17","lstNFT","z_1","t_1","z","t","_context17","createTextNode","balance","fetchNFTImage","_x24","_x25","_x26","_x27","_fetchNFTImage","_callee18","tkID","_caller","_context18","_x28","_x29","_x30","_x31","_x32","_ShowNFTCard","_callee20","isStaked","nftcontainer","objNFTNitroEquip","btnPowerUp","mismatchNFT","_loop","_context20","_callee19","_checkAdd","_nftStakeInfo","nftdetail","chk","lbl","_imgFix","objNFT","_context19","htmlFor","showPrompt","showPromptTransfer","UnstakeSelected","_UnstakeSelected","_callee21","_context21","ClaimThem","ClaimSelected","_ClaimSelected","_callee22","_context22","BackToCollection","_BackToCollection","_callee23","_context23","_x33","_ClaimThem","_callee24","_DivContainer","elements","tkIDs","nft","_context24","checked","StakeAll","_StakeAll","_callee25","_isNFTAppr","address","_context25","nftApproveAll","isWhitelist","stake","stakeAny","StakeThem","_StakeThem","_callee26","_DivContainer2","_context26","_refreshDAppView","_callee27","_context27","_x34","_nftApproveAll","_callee28","_nftcontract","_context28","isApprovedForAll","setApprovalForAll","_x35","_isWhitelist","_callee29","_res","_context29","_x36","_ShowNFTError","_callee30","msgValue","curDiv","_context30","showCover","_showCover","_callee31","coverDiv","_context31","body","overflowY","append","SendNFT","_x37","_x38","_x39","_SendNFT","_callee32","nftAdd","destiAdd","_context32","safeTransferFrom","NitroAdd","_NitroAdd","_callee33","_DivContainer3","_nitroId","_context33","gasLimit","stakeNitro","hideCover","_hideCover","_callee34","_context34","ex","_x40","_x41","_showPromptTransfer","_callee35","text","callback","_nft","_nftName","form","container","h6NFTAddy","txAdd","h6Caption","x","complete","_context35","onkeydown","placeholder","onsubmit","cancel","e","_x42","_x43","_showPrompt","_callee38","_loop2","_context38","_callee37","div","_context37","NitroMint","_x44","_NitroMint","_callee39","pID","totalCost","_allow","_maxSupp","_context39","getNFTCost","allowance","totalSupply","toWei","approve","mint","to","BtnSelected","_x45","_BtnSelected","_callee40","amt","_context40","react_default","a","fontFamily","fontWeight","href","src","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","ButtonGroup","size","boxShadow","Button","onClick","role","Tabs","defaultActiveKey","Tab","eventKey","title","onChange","selected","marginBottom","marginLeft","marginRight","clear","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.3bda73a2.chunk.js","sourcesContent":["import './App.css';\nimport { Button, ButtonGroup, Modal } from 'react-bootstrap';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component, createElement } from 'react';\n\nimport 'sf-font';\n\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Web3 from 'web3';\n\nimport { useEffect } from \"react\"\nimport { accessListify } from 'ethers/lib/utils';\nimport { First } from 'react-bootstrap/esm/PageItem';\n\nimport NFTStakeABI from './RushNFTStaking.json';\nimport NitroBoostABI from './NitroBoost.json';\n\n\nconst $ = window.$;\n\nvar CONFIG = null;\nvar ABI = null;\nvar account = null;\nvar nftcontract = null;\n\nvar defSymbol = null;\nvar totalGasLimit = null;\n\nvar walletBalanceAPI = null;\nvar scannerAPI = null;\nvar balanceAPI = null;\nvar resultAPICall = null;\nvar CONFIGWhitelist = null;\n\nvar nftName = null;\n\nvar stakingnftcontract = null;\nvar rewardcontract = null;\nvar nitrocontract = null;\n\nvar stakingnft_address = null;\nvar nitroboost_address = null;\n\nvar acc = localStorage.getItem(\"account\");\nvar short_acct;\n\nvar web3 = null;\nvar contract = null;\n\nvar rewardInDetail = false;\nvar vaultSelected = null;\n\nvar amtNitro = 0;\n\n/* var refresh_screen;\n$(function () {\n  refresh_screen = function (_text) {\n    $(\".loader\").fadeOut(1000);\n    $(\".content\").fadeIn(1000);\n  }\n}); */\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      width: window.innerWidth,\n    };\n\n  }\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n  handleWindowSizeChange = () => {\n    this.setState({ width: window.innerWidth });\n  };\n\n\n  /*  handleModal() {\n     this.setState({ show: !this.state.show })\n   } */\n\n  /* async componentDidMount() {\n\n  } */\n\n\n  render() {\n    const { width } = this.state;\n    const isMobile = width <= 500;\n\n    let nftcost = '';\n\n    const sleep = (milliseconds) => {\n      return new Promise(resolve => setTimeout(resolve, milliseconds))\n    }\n\n\n    function delay() {\n      return new Promise(resolve => setTimeout(resolve, 300));\n    }\n\n    async function connectwallet() {\n      try {\n        if (window.ethereum) {\n\n          const configResponse = await fetch(\"/config/config.json\", {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n          });\n          CONFIG = await configResponse.json();\n\n          web3 = new Web3(window.ethereum);\n\n\n          await window.ethereum.send('eth_requestAccounts');\n          var accounts = await web3.eth.getAccounts();\n          account = accounts[0];\n\n          const networkId = await window.ethereum.request({\n            method: \"net_version\",\n          });\n\n          if ((networkId == CONFIG.MAINNET.ID) || (networkId == CONFIG.TESTNET.ID)) {\n\n            const abiResponse = await fetch(\"/config/abi.json\", {\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\",\n              },\n            });\n            ABI = await abiResponse.json();\n\n            var abiWhitelist = null;\n\n            if (networkId == CONFIG.MAINNET.ID) {\n              defSymbol = CONFIG.MAINNET.SYMBOL;\n              totalGasLimit = CONFIG.MAINNET.GAS_LIMIT;\n              scannerAPI = CONFIG.MAINNET.API;\n              balanceAPI = CONFIG.MAINNET.BALANCE;\n              walletBalanceAPI = CONFIG.MAINNET.WALLET;\n              rewardcontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, CONFIG.MAINDAPP.TOKENREWARD);\n              stakingnftcontract = await ABIFetch(web3, ABI.STAKING.ABI, CONFIG.MAINDAPP.STAKING);\n              nitrocontract = await ABIFetch(web3, ABI.NITROBOOST.ABI, CONFIG.MAINDAPP.NITROBOOST);\n\n              stakingnft_address = CONFIG.MAINDAPP.STAKING;\n              nitroboost_address = CONFIG.MAINDAPP.NITROBOOST.toUpperCase();\n\n              abiWhitelist = await fetch(\"/config/whitelisted.json\", {\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Accept: \"application/json\",\n                },\n              });\n              CONFIGWhitelist = await abiWhitelist.json();\n\n            }\n            else if (networkId == CONFIG.TESTNET.ID) {\n              //console.log(\"API CALL\");\n\n              defSymbol = CONFIG.TESTNET.SYMBOL;\n              totalGasLimit = CONFIG.TESTNET.GAS_LIMIT;\n              scannerAPI = CONFIG.TESTNET.API;\n              balanceAPI = CONFIG.TESTNET.BALANCE;\n              walletBalanceAPI = CONFIG.TESTNET.WALLET;\n              rewardcontract = await ABIFetch(web3, ABI.TOKENREWARD.ABI, CONFIG.TESTDAPP.TOKENREWARD);\n              stakingnftcontract = await ABIFetch(web3, ABI.STAKING.ABI, CONFIG.TESTDAPP.STAKING);\n              nitrocontract = await ABIFetch(web3, ABI.NITROBOOST.ABI, CONFIG.TESTDAPP.NITROBOOST);\n\n\n              stakingnft_address = CONFIG.TESTDAPP.STAKING;\n              nitroboost_address = CONFIG.TESTDAPP.NITROBOOST;\n\n              abiWhitelist = await fetch(\"/config/testwhitelisted.json\", {\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Accept: \"application/json\",\n                },\n              });\n              CONFIGWhitelist = await abiWhitelist.json();\n\n            }\n\n            onGoingNotif(\"\");\n\n            var sWallBal = document.getElementById(\"wallBal\");\n            sWallBal.style.width = \"100px\";\n            sWallBal.innerHTML = await WalletBalance(account);\n\n            resultAPICall = await APICall(account, scannerAPI);\n            await listNFTFilter(resultAPICall);\n            //  await listNFT(account, 'unstaked-nft-container', resultAPICall, \"All\");\n\n            const DivContainer = document.getElementById('staked-nft-container');\n            DivContainer.innerHTML = \"\";\n            await stakeVaults('staked-nft-container');\n\n            var timer;\n            timer = setInterval(function () {\n              RewardInquiry();\n            }, 5000);\n          }\n\n          else {\n            var z = window.confirm(\"Wrong network!\");\n          }\n\n        }\n      }\n      catch (ex) {\n        console.log('connectwallet - SeeError - ' + ex);\n      }\n    }\n\n\n    async function RefreshCollection() {\n      var nftCol = document.getElementById(\"nftFilter\").value;\n\n      console.log(\"RefreshCollection >> nftCol: \", nftCol);\n\n      resultAPICall = await APICall(account, scannerAPI);\n      await listNFT(account, 'unstaked-nft-container', resultAPICall, nftCol);\n    }\n\n    async function APICall(account, API) {\n      var theURL = API + \"=\" + account;\n      var apiResponse = await fetch(theURL);\n      var jsonParsedContents = await apiResponse.json();\n\n      return jsonParsedContents;\n    }\n\n    async function APIBalanceCall(_account, _CA, API) {\n      var theURL = API.replace('@CONTRACTADDRESS', _CA).replace('@ACCOUNT', _account);\n      var apiResponse = await fetch(theURL);\n      var jsonParsedContents = await apiResponse.json();\n\n      return jsonParsedContents;\n    }\n\n    async function WalletBalance(_account) {\n      var theURL = walletBalanceAPI.replace('@ACCOUNT', _account);\n      var apiResponse = await fetch(theURL);\n      var jsonParsedContents = await apiResponse.json();\n\n      var earnedrwd = Web3.utils.fromWei(jsonParsedContents.result);\n      var rewards = Number(earnedrwd).toFixed(3);\n\n      return '  ' + rewards + ' ' + defSymbol;\n    }\n\n    async function claimVault(_vaultId) {\n      try {\n        await onGoingNotif(\"Pending...\");\n\n        var _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n\n        var _tkIDs = [];\n        resultAPICall = await APIBalanceCall(stakingnft_address, _vault.nftAddress, balanceAPI);\n        //console.log(resultAPICall);\n        for (let i = 0; i < resultAPICall.result; i++) {\n\n          var balanceOfOwner = await nftcontract.methods.balanceOf(stakingnft_address).call();\n          //console.log('balanceOfOwner: ' + balanceOfOwner);\n\n          for (let j = 0; j < balanceOfOwner; j++) {\n            var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(stakingnft_address, j).call();\n            var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n            if (_nftStakeInfo.owner == account) {\n              _tkIDs.push(_tkID);\n            }\n          }\n        }\n        //console.log(_tkIDs);\n\n        await stakingnftcontract.methods.claim(_vaultId, _tkIDs).send({ from: account });\n        await refreshDAppView();\n\n      }\n      catch (ex) {\n        console.log('claimVault');\n        console.log(ex);\n      }\n      await onGoingNotif(\"\");\n\n    }\n\n    async function backToStake() {\n      await stakeVaults('staked-nft-container');\n    }\n\n    async function modifyVault(_vaultId, _vaultContract) {\n      try {\n        await UnstakeMenuControl(true, true, true);\n\n        var tab_container = \"staked-nft-container\";\n        document.getElementById('staked-nft-container').innerHTML = \"\";\n\n        var _account = stakingnft_address;\n        resultAPICall = await APICall(_account, scannerAPI);\n\n        rewardInDetail = true;\n\n        for (let i = 0; i < resultAPICall.result.length; i++) {\n          if (resultAPICall.result[i].type == \"ERC-721\") {\n            var _contractAddress = resultAPICall.result[i].contractAddress;\n            vaultSelected = _contractAddress;\n            var _vId = await stakingnftcontract.methods.getVaultId(_contractAddress).call();\n            if ((_vaultId == _vId) && (_vaultContract == _contractAddress)) {\n              nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _contractAddress);\n              await ShowNFTCard(tab_container, nftcontract, _contractAddress, _account, true);\n              break;\n            }\n          }\n        }\n      }\n      catch (ex) {\n        console.log(ex);\n      }\n    }\n\n\n    async function onGoingNotif(msg) {\n      var btnConnect = document.getElementById('btnConnect');\n      if (msg == \"\") {\n        /* try {\n          hideCover();\n        }\n        catch (ex) {\n        } */\n\n        short_acct = account.substring(0, 6) + \"....\" + account.substring(account.length - 4, account.length);\n        var img = document.createElement('img');\n        img.class = \"ml-3\";\n        img.setAttribute(\"src\", 'chef.svg');\n        btnConnect.class = \"ml-3\";\n        btnConnect.innerHTML = short_acct;\n        btnConnect.appendChild(img);\n      }\n      else {\n        btnConnect.innerHTML = \"\";\n        btnConnect.innerHTML = msg;\n        /* showLoading(); */\n      }\n    }\n\n    async function unstakeVault(_vaultId) {\n      try {\n        await onGoingNotif(\"Pending...\");\n\n        var _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n\n        var _tkIDs = [];\n        resultAPICall = await APIBalanceCall(stakingnft_address, _vault.nftAddress, balanceAPI);\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _vault.nftAddress);\n\n        for (let i = 0; i < resultAPICall.result; i++) {\n          var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(stakingnft_address, i).call();\n          var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n          if (_nftStakeInfo.owner == account) {\n            _tkIDs.push(_tkID);\n          }\n        }\n        await stakingnftcontract.methods.unstake(_vaultId, _tkIDs).send({ from: account });\n        await refreshDAppView();\n      }\n      catch (ex) {\n        console.log('unstakeVault');\n        console.log(ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function RewardInquiry() {\n      try {\n        var btnConnect = document.getElementById('btnConnect');\n        if (!btnConnect.innerHTML.includes(short_acct)) {\n          return;\n        }\n\n        var sWallBal = document.getElementById(\"wallBal\");\n        sWallBal.innerHTML = await WalletBalance(account);\n\n        var _stakeCount = 0;\n        var _account = stakingnft_address;\n        resultAPICall = await APICall(_account, scannerAPI);\n\n        var balanceOfVault = 0;\n        var _symbol = await rewardcontract.methods.symbol().call();\n        if (rewardInDetail == false) {\n\n          for (let i = 0; i < resultAPICall.result.length; i++) {\n            if (resultAPICall.result[i].type == \"ERC-721\" && nitroboost_address.toUpperCase() != resultAPICall.result[i].contractAddress.toUpperCase()) {\n              var contractAdress = resultAPICall.result[i].contractAddress;\n              var _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n\n              var divPend = document.getElementById(\"Pending\" + resultAPICall.result[i].contractAddress);\n\n              var _pendingRewards = 0;\n\n              if (divPend != null) {\n                nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, resultAPICall.result[i].contractAddress);\n                balanceOfVault = await nftcontract.methods.balanceOf(_account).call();\n\n                var _pend = await stakingnftcontract.methods.pendingRewardByAccount(_vaultId, account).call();\n                var earned = String(_pend).split(\",\")[0];\n                var earnedrwd = Web3.utils.fromWei(earned);\n                _pendingRewards = Number(earnedrwd).toFixed(4);\n                _stakeCount = 0;\n\n                for (var j = 0; j < balanceOfVault; j++) {\n                  var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, j).call();\n                  var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n\n                  if (_nftStakeInfo.owner == account) {\n                    _stakeCount++;\n                  }\n                }\n\n                divPend.innerHTML = `Total NFT: ${_stakeCount} | Pending: ${_pendingRewards} ${_symbol}`;\n              }\n            }\n          }\n        }\n        else if (rewardInDetail == true) {\n          try {\n            nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, vaultSelected);\n            var _vaultId = await stakingnftcontract.methods.getVaultId(vaultSelected).call();\n            balanceOfVault = await nftcontract.methods.balanceOf(_account).call();\n            _pendingRewards = 0;\n            _stakeCount = 0;\n\n            for (var j = 0; j < balanceOfVault; j++) {\n              var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, j).call();\n              var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n\n              if (_nftStakeInfo.owner == account) {\n                _stakeCount++;\n\n                var _pend = await stakingnftcontract.methods.pendingReward(_vaultId, _tkID).call();\n                var earned = String(_pend).split(\",\")[0];\n                var earnedrwd = Web3.utils.fromWei(earned);\n                var rewards = Number(earnedrwd).toFixed(4);\n                _pendingRewards = Number(rewards).toFixed(4);\n\n                const objNFTPend = document.getElementById(\"pend\" + _vaultId + _tkID);\n                objNFTPend.style.fontSize = \"small\";\n                objNFTPend.innerHTML = _pendingRewards + \" \" + _symbol;\n\n              }\n\n\n              var _nitroStakeRemaining;\n              try {\n                _nitroStakeRemaining = await stakingnftcontract.methods.nitroStakeRemaining(_vaultId, _tkID).call();\n                if (_nitroStakeRemaining > 0) {\n                  var inSec = (_nitroStakeRemaining / 86400) * 24 * 60 * 60;\n\n                  var sec_num = parseInt(inSec, 10); // don't forget the second param\n                  var hours = Math.floor(sec_num / 3600);\n                  var minutes = Math.floor((sec_num - (hours * 3600)) / 60);\n                  var seconds = sec_num - (hours * 3600) - (minutes * 60);\n\n                  if (hours < 10) { hours = \"0\" + hours; }\n                  if (minutes < 10) { minutes = \"0\" + minutes; }\n                  if (seconds < 10) { seconds = \"0\" + seconds; }\n                  var remainingBurn = hours + ':' + minutes + ':' + seconds;\n\n                  const DivContainer = document.getElementById('staked-nft-container');\n                  var children = DivContainer.getElementsByTagName('*');\n                  var child, child2;\n                  for (var i = 0; i < children.length; i++) {\n                    child = children[i];\n                    if (child.id == \"nitro\" + _vaultId + _tkID) {\n                      child.innerHTML = remainingBurn + ' left';\n\n                      for (var j = 0; j < children.length; j++) {\n                        child2 = children[j];\n                        if (child2.id == \"nftcontainer_\" + _vaultId + \"_\" + _tkID) {\n\n                          if (isMobile) {\n                            child2.className = \"nftcontainer-mobile NitroEffect\";\n                          }\n                          else {\n                            child2.className = \"nftcontainer NitroEffect\";\n                          }\n\n                          break;\n                        }\n                      }\n                      break;\n                    }\n                  }\n                }\n              }\n              catch (nitro_ex) {\n                console.log(\"no nitro equip\", _nitroStakeRemaining, nitro_ex);\n              }\n            }\n          }\n          catch (ex1) {\n            console.log(\"Error in RewardInquiry - Detailed: \");\n          }\n        }\n      }\n      catch (ex) {\n        //console.log(\"Error on RewardInquiry\");\n        //console.log(ex);\n      }\n      return _stakeCount;\n    }\n\n    async function UnstakeMenuControl(btnBack, btnClaim, btnUnstake) {\n      var _btnBack = document.getElementById(\"btnBack\");\n      var _btnClaim = document.getElementById(\"btnClaimSelected\");\n      var _btnUnstake = document.getElementById(\"btnUnstakeSelected\");\n\n      if ((btnBack == false) && (btnClaim == false) && (btnUnstake == false)) {\n        document.getElementById(\"btnUnstakeMenu\").style.display = \"none\";\n      }\n      else {\n        document.getElementById(\"btnUnstakeMenu\").style.display = \"\";\n      }\n\n      if (btnBack == false) {\n        _btnBack.setAttribute(\"disabled\", \"disabled\");\n        _btnBack.classList.add(\"disabled\");\n      }\n      else {\n        _btnBack.removeAttribute('disabled');\n        _btnBack.classList.remove(\"disabled\");\n      }\n\n      if (btnClaim == false) {\n        _btnClaim.setAttribute(\"disabled\", \"disabled\");\n        _btnClaim.classList.add(\"disabled\");\n      }\n      else {\n        _btnClaim.removeAttribute('disabled');\n        _btnClaim.classList.remove(\"disabled\");\n      }\n\n      if (btnUnstake == false) {\n        _btnUnstake.setAttribute(\"disabled\", \"disabled\");\n        _btnUnstake.classList.add(\"disabled\");\n      }\n      else {\n        _btnUnstake.removeAttribute('disabled');\n        _btnUnstake.classList.remove(\"disabled\");\n      }\n    }\n\n    async function stakeVaults(tab_container) {\n      await delay();\n\n      var _account = stakingnft_address;\n      resultAPICall = await APICall(_account, scannerAPI);\n\n      await UnstakeMenuControl(false, false, false);\n\n      const DivContainer = document.getElementById(tab_container);\n      DivContainer.innerHTML = \"\";\n\n      rewardInDetail = false;\n      var usrVaultCount = 0;\n      var usrCurrVault = null;\n      var _vaultContract = null;\n\n      //Check Number of Vault Stake of user\n      for (let i = 0; i < resultAPICall.result.length; i++) {\n        if (resultAPICall.result[i].type == \"ERC-721\" && nitroboost_address.toUpperCase() != resultAPICall.result[i].contractAddress.toUpperCase()) {\n          var contractAdress = resultAPICall.result[i].contractAddress;\n          var _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n\n          nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, contractAdress);\n          var balanceOfVault = await nftcontract.methods.balanceOf(_account).call();\n\n          for (var j = 0; j < balanceOfVault; j++) {\n            var _tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, j).call();\n            var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n            if (_nftStakeInfo.owner == account) {\n              usrVaultCount++;\n              usrCurrVault = _vaultId;\n              _vaultContract = contractAdress;\n              break;\n            }\n          }\n        }\n      }\n\n      if (usrVaultCount == 1) {\n        rewardInDetail = true;\n        await modifyVault(usrCurrVault, _vaultContract);\n      }\n      else {\n\n        for (let i = 0; i < resultAPICall.result.length; i++) {\n          if (resultAPICall.result[i].type == \"ERC-721\" && nitroboost_address.toUpperCase() != resultAPICall.result[i].contractAddress.toUpperCase()) {\n\n            var contractAdress = resultAPICall.result[i].contractAddress;\n            var _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n            var _vaultInfo = await stakingnftcontract.methods.Vault(_vaultId).call();\n\n            if (_vaultInfo.active) {\n              nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, contractAdress);\n              var nftName = await nftcontract.methods.name().call();\n              var balanceOfVault = await nftcontract.methods.balanceOf(_account).call();\n              var symbol = await rewardcontract.methods.symbol().call();\n\n              var _tkID = 0;\n              var _stakeCount = 0;\n              for (var j = 0; j < balanceOfVault; j++) {\n                _tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, j).call();\n\n                var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, _tkID).call();\n\n                if (_nftStakeInfo.owner == account) {\n                  _stakeCount++;\n\n                  if (_stakeCount > 0) {\n                    let tokenMetadataURI = await nftcontract.methods.tokenURI(_tkID).call();\n                    if (tokenMetadataURI.startsWith(\"ipfs://\")) {\n                      tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI.split(\"ipfs://\")[1]}`;\n                    }\n                    else if (tokenMetadataURI.startsWith(\"https://gateway.pinata.cloud/ipfs/\")) {\n                      tokenMetadataURI = tokenMetadataURI.replace(`https://gateway.pinata.cloud/ipfs/`, ``);\n                      tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI}${1}`;\n                    }\n                    var tokenMetadata = await fetch(tokenMetadataURI).then((response) => response.json());\n\n                    (async function () {\n                      const cardVault = document.createElement('div');\n                      cardVault.className = \"vault_container\";\n                      cardVault.id = contractAdress;\n                      cardVault.value = _vaultId;\n\n                      const cardVaultCard = document.createElement('div');\n                      if (isMobile) {\n                        cardVaultCard.className = \"vault_card-mobile\";\n                      }\n                      else {\n                        cardVaultCard.className = \"vault_card\";\n                      }\n\n                      const cardVaultFront = document.createElement('div');\n                      cardVaultFront.className = \"vault_front parent\";\n\n                      var imgNFT\n                      if (tokenMetadata[\"image\"].includes(\"mp4\")) {\n                        imgNFT = document.createElement('video');\n\n                        const vid_source = document.createElement(\"source\");\n\n                        if (tokenMetadata[\"image\"].startsWith(\"ipfs://\")) {\n                          vid_source.setAttribute(\"src\", `https://ipfs.io/ipfs/${tokenMetadata[\"image\"].split(\"ipfs://\")[1]}`);\n                        }\n                        else {\n                          vid_source.setAttribute(\"src\", tokenMetadata[\"image\"]);\n                        }\n                        vid_source.setAttribute(\"type\", \"video/mp4\");\n                        imgNFT.appendChild(vid_source);\n                      }\n                      else {\n                        imgNFT = document.createElement('img');\n                        imgNFT.setAttribute(\"src\", tokenMetadata[\"image\"]);\n                      }\n                      imgNFT.setAttribute(\"alt\", contractAdress);\n\n                      const cardVaultDetails = document.createElement('div');\n                      cardVaultDetails.className = \"vault_details\";\n\n                      const cardH4 = document.createElement('h5');\n                      cardH4.style.color = \"white\";\n                      cardH4.innerHTML = nftName + \" Vault\";\n\n                      const cardSpan = document.createElement('span');\n                      cardSpan.className = \"spanX\"\n                      cardSpan.id = \"Pending\" + contractAdress;\n                      cardSpan.style.color = \"white\";\n                      cardSpan.innerHTML = \"\";\n\n                      cardVaultDetails.appendChild(cardH4);\n                      cardVaultDetails.appendChild(cardSpan);\n\n                      cardVaultFront.appendChild(imgNFT);\n                      cardVaultFront.appendChild(cardVaultDetails);\n\n                      const cardVaultBack = document.createElement('div');\n                      cardVaultBack.className = \"vault_back\";\n\n                      const cardButtonClaim = document.createElement('a');\n                      cardButtonClaim.style.color = \"white\";\n                      cardButtonClaim.innerHTML = \"Claim All\";\n                      cardButtonClaim.onclick = function () { claimVault(cardVault.value); }\n\n                      const cardButtonUnstake = document.createElement('a');\n                      cardButtonUnstake.style.color = \"white\";\n                      cardButtonUnstake.innerHTML = \"Unstake All\";\n                      cardButtonUnstake.onclick = function () { unstakeVault(cardVault.value); }\n\n                      const cardButtonModify = document.createElement('a');\n                      cardButtonModify.style.color = \"white\";\n                      cardButtonModify.innerHTML = \"Modify\";\n                      cardButtonModify.onclick = function () { modifyVault(cardVault.value, cardVault.id); }\n\n                      cardVaultBack.appendChild(cardButtonClaim);\n                      cardVaultBack.appendChild(cardButtonUnstake);\n                      cardVaultBack.appendChild(cardButtonModify);\n\n                      cardVaultCard.appendChild(cardVaultFront);\n                      cardVaultCard.appendChild(cardVaultBack);\n\n                      cardVault.appendChild(cardVaultCard);\n\n                      DivContainer.appendChild(cardVault);\n                    })();\n                  }\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n\n    }\n\n    async function listNFT(_account, tab_container, jsonParsedContents, filterList) {\n      try {\n        var userNFTHold = 0;\n        var btnStakeAll = document.getElementById(\"btnStakeAll\");\n        var btnStakeSelected = document.getElementById(\"btnStakeSelected\");\n\n        document.getElementById(tab_container).innerHTML = \"\";\n\n        console.log(\"filterList: \", filterList);\n\n        if (filterList == \"All\" || filterList == \"All Owned NFT\") {\n          btnStakeAll.setAttribute('disabled', 'disabled');\n          btnStakeSelected.setAttribute('disabled', 'disabled');\n\n          //Populate List NFT \n          if (jsonParsedContents != null) {\n            for (var key in CONFIGWhitelist.NFT) {\n              for (let i = 0; i < jsonParsedContents.result.length; i++) {\n                if (jsonParsedContents.result[i].type == \"ERC-721\") {\n                  if (CONFIGWhitelist.NFT[key].ADDRESS == jsonParsedContents.result[i].contractAddress) {\n                    nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, jsonParsedContents.result[i].contractAddress);\n                    userNFTHold = userNFTHold + (await ShowNFTCard(tab_container, nftcontract, jsonParsedContents.result[i].contractAddress, _account));  //myHoldNFT\n                    break;\n                  }\n                }\n              }\n            }\n\n            //All other ERC-721\n            var ctr;\n            for (let i = 0; i < jsonParsedContents.result.length; i++) {\n              if (jsonParsedContents.result[i].type == \"ERC-721\" && nitroboost_address.toUpperCase() != jsonParsedContents.result[i].contractAddress.toUpperCase()) {\n                ctr = 0;\n                for (var key in CONFIGWhitelist.NFT) {\n                  if (CONFIGWhitelist.NFT[key].ADDRESS != jsonParsedContents.result[i].contractAddress) {\n                    ctr++;\n                  }\n                }\n                if (ctr >= CONFIGWhitelist.NFT.length) {\n                  nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, jsonParsedContents.result[i].contractAddress);\n                  userNFTHold = userNFTHold + (await ShowNFTCard(tab_container, nftcontract, jsonParsedContents.result[i].contractAddress, _account));  //myHoldNFT\n                }\n              }\n            }\n          }\n        }\n        else {\n          nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, filterList);\n\n          console.log(await nftcontract.methods.name().call());\n\n          userNFTHold = userNFTHold + (await ShowNFTCard(tab_container, nftcontract, filterList, _account));  //myHoldNFT\n          btnStakeAll.removeAttribute('disabled');\n          btnStakeSelected.removeAttribute('disabled');\n        }\n\n        if (userNFTHold == 0) {\n          ShowNFTError(\"NO NFT SCANNED.\");\n        }\n      }\n\n      catch (ex) {\n        console.log('listNFT - SeeError - ' + ex);\n        ShowNFTError(ex);\n      }\n    }\n\n    async function ABIFetch(web3, _abi, _address) {\n      var _contract;\n      var ABIResponse;\n\n      ABIResponse = await fetch(_abi, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      });\n      const ABIJSON = await ABIResponse.json();\n      _contract = new web3.eth.Contract(ABIJSON, _address);\n      return _contract;\n    }\n\n    async function listNFTFilter(jsonParsedContents) {\n      var lstNFT = document.getElementById(\"nftFilter\");\n      lstNFT.innerHTML = \"\";\n\n      for (let i = 0; i < jsonParsedContents.result.length; i++) {\n        if (i == 0) {\n          var z_1 = document.createElement(\"option\");\n          z_1.setAttribute(\"value\", \"All\");\n          var t_1 = document.createTextNode(\"All Owned NFT\");\n\n          z_1.appendChild(t_1);\n          lstNFT.appendChild(z_1);\n        }\n\n        if (jsonParsedContents.result[i].type == \"ERC-721\" && jsonParsedContents.result[i].balance > 0 && nitroboost_address.toUpperCase() != jsonParsedContents.result[i].contractAddress.toUpperCase()) {\n          var z = document.createElement(\"option\");\n          z.setAttribute(\"value\", jsonParsedContents.result[i].contractAddress);\n\n          var t = document.createTextNode(jsonParsedContents.result[i].name + \": \" + jsonParsedContents.result[i].balance);\n          z.appendChild(t);\n\n          lstNFT.appendChild(z);\n        }\n\n      }\n    }\n\n    async function fetchNFTImage(nftcontract, _account, tkID, _caller) {\n      var tokenMetadata = null;\n      try {\n        let tokenMetadataURI = await nftcontract.methods.tokenURI(tkID).call();\n        if (tokenMetadataURI.startsWith(\"ipfs://\")) {\n          tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI.split(\"ipfs://\")[1]}`;\n        }\n        else if (tokenMetadataURI.startsWith(\"https://gateway.pinata.cloud/ipfs/\")) {\n          tokenMetadataURI = tokenMetadataURI.replace(`https://gateway.pinata.cloud/ipfs/`, ``);\n          tokenMetadataURI = `https://ipfs.io/ipfs/${tokenMetadataURI}${tkID}`;\n        }\n        tokenMetadata = await fetch(tokenMetadataURI).then((response) => response.json());\n      }\n      catch (ex) {\n        console.log('Caller - ' + _caller);\n        console.log(ex);\n      }\n\n      return tokenMetadata;\n\n    }\n\n    async function ShowNFTCard(tab_container, nftcontract, contractAdress, _account, isStaked) {\n      var nftName = await nftcontract.methods.name().call();\n      var balanceOfOwner = await nftcontract.methods.balanceOf(_account).call();\n      var DivContainer = document.getElementById(tab_container);\n      var nftcontainer;\n      var objNFTPend;\n      var objNFTNitroEquip;\n      var btnPowerUp;\n      var imgNFT;\n\n      var mismatchNFT;\n      console.log(\"ShowNFTCard>>\", nftName);\n\n      try {\n        for (let i = 0; i < balanceOfOwner; i++) {\n          (async function () {\n            try {\n              var tkID = await nftcontract.methods.tokenOfOwnerByIndex(_account, i).call();\n              const tokenMetadata = await fetchNFTImage(nftcontract, _account, tkID, 'ShowNFTCard');\n              var _vaultId = await stakingnftcontract.methods.getVaultId(contractAdress).call();\n\n              var _checkAdd = stakingnftcontract.methods.Vault(_vaultId).call();\n              mismatchNFT = false;\n              if (_checkAdd.nftAddress != contractAdress) {\n                mismatchNFT = true;\n              }\n\n              var _nftStakeInfo = await stakingnftcontract.methods.nftStake(_vaultId, tkID).call();\n              if (isStaked) {\n                if (_nftStakeInfo.owner != account) {\n                  return;\n                }\n              }\n\n              nftcontainer = document.createElement(\"div\");\n              nftcontainer.id = \"nftcontainer_\" + _vaultId + \"_\" + tkID;\n              //nftcontainer.className = \"parent nftcontainer\";\n              if (isMobile) {\n                nftcontainer.className = \"nftcontainer-mobile\";\n              }\n              else {\n                nftcontainer.className = \"parent nftcontainer\";\n              }\n\n              const nftdetail = document.createElement('div');\n              nftdetail.id = \"nftdetail_\" + _vaultId + \"_\" + tkID;\n              nftdetail.className = \"nftdetail\";\n\n              const chk = document.createElement(\"INPUT\");\n              chk.setAttribute(\"type\", \"checkbox\");\n              chk.id = contractAdress + \"_\" + tkID;\n              chk.class = \"unlisted\";\n\n              const lbl = document.createElement(\"LABEL\");\n              lbl.className = \"parent\";\n              lbl.htmlFor = chk.id;\n\n              if (tokenMetadata[\"image\"].includes(\"mp4\")) {\n                imgNFT = document.createElement('video');\n              }\n              else {\n                imgNFT = document.createElement('img');\n              }\n              if (isMobile) {\n                imgNFT.className = \"image-mobile\";\n              }\n              else {\n                imgNFT.className = \"image\";\n              }\n\n              if (tokenMetadata[\"image\"].includes(\"mp4\")) {\n\n                const vid_source = document.createElement(\"source\");\n                if (tokenMetadata[\"image\"].startsWith(\"ipfs://\")) {\n                  vid_source.setAttribute(\"src\", `https://ipfs.io/ipfs/${tokenMetadata[\"image\"].split(\"ipfs://\")[1]}`);\n                }\n                else {\n                  vid_source.setAttribute(\"src\", tokenMetadata[\"image\"]);\n                }\n\n                vid_source.setAttribute(\"type\", \"video/mp4\");\n                imgNFT.appendChild(vid_source);\n              }\n              else {\n                var _imgFix = tokenMetadata[\"image\"];\n                if (_imgFix.startsWith(\"ipfs://\")) {\n                  _imgFix = `https://ipfs.io/ipfs/${_imgFix.replace(\"ipfs://\", '')}`\n                }\n                imgNFT.setAttribute(\"src\", _imgFix);\n              }\n\n\n              imgNFT.setAttribute(\"alt\", \"Error loading image\");  //contractAdress);\n\n              const objNFT = document.createElement('h6');\n              objNFT.className = \"h6nftName\";\n              objNFT.innerHTML = (nftName.length > 20 ? nftName.substring(1, 20) : nftName) + ` #` + (tkID.length > 5 ? tkID.substring(1, 5) : tkID);\n\n              lbl.appendChild(imgNFT);\n              nftcontainer.appendChild(chk);\n              nftcontainer.appendChild(lbl);\n\n              nftcontainer.appendChild(nftdetail);\n              nftdetail.appendChild(objNFT);\n\n              /* Begin - For Staked NFT Only */\n              if (isStaked) {\n\n\n                objNFTPend = document.createElement('h6');\n                objNFTPend.className = \"h6pendingEarn\";\n                objNFTPend.id = \"pend\" + _vaultId + tkID;\n                objNFTPend.innerHTML = \"\";\n\n                objNFTNitroEquip = document.createElement('h6');\n                objNFTNitroEquip.className = \"h6nitroEquip\";\n                objNFTNitroEquip.id = \"nitro\" + _vaultId + tkID;\n                objNFTNitroEquip.innerHTML = \"\";\n\n                btnPowerUp = document.createElement('button');\n                btnPowerUp.type = \"button\";\n                btnPowerUp.className = \"powerUpButton\";\n                btnPowerUp.style = \"{{ fontFamily: 'SF Pro Display' }}\";\n                btnPowerUp.innerHTML = \"+\";\n\n                btnPowerUp.onclick = function () {\n                  showPrompt(_vaultId + \"|\" + tkID, function (value) {\n                  });\n                };\n                nftdetail.appendChild(objNFTPend)\n                nftdetail.appendChild(objNFTNitroEquip)\n                nftcontainer.appendChild(btnPowerUp)\n              }\n              /* End - For Staked NFT Only */\n\n              /*Put Transfer NFT if Not Staked*/\n              else {\n\n                btnPowerUp = document.createElement('button');\n                btnPowerUp.type = \"button\";\n                btnPowerUp.className = \"powerUpButton\";\n                btnPowerUp.style = \"{{ fontFamily: 'SF Pro Display' }}\";\n                btnPowerUp.innerHTML = \"+\";\n\n                if (mismatchNFT) {\n                  btnPowerUp.onclick = function () {\n                    showPromptTransfer(\"-1|\" + tkID + \"|\" + contractAdress, function (value) {\n                    });\n                  };\n                }\n                else {\n                  btnPowerUp.onclick = function () {\n                    showPromptTransfer(_vaultId + \"|\" + tkID + \"|\" + contractAdress, function (value) {\n                    });\n                  };\n                }\n\n                nftcontainer.appendChild(btnPowerUp)\n              }\n\n\n              DivContainer.appendChild(nftcontainer);\n\n\n            }\n            catch (ex2) {\n              ShowNFTError(nftName + \" - Error on reading token URI\");\n              console.log('ShowNFTErrorCard', ex2);\n            }\n\n          })();\n        }\n\n        return balanceOfOwner;\n      }\n      catch (ex) {\n        console.log('Error on ShowNFTCard', ex);\n      }\n    }\n\n    async function UnstakeSelected() {\n      ClaimThem(true);\n    }\n\n    async function ClaimSelected() {\n      ClaimThem(false);\n    }\n\n    async function BackToCollection() {\n      stakeVaults('staked-nft-container');\n    }\n\n    async function ClaimThem(unstake) {\n      try {\n        await delay();\n        await onGoingNotif(\"Pending...\");\n\n        const DivContainer = document.getElementById('staked-nft-container');\n        var children = DivContainer.getElementsByTagName('*');\n        var elements = [], child;\n        for (var i = 0; i < children.length; i++) {\n          child = children[i];\n          if (child.type == \"checkbox\" && child.checked == true) {\n            elements.push(child);\n          }\n        }\n\n        var tkIDs = [];\n        var _vaultId;\n\n        //loop for getting staked vault\n        for (var j = 0; j < elements.length; j++) {\n          var nft = [];\n          nft = elements[j].id.split(\"_\");\n          _vaultId = await stakingnftcontract.methods.getVaultId(nft[0]).call();\n\n          tkIDs.push(nft[1]);\n        }\n\n        if (unstake) {\n          await stakingnftcontract.methods.unstake(_vaultId, tkIDs).send({ from: account });\n        }\n        else {\n          await stakingnftcontract.methods.claim(_vaultId, tkIDs).send({ from: account });\n        }\n\n      }\n      catch (ex) {\n        console.log(\"ClaimThem - \" + ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function StakeAll() {\n      const DivContainer = document.getElementById('unstaked-nft-container');\n      var children = DivContainer.getElementsByTagName('*');\n      var elements = [], child;\n      for (var i = 0; i < children.length; i++) {\n        child = children[i];\n        if (child.type == \"checkbox\") {\n          elements.push(child);\n        }\n      }\n\n      if (elements.length == 0) {\n        return;\n      }\n\n      var _isNFTAppr = false;\n      var address;\n      var tkIDs = [];\n\n      var _reject = false;\n\n      for (var i = 0; i < elements.length; i++) {\n        var nft = [];\n        nft = elements[i].id.replace(\"chk\", \"\").split(\"_\");\n\n        if (_isNFTAppr == false) {\n          address = nft[0];\n          await onGoingNotif(\"Approve All\");\n          _isNFTAppr = await nftApproveAll(address);\n\n          if (_isNFTAppr == false) {\n            _reject = true;\n            await onGoingNotif(\"\");\n            return;\n          }\n          await onGoingNotif(\"Pending...\");\n        }\n\n        tkIDs.push(nft[1]);\n      }\n\n      if (await isWhitelist(address)) {\n        var _vaultId = await stakingnftcontract.methods.getVaultId(address).call();\n        await stakingnftcontract.methods.stake(_vaultId, tkIDs).send({ from: account });\n      }\n      else {\n        await stakingnftcontract.methods.stakeAny(address, tkIDs).send({ from: account });\n      }\n      await refreshDAppView();\n      await onGoingNotif(\"\");\n\n\n    }\n\n    async function StakeThem() {\n      try {\n        await onGoingNotif(\"Pending...\");\n\n        const DivContainer = document.getElementById('unstaked-nft-container');\n        var children = DivContainer.getElementsByTagName('*');\n        var elements = [], child;\n        for (var i = 0; i < children.length; i++) {\n          child = children[i];\n          if (child.type == \"checkbox\" && child.checked == true) {\n            elements.push(child);\n          }\n        }\n\n        var _isNFTAppr = false;\n        var address;\n        var tkIDs = [];\n\n        var _reject = false;\n\n        for (var i = 0; i < elements.length; i++) {\n          var nft = [];\n          nft = elements[i].id.replace(\"chk\", \"\").split(\"_\");\n\n          if (_isNFTAppr == false) {\n            address = nft[0];\n            await onGoingNotif(\"Approve All\");\n            _isNFTAppr = await nftApproveAll(address);\n\n            if (_isNFTAppr == false) {\n              _reject = true;\n              await onGoingNotif(\"\");\n              return;\n            }\n            await onGoingNotif(\"Pending...\");\n          }\n          tkIDs.push(nft[1]);\n        }\n\n        if (await isWhitelist(address)) {\n          var _vaultId = await stakingnftcontract.methods.getVaultId(address).call();\n          await stakingnftcontract.methods.stake(_vaultId, tkIDs).send({ from: account });\n        }\n        else {\n          await stakingnftcontract.methods.stakeAny(address, tkIDs).send({ from: account });\n        }\n        await refreshDAppView();\n      }\n      catch (ex) {\n        console.log(\"StakeThem - \" + ex);\n      }\n      await onGoingNotif(\"\");\n\n    }\n\n    async function refreshDAppView() {\n      await RefreshCollection();\n      await listNFTFilter(resultAPICall);\n      await stakeVaults('staked-nft-container');\n    }\n\n    async function nftApproveAll(address) {\n      try {\n        var _nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, address);\n        var _isAppr = await _nftcontract.methods.isApprovedForAll(account, stakingnft_address).call();\n        if (_isAppr == false) {\n          await _nftcontract.methods.setApprovalForAll(stakingnft_address, true).send({ from: account })\n        }\n        return true;\n      }\n      catch (ex) {\n        console.log(address);\n        console.log(\"nftApproveAll - \" + ex);\n        return false;\n      }\n\n    }\n\n    async function isWhitelist(address) {\n      var _res = false;\n      try {\n        for (var key in CONFIGWhitelist.NFT) {\n          if (CONFIGWhitelist.NFT[key].ADDRESS == address) {\n            _res = true;\n            break;\n          }\n        }\n      }\n      catch (ex) {\n        console.log(\"isWhitelist - \" + ex);\n      }\n      return _res;\n    }\n\n    async function ShowNFTError(msgValue) {\n      const DivContainer = document.getElementById('unstaked-nft-container');\n\n      const curDiv = document.createElement('div');\n      curDiv.className = \"nftcontainer\";  // mt-3 ml-3\";\n\n      const chk = document.createElement(\"INPUT\");\n      chk.setAttribute(\"type\", \"checkbox\");\n      chk.id = \"chk\";\n      chk.class = \"unlisted\";\n\n      const lbl = document.createElement(\"LABEL\");\n      lbl.htmlFor = chk.id;\n\n      const objNFT = document.createElement('h6');\n      objNFT.innerHTML = msgValue;\n      objNFT.className = \"errorMessage\";\n\n      curDiv.appendChild(chk);\n      curDiv.appendChild(lbl);\n\n      curDiv.appendChild(objNFT);\n      DivContainer.appendChild(curDiv);\n    }\n\n    async function showCover() {\n      let coverDiv = document.createElement('div');\n      coverDiv.id = 'cover-div';\n\n      // make the page unscrollable while the modal form is open\n      document.body.style.overflowY = 'hidden';\n      document.body.append(coverDiv);\n    }\n\n    async function SendNFT(nftAdd, destiAdd, tkID) {\n      try {\n        await onGoingNotif(\"Sending NFT...\");\n\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, nftAdd);\n        console.log(\"NFT: \", await nftcontract.methods.name().call());\n\n        await nftcontract.methods.safeTransferFrom(account, destiAdd, tkID).send({ from: account });\n        await refreshDAppView();\n\n        await onGoingNotif(\"\");\n      }\n      catch (ex) {\n        console.log(ex);\n        await onGoingNotif(\"\");\n      }\n    }\n\n    async function NitroAdd() {\n      await onGoingNotif(\"Pending...\");\n      try {\n        let DivContainer = document.getElementById('prompt-message');\n        var children = DivContainer.getElementsByTagName('*');\n        var child;\n\n        if (children.length > 0) {\n\n          var _isAppr = await nitrocontract.methods.isApprovedForAll(account, stakingnft_address).call();\n          if (_isAppr == false) {\n            await nitrocontract.methods.setApprovalForAll(stakingnft_address, true)\n              .send({\n                from: account,\n                gasLimit: String(totalGasLimit)\n              })\n          }\n\n          for (var i = 0; i < children.length; i++) {\n            child = children[i];\n            if (child.type == \"radio\" && child.checked == true) {\n              var nft = [];\n              nft = child.id.split(\"|\");\n\n              var _vaultId = nft[0];\n              var _tkID = nft[1];\n              var _nitroId = nft[2];\n\n              await stakingnftcontract.methods.stakeNitro(_vaultId, _tkID, _nitroId)\n                .send({\n                  from: account,\n                  gasLimit: String(totalGasLimit)\n                });\n              break;\n            }\n          }\n        }\n      }\n      catch (ex) {\n        console.log(ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function hideCover() {\n      try {\n        document.getElementById('cover-div').remove();\n        document.body.style.overflowY = '';\n      }\n      catch (ex) {\n      }\n    }\n\n    async function showPromptTransfer(text, callback) {\n      showCover();\n      var _nft = [];\n      _nft = text.split(\"|\");\n      var _vaultId = _nft[0];\n\n      var _vault;\n      if (_vaultId == -1) {\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _nft[2]);\n      }\n      else {\n        _vault = await stakingnftcontract.methods.Vault(_vaultId).call();\n        nftcontract = await ABIFetch(web3, ABI.ERC721.ABI, _vault.nftAddress);\n      }\n\n      var _nftName = await nftcontract.methods.name().call();\n\n\n      let form = document.getElementById('prompt-form');\n      let container = document.getElementById('prompt-form-container');\n      let msg = document.getElementById('prompt-message');\n\n      var h6NFTAddy = document.createElement('h5');\n      h6NFTAddy.className = \"h6Nitro\";\n\n      var txAdd;\n      if (_vaultId == -1) {\n        h6NFTAddy.innerHTML = _nftName + \" #\" + _nft[1] + \"<br>\" + _nft[2] + \"<br>\";\n        txAdd = _nft[2];\n      }\n      else {\n        h6NFTAddy.innerHTML = _nftName + \" #\" + _nft[1] + \"<br>\" + _vault.nftAddress + \"<br>\";\n        txAdd = _vault.nftAddress;\n      }\n\n      var h6Caption = document.createElement('h6');\n      h6Caption.className = \"h6Nitro\";\n      h6Caption.innerHTML = \"Transfer NFT to (Input Wallet Address)\";\n\n      var x = document.createElement(\"INPUT\");\n      x.id = text;\n      x.placeholder = \"0x0000000000000000000000000000000000000000\";\n      x.setAttribute(\"type\", \"text\");\n\n      var curDiv = document.createElement('div');\n      curDiv.className = \"transfer-nft\";\n      msg.className = \"\";\n      msg.innerHTML = \"\";\n\n      var btnSubmit = document.getElementById('btnSubmit');\n      btnSubmit.value = \"Send\";\n\n      curDiv.appendChild(h6NFTAddy);\n      curDiv.appendChild(h6Caption);\n      curDiv.appendChild(x);\n\n      msg.appendChild(curDiv);\n\n\n      function complete(value) {\n        if (value == \"submit\") {\n          SendNFT(txAdd, x.value, _nft[1]);\n        }\n        hideCover();\n        container.style.display = 'none';\n        document.onkeydown = null;\n        callback(value);\n      }\n\n      form.onsubmit = function () {\n        let value = \"submit\";\n        complete(value);\n        return false;\n      };\n\n      form.cancel.onclick = function () {\n        complete(null);\n      };\n\n      document.onkeydown = function (e) {\n        if (e.key == 'Escape') {\n          complete(null);\n        }\n      };\n      container.style.display = 'block';\n    }\n\n    async function showLoading() {\n      let form = document.getElementById('prompt-form');\n      let container = document.getElementById('prompt-form-container');\n\n      let DivContainer = document.getElementById('prompt-message');\n\n      showCover();\n      //DivContainer.className = \"scroll\";\n      DivContainer.innerHTML = \"\";\n\n      const lbl = document.createElement(\"LABEL\");\n      lbl.className = \"parent\";\n\n      let img = document.createElement('img');\n      img.setAttribute(\"src\", 'loading.gif');\n\n      let curDiv = document.createElement('div');\n      curDiv.className = \"nitrocontainer\";\n\n      lbl.appendChild(img);\n      curDiv.appendChild(lbl);\n      DivContainer.appendChild(curDiv);\n\n      container.style.display = 'block';\n\n      console.log(DivContainer);\n    }\n\n    async function showPrompt(text, callback) {\n      let form = document.getElementById('prompt-form');\n      let container = document.getElementById('prompt-form-container');\n      let DivContainer = document.getElementById('prompt-message');\n      var curDiv;\n      var contractAdress;\n      var balanceOfOwner = await nitrocontract.methods.balanceOf(account).call();\n\n      showCover();\n\n      curDiv = document.createElement('div');\n      contractAdress = await nitrocontract.methods.symbol().call();\n      DivContainer.className = \"scroll\";\n      DivContainer.innerHTML = \"\";\n\n      for (let i = 0; i < balanceOfOwner; i++) {\n        (async function () {\n          try {\n            var tkID = await nitrocontract.methods.tokenOfOwnerByIndex(account, i).call();\n\n            curDiv = document.createElement('div');\n            curDiv.className = \"nitrocontainer mt-3\";\n\n            const chk = document.createElement(\"INPUT\");\n            chk.setAttribute(\"type\", \"radio\");\n            //vault | token | nitroID\n            chk.id = text + '|' + tkID;\n            chk.class = \"unlisted\";\n            chk.name = \"nitro\";\n\n            const lbl = document.createElement(\"LABEL\");\n            lbl.htmlFor = chk.id;\n\n            var imgNFT = document.createElement('img');\n            imgNFT.setAttribute(\"src\", \"./nitrocommon.gif\");\n            imgNFT.setAttribute(\"alt\", contractAdress);\n            imgNFT.style.width = \"100px\";\n\n            const div = document.createElement('div');\n            div.className = \"nftdetail\";\n\n            const objNFT = document.createElement('h6');\n\n            curDiv.appendChild(chk);\n            curDiv.appendChild(lbl);\n            lbl.appendChild(imgNFT)\n            curDiv.appendChild(objNFT);\n            curDiv.appendChild(div);\n            div.appendChild(objNFT)\n\n            DivContainer.appendChild(curDiv);\n\n          }\n          catch (ex2) {\n            console.log(ex2);\n          }\n\n        })();\n      }\n\n      function complete(value) {\n        if (value == \"submit\") {\n          NitroAdd();\n        }\n        hideCover();\n        container.style.display = 'none';\n        document.onkeydown = null;\n        callback(value);\n      }\n\n      form.onsubmit = function () {\n        let value = \"submit\";\n        complete(value);\n        return false;\n      };\n\n      form.cancel.onclick = function () {\n        complete(null);\n      };\n\n      document.onkeydown = function (e) {\n        if (e.key == 'Escape') {\n          complete(null);\n        }\n      };\n      container.style.display = 'block';\n    }\n\n    async function NitroMint(pID) {\n      try {\n        await onGoingNotif(\"Pending...\");\n\n        if (amtNitro > 0) {\n\n          var totalCostWei = 0;\n          var totalCost = await nitrocontract.methods.getNFTCost(pID).call();\n          var _allow = await rewardcontract.methods.allowance(account, nitroboost_address).call();\n          var _maxSupp = await rewardcontract.methods.totalSupply().call();\n          totalCost = Web3.utils.fromWei(totalCost) * amtNitro;\n          totalCostWei = Web3.utils.toWei(String(totalCost));\n\n          if (totalCostWei >= _allow) {\n            await onGoingNotif(\"Approval...\");\n            await rewardcontract.methods.approve(nitroboost_address, _maxSupp)\n              .send({ from: account });\n            await onGoingNotif(\"Pending...\");\n          }\n          await nitrocontract.methods\n            .mint(amtNitro, pID)\n            .send({\n              gasLimit: String(totalGasLimit * amtNitro),\n              to: nitroboost_address,\n              from: account\n            });\n        }\n      }\n      catch (ex) {\n        console.log(ex);\n      }\n      await onGoingNotif(\"\");\n    }\n\n    async function BtnSelected(amt) {\n      amtNitro = amt;\n    }\n\n    if (isMobile) {\n      return (\n        <div className=\"App nftapp\">\n          <nav class=\"navbar navbarfont navbar-expand-md navbar-dark bg-dark mb-1\" >\n            <div class=\"container-fluid\" style={{ fontFamily: \"SF Pro Display\" }}>\n              <a class=\"navbar-brand\" style={{ fontWeight: \"800\", fontSize: '15px' }} href=\"#\">\n                <img src=\"logo.png\" width=\"50\" />\n              </a>\n              <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n              </button>\n              <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n                <ul class=\"navbar-nav me-auto mb-2 px-3 mb-md-0\" style={{ fontSize: \"15px\" }}>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Dashboard</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Market Place</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\">Bridge NFTs</a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </nav>\n\n          <div className='container container-style-mobile mb-5'>\n            <div className='row'>\n              <body className='nftminter-mobile'>\n                <form>\n                  <div className='row p-2'>\n                    <h5 className='h5Nitro'>Mint Nitro NFT Here</h5>\n                  </div>\n                  <img src=\"./nitrocommon.gif\" width=\"100px\" />\n                  <h6 className='h6Nitro'>Select Nitro Quantity</h6>\n\n                  <ButtonGroup size=\"lg\"\n                    aria-label=\"First group\"\n                    name=\"amount\"\n                    style={{ boxShadow: \"1px 1px 5px #000000\" }}\n                    class=\"btn-group\"\n                  >\n                    <Button value=\"1\" onClick={function () { BtnSelected(1) }}>1</Button>\n                    <Button value=\"2\" onClick={function () { BtnSelected(2) }}>2</Button>\n                    <Button value=\"3\" onClick={function () { BtnSelected(3) }}>3</Button>\n                    <Button value=\"4\" onClick={function () { BtnSelected(4) }}>4</Button>\n                    <Button value=\"5\" onClick={function () { BtnSelected(5) }}>5</Button>\n                  </ButtonGroup>\n\n                  <h6 className='h6Nitro mt-3'>Pay with your preferred Crypto</h6>\n                  <div className=\"nitro-qty\" role=\"group\" id=\"btnNitroQty\" aria-label=\"Token Payment\" >\n                    <button type=\"button\" class=\"btn btn-primary\" id=\"btnCrudeOil\" onClick={function () { NitroMint(0) }}>CrudeOil</button>\n                    <button type=\"button\" class=\"btn btn-primary\" id=\"btnMartinB\" onClick={function () { NitroMint(1) }}>MartinB</button>\n                  </div>\n                </form>\n              </body>\n            </div>\n            <div className='row'>\n              <body className='nftstaker'>\n                <form style={{ fontFamily: \"SF Pro Display\" }} >\n                  <Tabs defaultActiveKey=\"second\" className=\"nav-pills nav-fill\">\n                    <Tab eventKey=\"first\" title=\"Unstaked NFT\">\n                      <div className='row items' >\n                        <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                          <div class=\"hold-nft-menu buttonmenu\" role=\"group\" aria-label=\"Hold NFT Menu\">\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnStakeSelected\" onClick={StakeThem}>Stake Selected</button>\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnStakeAll\" onClick={StakeAll}>Stake All</button>\n                            <select id=\"nftFilter\" style={{ fontSize: \"9px\" }} className='drpFilter btn-secondary' onChange={RefreshCollection}>\n                              <option selected class=\"selected\">JeepneyRushNFT</option>\n                              <option>All Owned NFT</option>\n                            </select>\n                          </div>\n                        </div>\n                      </div>\n                      <div className='col'>\n                        <div className='row items'>\n                          <div id='unstaked-nft-container' className='nft_card_view-mobile' />\n                        </div>\n                      </div>\n                    </Tab>\n                    <Tab eventKey=\"second\" title=\"Staked NFT\">\n                      <div className='row items' >\n                        <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                          <div class=\"hold-nft-menu buttonmenu\" id=\"btnUnstakeMenu\" role=\"group\" aria-label=\"Stake NFT Menu\">\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnBack\" onClick={BackToCollection}>Back</button>\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnClaimSelected\" onClick={ClaimSelected}>Claim Selected</button>\n                            <button type=\"button\" style={{ fontSize: \"9px\" }} class=\"btn btn-secondary\" id=\"btnUnstakeSelected\" onClick={UnstakeSelected}>Unstake Selected</button>\n                          </div>\n                        </div>\n                      </div>\n                      <div className='row items'>\n                        <div id='staked-nft-container' className='ml-3 mr-3 nft_card_view-mobile' />\n                      </div>\n                    </Tab>\n                  </Tabs>\n                </form>\n              </body>\n            </div>\n          </div>\n\n          <nav class=\"navbar navbarfont navbar-expand-md navbar-dark bg-dark fixed-float\" style={{ marginBottom: \"0px\", marginLeft: \"0px\", marginRight: \"0px\", clear: \"both\" }}>\n            <div class=\"navbar-inner\">\n              <div class=\"d-flex flex-row accountInfo\" style={{marginLeft: \"10px\"}}>\n                <div id=\"wallBal\" className=\"walletBalance\" />\n                <div id=\"btnConnect\" onClick={connectwallet} className=\"connectbutton ml-2\" type=\"button\" style={{ fontFamily: \"SF Pro Display\" }}>\n                  Connect Your Wallet\n                </div>\n              </div>\n\n            </div>\n          </nav>\n\n          <div id=\"prompt-form-container\" className='nft_card_view'>\n            <form id=\"prompt-form\">\n              <div className='add-booster'>\n                <div id=\"prompt-message\" className='scroll'></div>\n                <input name=\"btnSubmit\" id=\"btnSubmit\" type=\"submit\" value=\"Equip\"></input>\n                <input name=\"cancel\" id=\"cancel\" type=\"button\" value=\"Cancel\" />\n              </div>\n            </form>\n          </div>\n\n        </div>\n      );\n    }\n    else {\n      return (\n        <div className=\"App nftapp\">\n          <nav class=\"navbar navbarfont navbar-expand-md navbar-dark bg-dark mb-4\">\n            <div class=\"container-fluid\" style={{ fontFamily: \"SF Pro Display\" }}>\n              <a class=\"navbar-brand px-5\" style={{ fontWeight: \"800\", fontSize: '15px' }} href=\"#\"></a><img src=\"logo.png\" width=\"7%\" />\n              <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n              </button>\n              <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n                <ul class=\"navbar-nav me-auto mb-2 px-3 mb-md-0\" style={{ fontSize: \"15px\" }}>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Dashboard</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Market Place</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\">Bridge NFTs</a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div className='px-5'>\n              <div class=\"d-flex flex-row accountInfo\">\n                <div id=\"wallBal\" className=\"walletBalance\" />\n                <div id=\"btnConnect\" onClick={connectwallet} className=\"connectbutton ml-2\" type=\"button\" style={{ fontFamily: \"SF Pro Display\" }}>\n                  Connect Your Wallet\n                </div>\n              </div>\n            </div>\n          </nav>\n\n          <div className='container container-style'>\n            <div className='col'>\n              <body className='nftminter'>\n                <form>\n                  <div className='row p-2'>\n                    <h5 className='h5Nitro'>Mint Nitro NFT Here</h5>\n                  </div>\n                  <img src=\"./nitrocommon.gif\" width=\"100px\" />\n                  <h6 className='h6Nitro'>Select Nitro Quantity</h6>\n\n                  <ButtonGroup size=\"lg\"\n                    aria-label=\"First group\"\n                    name=\"amount\"\n                    style={{ boxShadow: \"1px 1px 5px #000000\" }}\n                    class=\"btn-group\"\n                  >\n                    <Button value=\"1\" onClick={function () { BtnSelected(1) }}>1</Button>\n                    <Button value=\"2\" onClick={function () { BtnSelected(2) }}>2</Button>\n                    <Button value=\"3\" onClick={function () { BtnSelected(3) }}>3</Button>\n                    <Button value=\"4\" onClick={function () { BtnSelected(4) }}>4</Button>\n                    <Button value=\"5\" onClick={function () { BtnSelected(5) }}>5</Button>\n                  </ButtonGroup>\n\n                  <h6 className='h6Nitro mt-3'>Pay with your preferred Crypto</h6>\n                  <div class=\"nitro-qty\" role=\"group\" id=\"btnNitroQty\" aria-label=\"Token Payment\">\n                    <button type=\"button\" class=\"btn btn-primary\" id=\"btnCrudeOil\" onClick={function () { NitroMint(0) }}>CrudeOil</button>\n                    <button type=\"button\" class=\"btn btn-primary\" id=\"btnMartinB\" onClick={function () { NitroMint(1) }}>MartinB</button>\n                  </div>\n                </form>\n              </body>\n\n            </div>\n            <div className='col'>\n              <table className='nftstaker'>\n                <tr>\n                  <body className='nftstaker'>\n                    <form style={{ fontFamily: \"SF Pro Display\" }} >\n                      <Tabs defaultActiveKey=\"second\" className=\"nav-pills nav-fill\">\n                        <Tab eventKey=\"first\" title=\"Unstaked NFT\">\n                          <div className='row items' >\n                            <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                              <div class=\"hold-nft-menu buttonmenu\" role=\"group\" aria-label=\"Hold NFT Menu\">\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnStakeSelected\" onClick={StakeThem}>Stake Selected</button>\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnStakeAll\" onClick={StakeAll}>Stake All</button>\n                                <select id=\"nftFilter\" className='drpFilter btn-secondary' onChange={RefreshCollection}>\n                                  <option selected class=\"selected\">JeepneyRushNFT</option>\n                                  <option>All Owned NFT</option>\n                                </select>\n                              </div>\n                            </div>\n                          </div>\n                          <div className='col'>\n                            <div className='row items'>\n                              <div id='unstaked-nft-container' className='nft_card_view' />\n                            </div>\n                          </div>\n                        </Tab>\n                        <Tab eventKey=\"second\" title=\"Staked NFT\">\n                          <div className='row items' >\n                            <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                              <div class=\"hold-nft-menu buttonmenu\" id=\"btnUnstakeMenu\" role=\"group\" aria-label=\"Stake NFT Menu\">\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnBack\" onClick={BackToCollection}>Back</button>\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnClaimSelected\" onClick={ClaimSelected}>Claim Selected</button>\n                                <button type=\"button\" class=\"btn btn-secondary\" id=\"btnUnstakeSelected\" onClick={UnstakeSelected}>Unstake Selected</button>\n                              </div>\n                            </div>\n                          </div>\n                          <div className='row items'>\n                            <div id='staked-nft-container' className='ml-3 mr-3 nft_card_view' />\n                          </div>\n                        </Tab>\n                      </Tabs>\n                    </form>\n                  </body>\n                </tr>\n              </table>\n\n            </div>\n          </div>\n\n          <div id=\"prompt-form-container\" className='nft_card_view'>\n            <form id=\"prompt-form\">\n              <div className='add-booster'>\n                <div id=\"prompt-message\" className='scroll'></div>\n                <input name=\"btnSubmit\" id=\"btnSubmit\" type=\"submit\" value=\"Equip\"></input>\n                <input name=\"cancel\" id=\"cancel\" type=\"button\" value=\"Cancel\" />\n              </div>\n            </form>\n          </div>\n\n          <footer>\n            {/* <div class=\"container\">\n              <div class=\"row secondary\"></div>\n            </div> */}\n            <div class=\"row copyright\">\n              <p>Copyright &copy; 2022 RushDapp SmartBCH | All Rights Reserved</p>\n            </div>\n\n          </footer>\n        </div>\n      );\n    }\n\n  };\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}